/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__classPrivateFieldGet\": () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   \"__classPrivateFieldIn\": () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   \"__classPrivateFieldSet\": () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   \"__createBinding\": () => (/* binding */ __createBinding),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__esDecorate\": () => (/* binding */ __esDecorate),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__propKey\": () => (/* binding */ __propKey),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__runInitializers\": () => (/* binding */ __runInitializers),\n/* harmony export */   \"__setFunctionName\": () => (/* binding */ __setFunctionName),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArray\": () => (/* binding */ __spreadArray),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__values\": () => (/* binding */ __values)\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nfunction __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nfunction __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nfunction __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nfunction __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\n\n//# sourceURL=webpack://feature-layer/./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _esri_arcgis_rest_feature_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @esri/arcgis-rest-feature-service */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/index.js\");\n\r\n\r\n\r\n/*\r\nconst getIdentity = async () => {\r\n  return await ArcGISIdentityManager.fromToken({\r\n    token:\"123\"\r\n  });\r\n};\r\n*/\r\n\r\nconst getIdentityKey = async () => {\r\n    return await _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.ApiKeyManager.fromKey('AAPK6b94cdfb127e45c4af821058afcc069ddl02lEjYxQnDnuK17AFzZ0sxdJaBH1Yijkj5cdvfDKKHbTJyL_jSJddv2hkcmVQP');\r\n};\r\n\r\nconsole.log(getIdentityKey);\n\n//# sourceURL=webpack://feature-layer/./src/index.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/add.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/add.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addFeatures\": () => (/* binding */ addFeatures)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Add features request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/add-features.htm) for more information.\n *\n * ```js\n * import { addFeatures } from '@esri/arcgis-rest-feature-service';\n * //\n * addFeatures({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   features: [{\n *     geometry: { x: -120, y: 45, spatialReference: { wkid: 4326 } },\n *     attributes: { status: \"alive\" }\n *   }]\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the addFeatures response.\n */\nfunction addFeatures(requestOptions) {\n    const url = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/addFeatures`;\n    // edit operations are POST only\n    const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\"features\", \"gdbVersion\", \"returnEditMoment\", \"rollbackOnFailure\"], { params: Object.assign({}, requestOptions.params) });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/add.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addAttachment.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addAttachment.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addAttachment\": () => (/* binding */ addAttachment)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Attach a file to a feature by id. See [Add Attachment](https://developers.arcgis.com/rest/services-reference/add-attachment.htm) for more information.\n *\n * ```js\n * import { addAttachment } from '@esri/arcgis-rest-feature-service';\n * //\n * addAttachment({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   featureId: 8484,\n *   attachment: myFileInput.files[0]\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the `addAttachment()` response.\n */\nfunction addAttachment(requestOptions) {\n    const options = Object.assign({ params: {} }, requestOptions);\n    // `attachment` --> params: {}\n    options.params.attachment = requestOptions.attachment;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(options.url)}/${options.featureId}/addAttachment`, options);\n}\n//# sourceMappingURL=addAttachment.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addAttachment.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addToServiceDefinition.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addToServiceDefinition.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addToServiceDefinition\": () => (/* binding */ addToServiceDefinition)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Add layer(s) and/or table(s) to a hosted feature service. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/add-to-definition-feature-service-.htm) for more information.\n *\n *  ```js\n * import { addToServiceDefinition } from '@esri/arcgis-rest-service-admin';\n * //\n * addToServiceDefinition(serviceurl, {\n *   authentication: ArcGISIdentityManager,\n *   layers: [],\n *   tables: []\n * });\n * ```\n *\n * @param url - URL of feature service\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with service layer and/or table details once the definition\n * has been updated\n */\nfunction addToServiceDefinition(url, requestOptions) {\n    const adminUrl = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(url).replace(`/rest/services`, `/rest/admin/services`)}/addToDefinition`;\n    requestOptions.params = Object.assign({ addToDefinition: {} }, requestOptions.params);\n    if (requestOptions.layers && requestOptions.layers.length > 0) {\n        requestOptions.params.addToDefinition.layers = requestOptions.layers;\n    }\n    if (requestOptions.tables && requestOptions.tables.length > 0) {\n        requestOptions.params.addToDefinition.tables = requestOptions.tables;\n    }\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(adminUrl, requestOptions);\n}\n//# sourceMappingURL=addToServiceDefinition.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addToServiceDefinition.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/applyEdits.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/applyEdits.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyEdits\": () => (/* binding */ applyEdits)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Apply edits request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/apply-edits-feature-service-layer-.htm) for more information.\n *\n * ```js\n * import { applyEdits } from '@esri/arcgis-rest-feature-service';\n * //\n * applyEdits({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   adds: [{\n *     geometry: { x: -120, y: 45, spatialReference: { wkid: 4326 } },\n *     attributes: { status: \"alive\" }\n *   }],\n *   updates: [{\n *     attributes: { OBJECTID: 1004, status: \"alive\" }\n *   }],\n *   deletes: [862, 1548]\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the applyEdits response.\n */\nfunction applyEdits(requestOptions) {\n    const url = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/applyEdits`;\n    // edit operations are POST only\n    const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\n        \"adds\",\n        \"updates\",\n        \"deletes\",\n        \"useGlobalIds\",\n        \"attachments\",\n        \"gdbVersion\",\n        \"returnEditMoment\",\n        \"rollbackOnFailure\",\n        \"trueCurveClient\"\n    ], { params: Object.assign({}, requestOptions.params) });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=applyEdits.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/applyEdits.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/createFeatureService.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/createFeatureService.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFeatureService\": () => (/* binding */ createFeatureService)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _esri_arcgis_rest_portal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @esri/arcgis-rest-portal */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/index.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Create a new [hosted feature service](https://developers.arcgis.com/rest/users-groups-and-items/create-service.htm). After the service has been created, call [`addToServiceDefinition()`](../addToServiceDefinition/) if you'd like to update it's schema.\n *\n * ```js\n * import {\n *   createFeatureService,\n *   addToServiceDefinition\n * } from '@esri/arcgis-rest-service-admin';\n * //\n * createFeatureService({\n *   authentication: ArcGISIdentityManager,\n *   item: {\n *     \"name\": \"NewEmptyService\",\n *     \"capabilities\": \"Create,Delete,Query,Update,Editing\"\n *   }\n * });\n * ```\n *\n * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n * @returns A Promise that resolves with service details once the service has been created\n */\nfunction createFeatureService(requestOptions) {\n    return (0,_esri_arcgis_rest_portal__WEBPACK_IMPORTED_MODULE_1__.determineOwner)(requestOptions).then((owner) => {\n        const options = Object.assign(Object.assign({}, requestOptions), { rawResponse: false });\n        const baseUrl = `${(0,_esri_arcgis_rest_portal__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}`;\n        const folder = !options.folderId || options.folderId === \"/\"\n            ? \"\"\n            : \"/\" + options.folderId;\n        const url = `${baseUrl}${folder}/createService`;\n        // Create the service\n        options.params = Object.assign({ createParameters: options.item, outputType: \"featureService\" }, options.params);\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n//# sourceMappingURL=createFeatureService.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/createFeatureService.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/decodeValues.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/decodeValues.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeValues\": () => (/* binding */ decodeValues)\n/* harmony export */ });\n/* harmony import */ var _getLayer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getLayer.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getLayer.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * ```js\n * import { queryFeatures, decodeValues } from '@esri/arcgis-rest-feature-service';\n * //\n * const url = `https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0`\n * queryFeatures({ url })\n *   .then(queryResponse => {\n *     decodeValues({\n *       url,\n *       queryResponse\n *     })\n *       .then(decodedResponse)\n *   })\n * ```\n * Replaces the raw coded domain values in a query response with descriptions (for legibility).\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the addFeatures response.\n */\nfunction decodeValues(requestOptions) {\n    let prms;\n    if (requestOptions.fields) {\n        prms = Promise.resolve(requestOptions.fields);\n    }\n    else {\n        prms = (0,_getLayer_js__WEBPACK_IMPORTED_MODULE_0__.getLayer)({ url: requestOptions.url }).then((metadata) => {\n            return metadata.fields;\n        });\n    }\n    return prms.then((fields) => {\n        // extract coded value domains\n        const domains = extractCodedValueDomains(fields);\n        if (Object.keys(domains).length < 1) {\n            // no values to decode\n            return requestOptions.queryResponse;\n        }\n        // don't mutate original features\n        const decodedFeatures = requestOptions.queryResponse.features.map((feature) => {\n            const decodedAttributes = {};\n            for (const key in feature.attributes) {\n                /* istanbul ignore next */\n                if (!Object.prototype.hasOwnProperty.call(feature.attributes, key))\n                    continue;\n                const value = feature.attributes[key];\n                const domain = domains[key];\n                decodedAttributes[key] =\n                    value !== null && domain ? decodeValue(value, domain) : value;\n            }\n            // merge decoded attributes into the feature\n            return Object.assign(Object.assign({}, feature), { attributes: decodedAttributes });\n        });\n        // merge decoded features into the response\n        return Object.assign(Object.assign({}, requestOptions.queryResponse), { features: decodedFeatures });\n    });\n}\nfunction extractCodedValueDomains(fields) {\n    return fields.reduce((domains, field) => {\n        const domain = field.domain;\n        if (domain && domain.type === \"codedValue\") {\n            domains[field.name] = domain;\n        }\n        return domains;\n    }, {});\n}\n// TODO: add type for domain?\nfunction decodeValue(value, domain) {\n    const codedValue = domain.codedValues.find((d) => {\n        return value === d.code;\n    });\n    return codedValue ? codedValue.name : value;\n}\n//# sourceMappingURL=decodeValues.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/decodeValues.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/delete.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/delete.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteFeatures\": () => (/* binding */ deleteFeatures)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Delete features request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/delete-features.htm) for more information.\n *\n * ```js\n * import { deleteFeatures } from '@esri/arcgis-rest-feature-service';\n * //\n * deleteFeatures({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   objectIds: [1,2,3]\n * });\n * ```\n *\n * @param deleteFeaturesRequestOptions - Options for the request.\n * @returns A Promise that will resolve with the deleteFeatures response.\n */\nfunction deleteFeatures(requestOptions) {\n    const url = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/deleteFeatures`;\n    // edit operations POST only\n    const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\n        \"where\",\n        \"objectIds\",\n        \"gdbVersion\",\n        \"returnEditMoment\",\n        \"rollbackOnFailure\"\n    ], { params: Object.assign({}, requestOptions.params) });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=delete.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/delete.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/deleteAttachments.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/deleteAttachments.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteAttachments\": () => (/* binding */ deleteAttachments)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Delete existing attachment files of a feature by id. See [Delete Attachments](https://developers.arcgis.com/rest/services-reference/delete-attachments.htm) for more information.\n *\n * ```js\n * import { deleteAttachments } from '@esri/arcgis-rest-feature-service';\n * //\n * deleteAttachments({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   featureId: 8484,\n *   attachmentIds: [306]\n * });\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the `deleteAttachments()` response.\n */\nfunction deleteAttachments(requestOptions) {\n    const options = Object.assign({ params: {} }, requestOptions);\n    // `attachmentIds` --> params: {}\n    options.params.attachmentIds = requestOptions.attachmentIds;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(options.url)}/${options.featureId}/deleteAttachments`, options);\n}\n//# sourceMappingURL=deleteAttachments.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/deleteAttachments.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAllLayersAndTables.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAllLayersAndTables.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllLayersAndTables\": () => (/* binding */ getAllLayersAndTables)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/helpers.js\");\n\n\n\n/**\n *  * Fetches all the layers and tables associated with a given layer service.\n * Wrapper for https://developers.arcgis.com/rest/services-reference/all-layers-and-tables.htm\n *\n * ```js\n * import { getAllLayersAndTables } from '@esri/arcgis-rest-feature-service';\n * getAllLayersAndTables({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\"\n * })\n *   .then(response) // { layers: [...], tables: [...] }\n * ```\n *\n * @param options - Request options, including the url for the layer service\n * @returns A Promise that will resolve with the layers and tables for the given service\n */\n// TODO: should we expand this to support other valid params of the endpoint?\nfunction getAllLayersAndTables(options) {\n    const { url } = options, requestOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(options, [\"url\"]);\n    const layersUrl = `${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.parseServiceUrl)(url)}/layers`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(layersUrl, requestOptions);\n}\n//# sourceMappingURL=getAllLayersAndTables.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAllLayersAndTables.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAttachments.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAttachments.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAttachments\": () => (/* binding */ getAttachments)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Request `attachmentInfos` of a feature by id. See [Attachment Infos](https://developers.arcgis.com/rest/services-reference/attachment-infos-feature-service-.htm) for more information.\n *\n * ```js\n * import { getAttachments } from '@esri/arcgis-rest-feature-service';\n * //\n * getAttachments({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   featureId: 8484\n * });\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the `getAttachments()` response.\n */\nfunction getAttachments(requestOptions) {\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    // pass through\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(options.url)}/${options.featureId}/attachments`, options);\n}\n//# sourceMappingURL=getAttachments.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAttachments.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getLayer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getLayer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLayer\": () => (/* binding */ getLayer)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Layer (Feature Service) request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/layer-feature-service-.htm) for more information.\n *\n * ```js\n * import { getLayer } from '@esri/arcgis-rest-feature-service';\n * //\n * getLayer({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\"\n * })\n *   .then(response) // { name: \"311\", id: 0, ... }\n * ```\n *\n * @param options - Options for the request.\n * @returns A Promise that will resolve with the addFeatures response.\n */\nfunction getLayer(options) {\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)((0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(options.url), options);\n}\n//# sourceMappingURL=getLayer.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getLayer.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getService.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getService.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getService\": () => (/* binding */ getService)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Feature Service request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/feature-service.htm) for more information.\n *\n * ```js\n * import { getService } from '@esri/arcgis-rest-feature-service';\n * //\n * getService({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer\"\n * })\n *   .then(response) // { name: \"311\", id: 0, ... }\n * ```\n *\n * @param options - Options for the request.\n * @returns A Promise that will resolve with the getService response.\n */\nfunction getService(options) {\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)((0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(options.url), options);\n}\n//# sourceMappingURL=getService.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getService.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getServiceAdminInfo.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getServiceAdminInfo.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getServiceAdminInfo\": () => (/* binding */ getServiceAdminInfo)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Given a Feature Service url, fetch the service admin information.\n *\n * The response from this call includes all the detailed information\n * for each layer/table in the service as well as some admin properties\n *\n * @export\n * @param {string} serviceUrl\n * @param {ArcGISIdentityManager} session\n * @return {*}  {Promise<IServiceInfo>}\n */\nfunction getServiceAdminInfo(serviceUrl, session) {\n    const serviceAdminUrl = serviceUrl.replace(\"/rest/services\", \"/rest/admin/services\");\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(serviceAdminUrl, {\n        authentication: session,\n        params: {\n            f: \"json\"\n        }\n    });\n}\n//# sourceMappingURL=getServiceAdminInfo.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getServiceAdminInfo.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getViewSources.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getViewSources.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getViewSources\": () => (/* binding */ getViewSources)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Return the sources response for a view service item\n *\n * @param {string} viewServiceUrl\n * @param {ArcGISIdentityManager} session\n * @return {*}  {Promise<Record<string, unknown>>}\n */\nfunction getViewSources(viewServiceUrl, session) {\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${viewServiceUrl}/sources`, { authentication: session });\n}\n//# sourceMappingURL=getViewSources.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getViewSources.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/helpers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/helpers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseServiceUrl\": () => (/* binding */ parseServiceUrl)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nconst serviceRegex = new RegExp(/.+(?:map|feature|image)server/i);\n/**\n * Return the service url. If not matched, returns what was passed in\n */\nfunction parseServiceUrl(url) {\n    const match = url.match(serviceRegex);\n    if (match) {\n        return match[0];\n    }\n    else {\n        return stripQueryString(url);\n    }\n}\nfunction stripQueryString(url) {\n    const stripped = url.split(\"?\")[0];\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(stripped);\n}\n//# sourceMappingURL=helpers.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/helpers.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addAttachment\": () => (/* reexport safe */ _addAttachment_js__WEBPACK_IMPORTED_MODULE_1__.addAttachment),\n/* harmony export */   \"addFeatures\": () => (/* reexport safe */ _add_js__WEBPACK_IMPORTED_MODULE_0__.addFeatures),\n/* harmony export */   \"addToServiceDefinition\": () => (/* reexport safe */ _addToServiceDefinition_js__WEBPACK_IMPORTED_MODULE_2__.addToServiceDefinition),\n/* harmony export */   \"applyEdits\": () => (/* reexport safe */ _applyEdits_js__WEBPACK_IMPORTED_MODULE_3__.applyEdits),\n/* harmony export */   \"createFeatureService\": () => (/* reexport safe */ _createFeatureService_js__WEBPACK_IMPORTED_MODULE_4__.createFeatureService),\n/* harmony export */   \"decodeValues\": () => (/* reexport safe */ _decodeValues_js__WEBPACK_IMPORTED_MODULE_5__.decodeValues),\n/* harmony export */   \"deleteAttachments\": () => (/* reexport safe */ _deleteAttachments_js__WEBPACK_IMPORTED_MODULE_7__.deleteAttachments),\n/* harmony export */   \"deleteFeatures\": () => (/* reexport safe */ _delete_js__WEBPACK_IMPORTED_MODULE_6__.deleteFeatures),\n/* harmony export */   \"getAllLayersAndTables\": () => (/* reexport safe */ _getAllLayersAndTables_js__WEBPACK_IMPORTED_MODULE_8__.getAllLayersAndTables),\n/* harmony export */   \"getAttachments\": () => (/* reexport safe */ _getAttachments_js__WEBPACK_IMPORTED_MODULE_9__.getAttachments),\n/* harmony export */   \"getFeature\": () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_15__.getFeature),\n/* harmony export */   \"getLayer\": () => (/* reexport safe */ _getLayer_js__WEBPACK_IMPORTED_MODULE_10__.getLayer),\n/* harmony export */   \"getService\": () => (/* reexport safe */ _getService_js__WEBPACK_IMPORTED_MODULE_11__.getService),\n/* harmony export */   \"getServiceAdminInfo\": () => (/* reexport safe */ _getServiceAdminInfo_js__WEBPACK_IMPORTED_MODULE_12__.getServiceAdminInfo),\n/* harmony export */   \"getViewSources\": () => (/* reexport safe */ _getViewSources_js__WEBPACK_IMPORTED_MODULE_13__.getViewSources),\n/* harmony export */   \"parseServiceUrl\": () => (/* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_14__.parseServiceUrl),\n/* harmony export */   \"queryFeatures\": () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_15__.queryFeatures),\n/* harmony export */   \"queryRelated\": () => (/* reexport safe */ _queryRelated_js__WEBPACK_IMPORTED_MODULE_16__.queryRelated),\n/* harmony export */   \"updateAttachment\": () => (/* reexport safe */ _updateAttachment_js__WEBPACK_IMPORTED_MODULE_18__.updateAttachment),\n/* harmony export */   \"updateFeatures\": () => (/* reexport safe */ _update_js__WEBPACK_IMPORTED_MODULE_17__.updateFeatures),\n/* harmony export */   \"updateServiceDefinition\": () => (/* reexport safe */ _updateServiceDefinition_js__WEBPACK_IMPORTED_MODULE_19__.updateServiceDefinition)\n/* harmony export */ });\n/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/add.js\");\n/* harmony import */ var _addAttachment_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./addAttachment.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addAttachment.js\");\n/* harmony import */ var _addToServiceDefinition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./addToServiceDefinition.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/addToServiceDefinition.js\");\n/* harmony import */ var _applyEdits_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./applyEdits.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/applyEdits.js\");\n/* harmony import */ var _createFeatureService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createFeatureService.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/createFeatureService.js\");\n/* harmony import */ var _decodeValues_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decodeValues.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/decodeValues.js\");\n/* harmony import */ var _delete_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./delete.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/delete.js\");\n/* harmony import */ var _deleteAttachments_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./deleteAttachments.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/deleteAttachments.js\");\n/* harmony import */ var _getAllLayersAndTables_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getAllLayersAndTables.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAllLayersAndTables.js\");\n/* harmony import */ var _getAttachments_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getAttachments.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getAttachments.js\");\n/* harmony import */ var _getLayer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getLayer.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getLayer.js\");\n/* harmony import */ var _getService_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./getService.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getService.js\");\n/* harmony import */ var _getServiceAdminInfo_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getServiceAdminInfo.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getServiceAdminInfo.js\");\n/* harmony import */ var _getViewSources_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./getViewSources.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/getViewSources.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/helpers.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./query.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/query.js\");\n/* harmony import */ var _queryRelated_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./queryRelated.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/queryRelated.js\");\n/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./update.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/update.js\");\n/* harmony import */ var _updateAttachment_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./updateAttachment.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateAttachment.js\");\n/* harmony import */ var _updateServiceDefinition_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./updateServiceDefinition.js */ \"./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateServiceDefinition.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/query.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/query.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFeature\": () => (/* binding */ getFeature),\n/* harmony export */   \"queryFeatures\": () => (/* binding */ queryFeatures)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Get a feature by id.\n *\n * ```js\n * import { getFeature } from '@esri/arcgis-rest-feature-service';\n *\n * const url = \"https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/Landscape_Trees/FeatureServer/0\";\n *\n * getFeature({\n *   url,\n *   id: 42\n * }).then(feature => {\n *  console.log(feature.attributes.FID); // 42\n * });\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the feature or the [response](https://developer.mozilla.org/en-US/docs/Web/API/Response) itself if `rawResponse: true` was passed in.\n */\nfunction getFeature(requestOptions) {\n    const url = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/${requestOptions.id}`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((response) => {\n        if (options.rawResponse) {\n            return response;\n        }\n        return response.feature;\n    });\n}\n/**\n * Query a feature service. See [REST Documentation](https://developers.arcgis.com/rest/services-reference/query-feature-service-layer-.htm) for more information.\n *\n * ```js\n * import { queryFeatures } from '@esri/arcgis-rest-feature-service';\n *\n * queryFeatures({\n *   url: \"http://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer/3\",\n *   where: \"STATE_NAME = 'Alaska'\"\n * })\n *   .then(result)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the query response.\n */\nfunction queryFeatures(requestOptions) {\n    const queryOptions = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\n        \"where\",\n        \"objectIds\",\n        \"relationParam\",\n        \"time\",\n        \"distance\",\n        \"units\",\n        \"outFields\",\n        \"geometry\",\n        \"geometryType\",\n        \"spatialRel\",\n        \"returnGeometry\",\n        \"maxAllowableOffset\",\n        \"geometryPrecision\",\n        \"inSR\",\n        \"outSR\",\n        \"gdbVersion\",\n        \"returnDistinctValues\",\n        \"returnIdsOnly\",\n        \"returnCountOnly\",\n        \"returnExtentOnly\",\n        \"orderByFields\",\n        \"groupByFieldsForStatistics\",\n        \"outStatistics\",\n        \"returnZ\",\n        \"returnM\",\n        \"multipatchOption\",\n        \"resultOffset\",\n        \"resultRecordCount\",\n        \"quantizationParameters\",\n        \"returnCentroid\",\n        \"resultType\",\n        \"historicMoment\",\n        \"returnTrueCurves\",\n        \"sqlFormat\",\n        \"returnExceededLimitFeatures\",\n        \"f\"\n    ], {\n        httpMethod: \"GET\",\n        params: Object.assign({ \n            // set default query parameters\n            where: \"1=1\", outFields: \"*\" }, requestOptions.params)\n    });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/query`, queryOptions);\n}\n//# sourceMappingURL=query.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/query.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/queryRelated.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/queryRelated.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"queryRelated\": () => (/* binding */ queryRelated)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Query the related records for a feature service. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/query-related-records-feature-service-.htm) for more information.\n *\n * ```js\n * import { queryRelated } from '@esri/arcgis-rest-feature-service'\n *\n * queryRelated({\n *  url: \"http://services.myserver/OrgID/ArcGIS/rest/services/Petroleum/KSPetro/FeatureServer/0\",\n *  relationshipId: 1,\n *  params: { returnCountOnly: true }\n * })\n *  .then(response) // response.relatedRecords\n * ```\n *\n * @param requestOptions\n * @returns A Promise that will resolve with the query response\n */\nfunction queryRelated(requestOptions) {\n    const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\"objectIds\", \"relationshipId\", \"definitionExpression\", \"outFields\"], {\n        httpMethod: \"GET\",\n        params: Object.assign({ \n            // set default query parameters\n            definitionExpression: \"1=1\", outFields: \"*\", relationshipId: 0 }, requestOptions.params)\n    });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/queryRelatedRecords`, options);\n}\n//# sourceMappingURL=queryRelated.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/queryRelated.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/update.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/update.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateFeatures\": () => (/* binding */ updateFeatures)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Update features request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/update-features.htm) for more information.\n *\n * ```js\n * import { updateFeatures } from '@esri/arcgis-rest-feature-service';\n * //\n * updateFeatures({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   features: [{\n *     geometry: { x: -120, y: 45, spatialReference: { wkid: 4326 } },\n *     attributes: { status: \"alive\" }\n *   }]\n * });\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the updateFeatures response.\n */\nfunction updateFeatures(requestOptions) {\n    const url = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.url)}/updateFeatures`;\n    // edit operations are POST only\n    const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\n        \"features\",\n        \"gdbVersion\",\n        \"returnEditMoment\",\n        \"rollbackOnFailure\",\n        \"trueCurveClient\"\n    ], { params: Object.assign({}, requestOptions.params) });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=update.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/update.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateAttachment.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateAttachment.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateAttachment\": () => (/* binding */ updateAttachment)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Update a related attachment to a feature by id. See [Update Attachment](https://developers.arcgis.com/rest/services-reference/update-attachment.htm) for more information.\n *\n * ```js\n * import { updateAttachment } from '@esri/arcgis-rest-feature-service';\n * //\n * updateAttachment({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   featureId: 8484,\n *   attachment: myFileInput.files[0],\n *   attachmentId: 306\n * });\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the `updateAttachment()` response.\n */\nfunction updateAttachment(requestOptions) {\n    const options = Object.assign({ params: {} }, requestOptions);\n    // `attachment` and `attachmentId` --> params: {}\n    options.params.attachment = requestOptions.attachment;\n    options.params.attachmentId = requestOptions.attachmentId;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(`${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(options.url)}/${options.featureId}/updateAttachment`, options);\n}\n//# sourceMappingURL=updateAttachment.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateAttachment.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateServiceDefinition.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateServiceDefinition.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateServiceDefinition\": () => (/* binding */ updateServiceDefinition)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Update a definition property in a hosted feature service. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/online/update-definition-feature-service-.htm) for more information.\n *\n * ```js\n * import { updateServiceDefinition } from '@esri/arcgis-rest-service-admin';\n * //\n * updateServiceDefinition(serviceurl, {\n *   authentication: ArcGISIdentityManager,\n *   updateDefinition: serviceDefinition\n * });\n * ```\n *\n * @param url - URL of feature service\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with success or error\n */\nfunction updateServiceDefinition(url, requestOptions) {\n    const adminUrl = `${(0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(url).replace(`/rest/services`, `/rest/admin/services`)}/updateDefinition`;\n    requestOptions.params = Object.assign({ updateDefinition: {} }, requestOptions.params);\n    if (requestOptions.updateDefinition) {\n        requestOptions.params.updateDefinition = requestOptions.updateDefinition;\n    }\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(adminUrl, requestOptions);\n}\n//# sourceMappingURL=updateServiceDefinition.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-feature-service/dist/esm/updateServiceDefinition.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFetch\": () => (/* binding */ getFetch)\n/* harmony export */ });\nfunction getFetch() {\n  return Promise.resolve({\n    fetch: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Response: globalThis.Response,\n    Request: globalThis.Request\n  });\n}\n\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.mjs?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Blob\": () => (/* binding */ Blob),\n/* harmony export */   \"File\": () => (/* binding */ File),\n/* harmony export */   \"FormData\": () => (/* binding */ FormData)\n/* harmony export */ });\nconst FormData = globalThis.FormData;\nconst File = globalThis.File;\nconst Blob = globalThis.Blob;\n\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.mjs?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/add-users.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/add-users.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addGroupUsers\": () => (/* binding */ addGroupUsers)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _util_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/array.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Add users to a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-users-to-group.htm) for more information.\n *\n * ```js\n * import { addGroupUsers } from \"@esri/arcgis-rest-portal\";\n * //\n * addGroupUsers({\n *   id: groupId,\n *   users: [\"username1\", \"username2\"],\n *   admins: [\"username3\"],\n *   authentication\n * })\n * .then(response);\n * ```\n *\n * @param requestOptions  - Options for the request\n * @returns A Promise\n */\nfunction addGroupUsers(requestOptions) {\n    const id = requestOptions.id;\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${id}/addUsers`;\n    const baseOptions = Object.assign({}, requestOptions, {\n        admins: undefined,\n        users: undefined\n    });\n    const batchRequestOptions = [\n        ..._prepareRequests(\"users\", requestOptions.users, baseOptions),\n        ..._prepareRequests(\"admins\", requestOptions.admins, baseOptions)\n    ];\n    const promises = batchRequestOptions.map((options) => _sendSafeRequest(url, options));\n    return Promise.all(promises).then(_consolidateRequestResults);\n}\nfunction _prepareRequests(type, usernames, baseOptions) {\n    if (!usernames || usernames.length < 1) {\n        return [];\n    }\n    // the ArcGIS REST API only allows to add no more than 25 users per request,\n    // see https://developers.arcgis.com/rest/users-groups-and-items/add-users-to-group.htm\n    const userChunks = (0,_util_array_js__WEBPACK_IMPORTED_MODULE_2__.chunk)(usernames, 25);\n    return userChunks.map((users) => _generateRequestOptions(type, users, baseOptions));\n}\nfunction _generateRequestOptions(type, usernames, baseOptions) {\n    return Object.assign({}, baseOptions, {\n        [type]: usernames,\n        params: Object.assign(Object.assign({}, baseOptions.params), { [type]: usernames })\n    });\n}\n// this request is safe since the request error will be handled\nfunction _sendSafeRequest(url, requestOptions) {\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions).catch((error) => {\n        return {\n            errors: [error]\n        };\n    });\n}\nfunction _consolidateRequestResults(results) {\n    const notAdded = results\n        .filter((result) => result.notAdded)\n        .reduce((collection, result) => collection.concat(result.notAdded), []);\n    const errors = results\n        .filter((result) => result.errors)\n        .reduce((collection, result) => collection.concat(result.errors), []);\n    const consolidated = { notAdded };\n    if (errors.length > 0) {\n        consolidated.errors = errors;\n    }\n    return consolidated;\n}\n//# sourceMappingURL=add-users.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/add-users.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/create.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/create.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createGroup\": () => (/* binding */ createGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Create a new Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/create-group.htm) for more information.\n *\n * ```js\n * import { createGroup } from \"@esri/arcgis-rest-portal\";\n *\n * createGroup({\n *   group: {\n *     title: \"No Homers\",\n *     access: \"public\"\n *   },\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * Note: The group name must be unique within the user's organization.\n * @param requestOptions  - Options for the request, including a group object\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction createGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/createGroup`;\n    requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), requestOptions.group);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=create.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/create.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/get.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/get.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getGroup\": () => (/* binding */ getGroup),\n/* harmony export */   \"getGroupCategorySchema\": () => (/* binding */ getGroupCategorySchema),\n/* harmony export */   \"getGroupContent\": () => (/* binding */ getGroupContent),\n/* harmony export */   \"getGroupUsers\": () => (/* binding */ getGroupUsers),\n/* harmony export */   \"searchGroupUsers\": () => (/* binding */ searchGroupUsers)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Fetch a group using its id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group.htm) for more information.\n *\n * ```js\n * import { getGroup } from \"@esri/arcgis-rest-portal\";\n * //\n * getGroup(\"fxb988\") // id\n *   .then(response)\n * ```\n *\n * @param id - Group Id\n * @param requestOptions  - Options for the request\n * @returns  A Promise that will resolve with the data from the response.\n */\nfunction getGroup(id, requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${id}`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Gets the category schema set on a group\n *\n * @param id - Group Id\n * @param requestOptions  - Options for the request\n * @returns A promise that will resolve with JSON of group's category schema\n * @see https://developers.arcgis.com/rest/users-groups-and-items/group-category-schema.htm\n */\nfunction getGroupCategorySchema(id, requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${id}/categorySchema`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Returns the content of a Group. Since the group may contain 1000s of items\n * the requestParams allow for paging.\n * @param id - Group Id\n * @param requestOptions  - Options for the request, including paging parameters.\n * @returns  A Promise that will resolve with the content of the group.\n */\nfunction getGroupContent(id, requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/groups/${id}`;\n    // default to a GET request\n    const options = Object.assign(Object.assign({ httpMethod: \"GET\" }, { params: { start: 1, num: 100 } }), requestOptions);\n    // is this the most concise way to mixin with the defaults above?\n    if (requestOptions && requestOptions.paging) {\n        options.params = Object.assign({}, requestOptions.paging);\n    }\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Get the usernames of the admins and members. Does not return actual 'User' objects. Those must be\n * retrieved via separate calls to the User's API.\n * @param id - Group Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with arrays of the group admin usernames and the member usernames\n */\nfunction getGroupUsers(id, requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${id}/users`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Search the users in a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-users-list.htm) for more information.\n *\n * ```js\n * import { searchGroupUsers } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroupUsers('abc123')\n *   .then(response)\n * ```\n *\n * @param id - The group id\n * @param searchOptions - Options for the request, including paging parameters.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchGroupUsers(id, searchOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(searchOptions)}/community/groups/${id}/userlist`;\n    const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(searchOptions || {}, [\"name\", \"num\", \"start\", \"sortField\", \"sortOrder\", \"joined\", \"memberType\"], {\n        httpMethod: \"GET\"\n    });\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=get.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/get.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/helpers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/helpers.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=helpers.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/helpers.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/invite-users.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/invite-users.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inviteGroupUsers\": () => (/* binding */ inviteGroupUsers)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _util_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/array.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js\");\n\n\n\n/**\n * Invites users to join a group. Operation success will be indicated by a flag on the return object. If there are any errors, they will be placed in an errors array on the return object.\n *\n * ```js\n * const authentication: IAuthenticationManager; // Typically passed into to the function\n *\n * const options: IInviteGroupUsersOptions = {\n *  id: 'group_id',\n *  users: ['ed', 'edd', 'eddy'],\n *  role: 'group-member',\n *  expiration: 20160,\n *  authentication\n * }\n *\n * const result = await inviteGroupUsers(options);\n *\n * const if_success_result_looks_like = {\n *  success: true\n * }\n *\n * const if_failure_result_looks_like = {\n *  success: false,\n *  errors: [ArcGISRequestError]\n * }\n * ```\n *\n * @param {IInviteGroupUsersOptions} options\n * @returns {Promise<IAddGroupUsersResult>}\n */\nfunction inviteGroupUsers(options) {\n    const id = options.id;\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(options)}/community/groups/${id}/invite`;\n    const batches = _generateBatchRequests(options);\n    const promises = batches.map((batch) => _sendSafeRequest(url, batch));\n    return Promise.all(promises).then(_combineResults);\n}\n/**\n * @private\n */\nfunction _generateBatchRequests(options) {\n    const userBatches = (0,_util_array_js__WEBPACK_IMPORTED_MODULE_2__.chunk)(options.users, 25);\n    return userBatches.map((users) => _generateRequestOptions(users, options));\n}\n/**\n * @private\n */\nfunction _generateRequestOptions(users, baseOptions) {\n    const requestOptions = Object.assign({}, baseOptions);\n    requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), { users, role: requestOptions.role, expiration: requestOptions.expiration });\n    return requestOptions;\n}\n/**\n * @private\n */\nfunction _sendSafeRequest(url, requestOptions) {\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions).catch((error) => ({ errors: [error] }));\n}\n/**\n * @private\n */\nfunction _combineResults(responses) {\n    const success = responses.every((res) => res.success);\n    const errors = responses.reduce((collection, res) => collection.concat(res.errors || []), []);\n    const combined = { success };\n    if (errors.length > 0) {\n        combined.errors = errors;\n    }\n    return combined;\n}\n//# sourceMappingURL=invite-users.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/invite-users.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/join.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/join.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"joinGroup\": () => (/* binding */ joinGroup),\n/* harmony export */   \"leaveGroup\": () => (/* binding */ leaveGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Make a request as the authenticated user to join a Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/join-group.htm) for more information.\n *\n * ```js\n * import { joinGroup } from '@esri/arcgis-rest-portal';\n * //\n * joinGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request and the groupId.\n */\nfunction joinGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/join`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n/**\n * Make a request as the authenticated user to leave a Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/leave-group.htm) for more information.\n *\n * ```js\n * import { leaveGroup } from '@esri/arcgis-rest-portal';\n *\n * leaveGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request and the groupId.\n */\nfunction leaveGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/leave`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=join.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/join.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/notification.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/notification.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createGroupNotification\": () => (/* binding */ createGroupNotification)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Create a group notification.\n *\n * ```js\n * import { createGroupNotification } from '@esri/arcgis-rest-portal';\n * // send an email to an entire group\n * createGroupNotification({\n *   authentication: ArcGISIdentityManager,\n *   subject: \"hello\",\n *   message: \"world!\",\n *   id: groupId\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction createGroupNotification(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/createNotification`;\n    const options = Object.assign({ params: Object.assign({ subject: requestOptions.subject, message: requestOptions.message, users: requestOptions.users, notificationChannelType: requestOptions.notificationChannelType || \"email\", clientId: requestOptions.clientId, silentNotification: requestOptions.silentNotification, notifyAll: !requestOptions.users || requestOptions.users.length === 0 }, requestOptions.params) }, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=notification.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/notification.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/protect.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/protect.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"protectGroup\": () => (/* binding */ protectGroup),\n/* harmony export */   \"unprotectGroup\": () => (/* binding */ unprotectGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Protect a group to avoid accidental deletion. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/protect-group.htm) for more information.\n *\n * ```js\n * import { protectGroup } from '@esri/arcgis-rest-portal';\n *\n * protectGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction protectGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/protect`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n/**\n * Unprotect a Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/unprotect-group.htm) for more information.\n *\n * ```js\n * import { unprotectGroup } from '@esri/arcgis-rest-portal';\n *\n * unprotectGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction unprotectGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/unprotect`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=protect.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/protect.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove-users.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove-users.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"removeGroupUsers\": () => (/* binding */ removeGroupUsers)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _util_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/array.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Add users to a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/remove-users-from-group.htm) for more information.\n *\n * ```js\n * import { removeGroupUsers } from \"@esri/arcgis-rest-portal\";\n *\n * removeGroupUsers({\n *   id: groupId,\n *   users: [\"username1\", \"username2\"],\n *   authentication\n * })\n * .then(response);\n * ```\n *\n * @param requestOptions  - Options for the request\n * @returns A Promise\n */\nfunction removeGroupUsers(requestOptions) {\n    const { id, users: usersToRemove } = requestOptions;\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${id}/removeUsers`;\n    const safeSend = (users) => {\n        const options = Object.assign(Object.assign({}, requestOptions), { users, params: { users } });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).catch((error) => ({ errors: [error] }));\n    };\n    // the ArcGIS REST API only allows to add no more than 25 users per request,\n    // see https://developers.arcgis.com/rest/users-groups-and-items/remove-users-from-group.htm\n    const promises = (0,_util_array_js__WEBPACK_IMPORTED_MODULE_2__.chunk)(usersToRemove, 25).map((usersChunk) => safeSend(usersChunk));\n    return Promise.all(promises).then((results) => {\n        const filtered = (propName) => results\n            .filter((result) => result[propName])\n            .reduce((collection, result) => collection.concat(result[propName]), []);\n        const errors = filtered(\"errors\");\n        const consolidated = {\n            notRemoved: filtered(\"notRemoved\")\n        };\n        return errors.length ? Object.assign(Object.assign({}, consolidated), { errors }) : consolidated;\n    });\n}\n//# sourceMappingURL=remove-users.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove-users.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"removeGroup\": () => (/* binding */ removeGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Delete a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-group.htm) for more information.\n *\n * ```js\n * import { removeGroup } from '@esri/arcgis-rest-portal';\n * //\n * removeGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction removeGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/delete`;\n    const options = Object.assign({}, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=remove.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/search.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/search.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"searchGroupContent\": () => (/* binding */ searchGroupContent),\n/* harmony export */   \"searchGroups\": () => (/* binding */ searchGroups)\n/* harmony export */ });\n/* harmony import */ var _util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/generic-search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Search a portal for groups. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-search.htm) for more information.\n *\n * ```js\n * import { searchGroups } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroups('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchGroups(search) {\n    return (0,_util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__.genericSearch)(search, \"group\");\n}\n/**\n * Search a portal for items in a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-content-search.htm) for more information.\n *\n * ```js\n * import { searchGroupContent } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroupContent('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param options - RequestOptions object amended with search parameters.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchGroupContent(options) {\n    return (0,_util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__.genericSearch)(options, \"groupContent\");\n}\n//# sourceMappingURL=search.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/search.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update-user-membership.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update-user-membership.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateUserMemberships\": () => (/* binding */ updateUserMemberships)\n/* harmony export */ });\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Change the user membership levels of existing users in a group\n *\n * ```js\n * import { updateUserMemberships } from \"@esri/arcgis-rest-portal\";\n *\n * updateUserMemberships({\n *   id: groupId,\n *   admins: [\"username3\"],\n *   authentication\n * })\n * .then(response);\n * ```\n *\n * @param requestOptions  - Options for the request\n * @returns A Promise\n */\nfunction updateUserMemberships(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_0__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.id}/updateUsers`;\n    const opts = {\n        authentication: requestOptions.authentication,\n        params: {}\n    };\n    // add the correct params depending on the type of membership we are changing to\n    if (requestOptions.newMemberType === \"admin\") {\n        opts.params.admins = requestOptions.users;\n    }\n    else {\n        opts.params.users = requestOptions.users;\n    }\n    // make the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_1__.request)(url, opts);\n}\n//# sourceMappingURL=update-user-membership.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update-user-membership.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateGroup\": () => (/* binding */ updateGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Update the properties of a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-group.htm) for more information.\n *\n * ```js\n * import { updateGroup } from '@esri/arcgis-rest-portal';\n *\n * updateGroup({\n *   group: { id: \"fgr344\", title: \"new\" }\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request, including the group\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction updateGroup(requestOptions) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/groups/${requestOptions.group.id}/update`;\n    requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), requestOptions.group);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=update.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/helpers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=helpers.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/helpers.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SearchQueryBuilder\": () => (/* reexport safe */ _util_SearchQueryBuilder_js__WEBPACK_IMPORTED_MODULE_45__.SearchQueryBuilder),\n/* harmony export */   \"acceptInvitation\": () => (/* reexport safe */ _users_invitation_js__WEBPACK_IMPORTED_MODULE_29__.acceptInvitation),\n/* harmony export */   \"addGroupUsers\": () => (/* reexport safe */ _groups_add_users_js__WEBPACK_IMPORTED_MODULE_12__.addGroupUsers),\n/* harmony export */   \"addItemData\": () => (/* reexport safe */ _items_add_js__WEBPACK_IMPORTED_MODULE_0__.addItemData),\n/* harmony export */   \"addItemPart\": () => (/* reexport safe */ _items_upload_js__WEBPACK_IMPORTED_MODULE_11__.addItemPart),\n/* harmony export */   \"addItemRelationship\": () => (/* reexport safe */ _items_add_js__WEBPACK_IMPORTED_MODULE_0__.addItemRelationship),\n/* harmony export */   \"addItemResource\": () => (/* reexport safe */ _items_add_js__WEBPACK_IMPORTED_MODULE_0__.addItemResource),\n/* harmony export */   \"bboxToString\": () => (/* reexport safe */ _items_helpers_js__WEBPACK_IMPORTED_MODULE_10__.bboxToString),\n/* harmony export */   \"cancelItemUpload\": () => (/* reexport safe */ _items_upload_js__WEBPACK_IMPORTED_MODULE_11__.cancelItemUpload),\n/* harmony export */   \"commitItemUpload\": () => (/* reexport safe */ _items_upload_js__WEBPACK_IMPORTED_MODULE_11__.commitItemUpload),\n/* harmony export */   \"createFolder\": () => (/* reexport safe */ _items_create_js__WEBPACK_IMPORTED_MODULE_2__.createFolder),\n/* harmony export */   \"createGroup\": () => (/* reexport safe */ _groups_create_js__WEBPACK_IMPORTED_MODULE_15__.createGroup),\n/* harmony export */   \"createGroupNotification\": () => (/* reexport safe */ _groups_notification_js__WEBPACK_IMPORTED_MODULE_18__.createGroupNotification),\n/* harmony export */   \"createItem\": () => (/* reexport safe */ _items_create_js__WEBPACK_IMPORTED_MODULE_2__.createItem),\n/* harmony export */   \"createItemInFolder\": () => (/* reexport safe */ _items_create_js__WEBPACK_IMPORTED_MODULE_2__.createItemInFolder),\n/* harmony export */   \"createOrgNotification\": () => (/* reexport safe */ _orgs_notification_js__WEBPACK_IMPORTED_MODULE_25__.createOrgNotification),\n/* harmony export */   \"declineInvitation\": () => (/* reexport safe */ _users_invitation_js__WEBPACK_IMPORTED_MODULE_29__.declineInvitation),\n/* harmony export */   \"determineOwner\": () => (/* reexport safe */ _items_helpers_js__WEBPACK_IMPORTED_MODULE_10__.determineOwner),\n/* harmony export */   \"ensureMembership\": () => (/* reexport safe */ _sharing_share_item_with_group_js__WEBPACK_IMPORTED_MODULE_34__.ensureMembership),\n/* harmony export */   \"exportItem\": () => (/* reexport safe */ _items_export_js__WEBPACK_IMPORTED_MODULE_3__.exportItem),\n/* harmony export */   \"getGroup\": () => (/* reexport safe */ _groups_get_js__WEBPACK_IMPORTED_MODULE_16__.getGroup),\n/* harmony export */   \"getGroupCategorySchema\": () => (/* reexport safe */ _groups_get_js__WEBPACK_IMPORTED_MODULE_16__.getGroupCategorySchema),\n/* harmony export */   \"getGroupContent\": () => (/* reexport safe */ _groups_get_js__WEBPACK_IMPORTED_MODULE_16__.getGroupContent),\n/* harmony export */   \"getGroupUsers\": () => (/* reexport safe */ _groups_get_js__WEBPACK_IMPORTED_MODULE_16__.getGroupUsers),\n/* harmony export */   \"getItem\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItem),\n/* harmony export */   \"getItemBaseUrl\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemBaseUrl),\n/* harmony export */   \"getItemData\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemData),\n/* harmony export */   \"getItemGroups\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemGroups),\n/* harmony export */   \"getItemInfo\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemInfo),\n/* harmony export */   \"getItemMetadata\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemMetadata),\n/* harmony export */   \"getItemParts\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemParts),\n/* harmony export */   \"getItemResource\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemResource),\n/* harmony export */   \"getItemResources\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemResources),\n/* harmony export */   \"getItemStatus\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getItemStatus),\n/* harmony export */   \"getPortal\": () => (/* reexport safe */ _util_get_portal_js__WEBPACK_IMPORTED_MODULE_40__.getPortal),\n/* harmony export */   \"getPortalSettings\": () => (/* reexport safe */ _util_get_portal_settings_js__WEBPACK_IMPORTED_MODULE_41__.getPortalSettings),\n/* harmony export */   \"getPortalUrl\": () => (/* reexport safe */ _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_42__.getPortalUrl),\n/* harmony export */   \"getRelatedItems\": () => (/* reexport safe */ _items_get_js__WEBPACK_IMPORTED_MODULE_4__.getRelatedItems),\n/* harmony export */   \"getSelf\": () => (/* reexport safe */ _util_get_portal_js__WEBPACK_IMPORTED_MODULE_40__.getSelf),\n/* harmony export */   \"getSharingUrl\": () => (/* reexport safe */ _sharing_helpers_js__WEBPACK_IMPORTED_MODULE_37__.getSharingUrl),\n/* harmony export */   \"getUniqueServiceName\": () => (/* reexport safe */ _services_get_unique_service_name_js__WEBPACK_IMPORTED_MODULE_38__.getUniqueServiceName),\n/* harmony export */   \"getUser\": () => (/* reexport safe */ _users_get_user_js__WEBPACK_IMPORTED_MODULE_26__.getUser),\n/* harmony export */   \"getUserContent\": () => (/* reexport safe */ _items_content_js__WEBPACK_IMPORTED_MODULE_1__.getUserContent),\n/* harmony export */   \"getUserInvitation\": () => (/* reexport safe */ _users_invitation_js__WEBPACK_IMPORTED_MODULE_29__.getUserInvitation),\n/* harmony export */   \"getUserInvitations\": () => (/* reexport safe */ _users_invitation_js__WEBPACK_IMPORTED_MODULE_29__.getUserInvitations),\n/* harmony export */   \"getUserMembership\": () => (/* reexport safe */ _sharing_helpers_js__WEBPACK_IMPORTED_MODULE_37__.getUserMembership),\n/* harmony export */   \"getUserNotifications\": () => (/* reexport safe */ _users_notification_js__WEBPACK_IMPORTED_MODULE_30__.getUserNotifications),\n/* harmony export */   \"getUserTags\": () => (/* reexport safe */ _users_get_user_tags_js__WEBPACK_IMPORTED_MODULE_27__.getUserTags),\n/* harmony export */   \"getUserUrl\": () => (/* reexport safe */ _users_get_user_url_js__WEBPACK_IMPORTED_MODULE_28__.getUserUrl),\n/* harmony export */   \"inviteGroupUsers\": () => (/* reexport safe */ _groups_invite_users_js__WEBPACK_IMPORTED_MODULE_14__.inviteGroupUsers),\n/* harmony export */   \"isBBox\": () => (/* reexport safe */ _items_helpers_js__WEBPACK_IMPORTED_MODULE_10__.isBBox),\n/* harmony export */   \"isItemOwner\": () => (/* reexport safe */ _sharing_helpers_js__WEBPACK_IMPORTED_MODULE_37__.isItemOwner),\n/* harmony export */   \"isItemSharedWithGroup\": () => (/* reexport safe */ _sharing_is_item_shared_with_group_js__WEBPACK_IMPORTED_MODULE_36__.isItemSharedWithGroup),\n/* harmony export */   \"isOrgAdmin\": () => (/* reexport safe */ _sharing_helpers_js__WEBPACK_IMPORTED_MODULE_37__.isOrgAdmin),\n/* harmony export */   \"isServiceNameAvailable\": () => (/* reexport safe */ _services_is_service_name_available_js__WEBPACK_IMPORTED_MODULE_39__.isServiceNameAvailable),\n/* harmony export */   \"joinGroup\": () => (/* reexport safe */ _groups_join_js__WEBPACK_IMPORTED_MODULE_24__.joinGroup),\n/* harmony export */   \"leaveGroup\": () => (/* reexport safe */ _groups_join_js__WEBPACK_IMPORTED_MODULE_24__.leaveGroup),\n/* harmony export */   \"moveItem\": () => (/* reexport safe */ _items_update_js__WEBPACK_IMPORTED_MODULE_9__.moveItem),\n/* harmony export */   \"protectGroup\": () => (/* reexport safe */ _groups_protect_js__WEBPACK_IMPORTED_MODULE_19__.protectGroup),\n/* harmony export */   \"protectItem\": () => (/* reexport safe */ _items_protect_js__WEBPACK_IMPORTED_MODULE_5__.protectItem),\n/* harmony export */   \"reassignItem\": () => (/* reexport safe */ _items_reassign_js__WEBPACK_IMPORTED_MODULE_6__.reassignItem),\n/* harmony export */   \"removeFolder\": () => (/* reexport safe */ _items_remove_js__WEBPACK_IMPORTED_MODULE_7__.removeFolder),\n/* harmony export */   \"removeGroup\": () => (/* reexport safe */ _groups_remove_js__WEBPACK_IMPORTED_MODULE_20__.removeGroup),\n/* harmony export */   \"removeGroupUsers\": () => (/* reexport safe */ _groups_remove_users_js__WEBPACK_IMPORTED_MODULE_13__.removeGroupUsers),\n/* harmony export */   \"removeItem\": () => (/* reexport safe */ _items_remove_js__WEBPACK_IMPORTED_MODULE_7__.removeItem),\n/* harmony export */   \"removeItemRelationship\": () => (/* reexport safe */ _items_remove_js__WEBPACK_IMPORTED_MODULE_7__.removeItemRelationship),\n/* harmony export */   \"removeItemResource\": () => (/* reexport safe */ _items_remove_js__WEBPACK_IMPORTED_MODULE_7__.removeItemResource),\n/* harmony export */   \"removeNotification\": () => (/* reexport safe */ _users_notification_js__WEBPACK_IMPORTED_MODULE_30__.removeNotification),\n/* harmony export */   \"scrubControlChars\": () => (/* reexport safe */ _util_scrub_control_chars_js__WEBPACK_IMPORTED_MODULE_43__.scrubControlChars),\n/* harmony export */   \"searchGroupContent\": () => (/* reexport safe */ _groups_search_js__WEBPACK_IMPORTED_MODULE_21__.searchGroupContent),\n/* harmony export */   \"searchGroupUsers\": () => (/* reexport safe */ _groups_get_js__WEBPACK_IMPORTED_MODULE_16__.searchGroupUsers),\n/* harmony export */   \"searchGroups\": () => (/* reexport safe */ _groups_search_js__WEBPACK_IMPORTED_MODULE_21__.searchGroups),\n/* harmony export */   \"searchItems\": () => (/* reexport safe */ _items_search_js__WEBPACK_IMPORTED_MODULE_8__.searchItems),\n/* harmony export */   \"searchUsers\": () => (/* reexport safe */ _users_search_users_js__WEBPACK_IMPORTED_MODULE_31__.searchUsers),\n/* harmony export */   \"setItemAccess\": () => (/* reexport safe */ _sharing_access_js__WEBPACK_IMPORTED_MODULE_33__.setItemAccess),\n/* harmony export */   \"shareItemWithGroup\": () => (/* reexport safe */ _sharing_share_item_with_group_js__WEBPACK_IMPORTED_MODULE_34__.shareItemWithGroup),\n/* harmony export */   \"unprotectGroup\": () => (/* reexport safe */ _groups_protect_js__WEBPACK_IMPORTED_MODULE_19__.unprotectGroup),\n/* harmony export */   \"unprotectItem\": () => (/* reexport safe */ _items_protect_js__WEBPACK_IMPORTED_MODULE_5__.unprotectItem),\n/* harmony export */   \"unshareItemWithGroup\": () => (/* reexport safe */ _sharing_unshare_item_with_group_js__WEBPACK_IMPORTED_MODULE_35__.unshareItemWithGroup),\n/* harmony export */   \"updateGroup\": () => (/* reexport safe */ _groups_update_js__WEBPACK_IMPORTED_MODULE_22__.updateGroup),\n/* harmony export */   \"updateItem\": () => (/* reexport safe */ _items_update_js__WEBPACK_IMPORTED_MODULE_9__.updateItem),\n/* harmony export */   \"updateItemInfo\": () => (/* reexport safe */ _items_update_js__WEBPACK_IMPORTED_MODULE_9__.updateItemInfo),\n/* harmony export */   \"updateItemResource\": () => (/* reexport safe */ _items_update_js__WEBPACK_IMPORTED_MODULE_9__.updateItemResource),\n/* harmony export */   \"updateUser\": () => (/* reexport safe */ _users_update_js__WEBPACK_IMPORTED_MODULE_32__.updateUser),\n/* harmony export */   \"updateUserMemberships\": () => (/* reexport safe */ _groups_update_user_membership_js__WEBPACK_IMPORTED_MODULE_23__.updateUserMemberships)\n/* harmony export */ });\n/* harmony import */ var _items_add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./items/add.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/add.js\");\n/* harmony import */ var _items_content_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items/content.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/content.js\");\n/* harmony import */ var _items_create_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./items/create.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/create.js\");\n/* harmony import */ var _items_export_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./items/export.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/export.js\");\n/* harmony import */ var _items_get_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./items/get.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/get.js\");\n/* harmony import */ var _items_protect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./items/protect.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/protect.js\");\n/* harmony import */ var _items_reassign_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./items/reassign.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/reassign.js\");\n/* harmony import */ var _items_remove_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./items/remove.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/remove.js\");\n/* harmony import */ var _items_search_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./items/search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/search.js\");\n/* harmony import */ var _items_update_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./items/update.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/update.js\");\n/* harmony import */ var _items_helpers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./items/helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* harmony import */ var _items_upload_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./items/upload.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/upload.js\");\n/* harmony import */ var _groups_add_users_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./groups/add-users.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/add-users.js\");\n/* harmony import */ var _groups_remove_users_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./groups/remove-users.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove-users.js\");\n/* harmony import */ var _groups_invite_users_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./groups/invite-users.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/invite-users.js\");\n/* harmony import */ var _groups_create_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./groups/create.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/create.js\");\n/* harmony import */ var _groups_get_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./groups/get.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/get.js\");\n/* harmony import */ var _groups_helpers_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./groups/helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/helpers.js\");\n/* harmony import */ var _groups_notification_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./groups/notification.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/notification.js\");\n/* harmony import */ var _groups_protect_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./groups/protect.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/protect.js\");\n/* harmony import */ var _groups_remove_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./groups/remove.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove.js\");\n/* harmony import */ var _groups_search_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./groups/search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/search.js\");\n/* harmony import */ var _groups_update_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./groups/update.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update.js\");\n/* harmony import */ var _groups_update_user_membership_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./groups/update-user-membership.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update-user-membership.js\");\n/* harmony import */ var _groups_join_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./groups/join.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/join.js\");\n/* harmony import */ var _orgs_notification_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./orgs/notification.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/orgs/notification.js\");\n/* harmony import */ var _users_get_user_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./users/get-user.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js\");\n/* harmony import */ var _users_get_user_tags_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./users/get-user-tags.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-tags.js\");\n/* harmony import */ var _users_get_user_url_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./users/get-user-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-url.js\");\n/* harmony import */ var _users_invitation_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./users/invitation.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/invitation.js\");\n/* harmony import */ var _users_notification_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./users/notification.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/notification.js\");\n/* harmony import */ var _users_search_users_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./users/search-users.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/search-users.js\");\n/* harmony import */ var _users_update_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./users/update.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/update.js\");\n/* harmony import */ var _sharing_access_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./sharing/access.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/access.js\");\n/* harmony import */ var _sharing_share_item_with_group_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sharing/share-item-with-group.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/share-item-with-group.js\");\n/* harmony import */ var _sharing_unshare_item_with_group_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sharing/unshare-item-with-group.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/unshare-item-with-group.js\");\n/* harmony import */ var _sharing_is_item_shared_with_group_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./sharing/is-item-shared-with-group.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/is-item-shared-with-group.js\");\n/* harmony import */ var _sharing_helpers_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sharing/helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js\");\n/* harmony import */ var _services_get_unique_service_name_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./services/get-unique-service-name.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/services/get-unique-service-name.js\");\n/* harmony import */ var _services_is_service_name_available_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./services/is-service-name-available.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/services/is-service-name-available.js\");\n/* harmony import */ var _util_get_portal_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./util/get-portal.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal.js\");\n/* harmony import */ var _util_get_portal_settings_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./util/get-portal-settings.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-settings.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _util_scrub_control_chars_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./util/scrub-control-chars.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/scrub-control-chars.js\");\n/* harmony import */ var _util_search_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./util/search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/search.js\");\n/* harmony import */ var _util_SearchQueryBuilder_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./util/SearchQueryBuilder.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/helpers.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// we dont export 'generic-search' because its an internal utility method\n// export * from \"./util/generic-search\"; because its an internal utility method\n// Types that are used in this package are re-exported for convenience and\n// to make the links work correctly in the documentation pages.\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/add.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/add.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addItemData\": () => (/* binding */ addItemData),\n/* harmony export */   \"addItemRelationship\": () => (/* binding */ addItemRelationship),\n/* harmony export */   \"addItemResource\": () => (/* binding */ addItemResource)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./update.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/update.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n/**\n * Send a file or blob to an item to be stored as the `/data` resource. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.\n *\n * ```js\n * import { addItemData } from \"@esri/arcgis-rest-portal\";\n *\n * addItemData({\n *   id: '3ef',\n *   data: file,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with an object reporting\n *        success/failure and echoing the item id.\n */\nfunction addItemData(requestOptions) {\n    const options = Object.assign({ item: {\n            id: requestOptions.id,\n            text: requestOptions.text,\n            file: requestOptions.file\n        } }, requestOptions);\n    delete options.id;\n    delete options.data;\n    return (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.updateItem)(options);\n}\n/**\n * Add a relationship between two items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-relationship.htm) for more information.\n *\n * ```js\n * import { addItemRelationship } from \"@esri/arcgis-rest-portal\";\n *\n * addItemRelationship({\n *   originItemId: '3ef',\n *   destinationItemId: 'ae7',\n *   relationshipType: 'Service2Layer',\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to add item resources.\n */\nfunction addItemRelationship(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/addRelationship`;\n        const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\"originItemId\", \"destinationItemId\", \"relationshipType\"], { params: Object.assign({}, requestOptions.params) });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n/**\n * Add a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-resources.htm) for more information.\n *\n * ```js\n * import { addItemResource } from \"@esri/arcgis-rest-portal\";\n *\n * // Add a file resource\n * addItemResource({\n *   id: '3ef',\n *   resource: file,\n *   name: 'bigkahuna.jpg',\n *   authentication\n * })\n *   .then(response)\n *\n * // Add a text resource\n * addItemResource({\n *   id: '4fg',\n *   content: \"Text content\",\n *   name: 'bigkahuna.txt',\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to add item resources.\n */\nfunction addItemResource(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/addResources`;\n        requestOptions.params = Object.assign({ file: requestOptions.resource, fileName: requestOptions.name, resourcesPrefix: requestOptions.prefix, text: requestOptions.content, access: requestOptions.private ? \"private\" : \"inherit\" }, requestOptions.params);\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/add.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/content.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/content.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUserContent\": () => (/* binding */ getUserContent)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n\n\n\n/**\n * Returns a listing of the user's content. If the `username` is not supplied, it defaults to the username of the authenticated user. If `start` is not specified it defaults to the first page.\n *\n * If the `num` is not supplied it is defaulted to 10. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-content.htm) for more information.\n *\n * ```js\n * import { getUserContent } from \"@esri/arcgis-rest-portal\";\n *\n * getUserContent({\n *    owner: 'geemike',\n *    folderId: 'bao7',\n *    start: 1,\n *    num: 20,\n *    authentication\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise<IUserContentResponse>\n */\nconst getUserContent = (requestOptions) => {\n    const { folderId: folder, start = 1, num = 10, authentication } = requestOptions;\n    const suffix = folder ? `/${folder}` : \"\";\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions)\n        .then((owner) => `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}${suffix}`)\n        .then((url) => (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, {\n        httpMethod: \"GET\",\n        authentication,\n        params: {\n            start,\n            num\n        }\n    }));\n};\n//# sourceMappingURL=content.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/content.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/create.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/create.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFolder\": () => (/* binding */ createFolder),\n/* harmony export */   \"createItem\": () => (/* binding */ createItem),\n/* harmony export */   \"createItemInFolder\": () => (/* binding */ createItemInFolder)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Create a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/create-folder.htm) for more information.\n *\n * ```js\n * import { createFolder } from \"@esri/arcgis-rest-portal\";\n *\n * createFolder({\n *   title: 'Map Collection',\n *   authentication: ArcGISIdentityManager\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with folder details once the folder has been created\n */\nfunction createFolder(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const baseUrl = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}`;\n        const url = `${baseUrl}/createFolder`;\n        requestOptions.params = Object.assign({ title: requestOptions.title }, requestOptions.params);\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Create an item in a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item.htm) for more information.\n *\n * ```js\n * import { createItemInFolder } from \"@esri/arcgis-rest-portal\";\n *\n * createItemInFolder({\n *   item: {\n *     title: \"The Amazing Voyage\",\n *     type: \"Web Map\"\n *   },\n *   folderId: 'fe8',\n *   authentication\n * })\n * ```\n *\n * @param requestOptions = Options for the request\n */\nfunction createItemInFolder(requestOptions) {\n    if (requestOptions.multipart && !requestOptions.filename) {\n        return Promise.reject(new Error(\"The filename is required for a multipart request.\"));\n    }\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const baseUrl = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}`;\n        let url = `${baseUrl}/addItem`;\n        if (requestOptions.folderId) {\n            url = `${baseUrl}/${requestOptions.folderId}/addItem`;\n        }\n        requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), requestOptions.item);\n        // convert extent, if present, into a string from bbox\n        // processParams was previously doing this sort of work,\n        // however now we need to let array of arrays through\n        // Thus for extents we need to move this logic here\n        if (requestOptions.params.extent && (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.isBBox)(requestOptions.params.extent)) {\n            requestOptions.params.extent = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.bboxToString)(requestOptions.params.extent);\n        }\n        // serialize the item into something Portal will accept\n        const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\n            \"owner\",\n            \"folderId\",\n            \"file\",\n            \"dataUrl\",\n            \"text\",\n            \"async\",\n            \"multipart\",\n            \"filename\",\n            \"overwrite\"\n        ], {\n            params: Object.assign({}, requestOptions.params)\n        });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n/**\n * Create an Item in the user's root folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item.htm) for more information.\n *\n * ```js\n * import { createItem } from \"@esri/arcgis-rest-portal\";\n *\n * createItem({\n *   item: {\n *     title: \"The Amazing Voyage\",\n *     type: \"Web Map\"\n *   },\n *   authentication\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that creates an item.\n */\nfunction createItem(requestOptions) {\n    // delegate to createItemInFolder placing in the root of the filestore\n    const options = Object.assign({ folderId: null }, requestOptions);\n    return createItemInFolder(options);\n}\n//# sourceMappingURL=create.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/create.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/export.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/export.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exportItem\": () => (/* binding */ exportItem)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n\n\n\n/**\n * Exports an item from the portal. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/export-item.htm) for more information.\n *\n * ```js\n * import { exportItem } from \"@esri/arcgis-rest-portal\";\n *\n * exportItem({\n *   id: '3daf',\n *   owner: 'geemike',\n *   exportFormat: 'CSV',\n *   exportParameters: {\n *     layers: [\n *       { id: 0 },\n *       { id: 1, where: 'POP1999 > 100000' }\n *     ]\n *   },\n *   authentication,\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise<IExportItemResponse>\n */\nconst exportItem = (requestOptions) => {\n    const { authentication, id: itemId, title, exportFormat, exportParameters } = requestOptions;\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.determineOwner)(requestOptions)\n        .then((owner) => `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_2__.getPortalUrl)(requestOptions)}/content/users/${owner}/export`)\n        .then((url) => (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, {\n        httpMethod: \"POST\",\n        authentication,\n        params: {\n            itemId,\n            title,\n            exportFormat,\n            exportParameters\n        }\n    }));\n};\n//# sourceMappingURL=export.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/export.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/get.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/get.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getItem\": () => (/* binding */ getItem),\n/* harmony export */   \"getItemBaseUrl\": () => (/* binding */ getItemBaseUrl),\n/* harmony export */   \"getItemData\": () => (/* binding */ getItemData),\n/* harmony export */   \"getItemGroups\": () => (/* binding */ getItemGroups),\n/* harmony export */   \"getItemInfo\": () => (/* binding */ getItemInfo),\n/* harmony export */   \"getItemMetadata\": () => (/* binding */ getItemMetadata),\n/* harmony export */   \"getItemParts\": () => (/* binding */ getItemParts),\n/* harmony export */   \"getItemResource\": () => (/* binding */ getItemResource),\n/* harmony export */   \"getItemResources\": () => (/* binding */ getItemResources),\n/* harmony export */   \"getItemStatus\": () => (/* binding */ getItemStatus),\n/* harmony export */   \"getRelatedItems\": () => (/* binding */ getRelatedItems)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _util_scrub_control_chars_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/scrub-control-chars.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/scrub-control-chars.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n/**\n * ```\n * import { getItem } from \"@esri/arcgis-rest-portal\";\n * //\n * getItem(\"ae7\")\n *   .then(response);\n * // or\n * getItem(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get an item by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item.htm) for more information.\n *\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction getItem(id, requestOptions) {\n    const url = getItemBaseUrl(id, requestOptions);\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Get the fully qualified base URL to the REST end point for an item.\n * @param id Item Id\n * @param portalUrlOrRequestOptions a portal URL or request options\n * @returns URL to the item's REST end point, defaults to `https://www.arcgis.com/sharing/rest/content/items/{id}`\n */\nconst getItemBaseUrl = (id, portalUrlOrRequestOptions) => {\n    const portalUrl = typeof portalUrlOrRequestOptions === \"string\"\n        ? portalUrlOrRequestOptions\n        : (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(portalUrlOrRequestOptions);\n    return `${portalUrl}/content/items/${id}`;\n};\n/**\n * ```\n * import { getItemData } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemData(\"ae7\")\n *   .then(response)\n * // or\n * getItemData(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get the /data for an item. If no data exists, returns `undefined`. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-data.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the json data for the item.\n */\nfunction getItemData(id, requestOptions) {\n    const url = `${getItemBaseUrl(id, requestOptions)}/data`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\", params: {} }, requestOptions);\n    if (options.file) {\n        options.params.f = null;\n    }\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).catch((err) => {\n        /* if the item doesn't include data, the response will be empty\n           and the internal call to response.json() will fail */\n        const emptyResponseErr = RegExp(/The string did not match the expected pattern|(Unexpected end of (JSON input|data at line 1 column 1))/i);\n        /* istanbul ignore else */\n        if (emptyResponseErr.test(err.message)) {\n            return;\n        }\n        else\n            throw err;\n    });\n}\n/**\n * ```\n * import { getRelatedItems } from \"@esri/arcgis-rest-portal\";\n * //\n * getRelatedItems({\n *   id: \"ae7\",\n *   relationshipType: \"Service2Layer\" // or several [\"Service2Layer\", \"Map2Area\"]\n * })\n *   .then(response)\n * ```\n * Get the related items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/related-items.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item resources.\n */\nfunction getRelatedItems(requestOptions) {\n    const url = `${getItemBaseUrl(requestOptions.id, requestOptions)}/relatedItems`;\n    const options = Object.assign({ httpMethod: \"GET\", params: {\n            direction: requestOptions.direction\n        } }, requestOptions);\n    if (typeof requestOptions.relationshipType === \"string\") {\n        options.params.relationshipType = requestOptions.relationshipType;\n    }\n    else {\n        options.params.relationshipTypes = requestOptions.relationshipType;\n    }\n    delete options.direction;\n    delete options.relationshipType;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Get the resources associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item resources.\n */\nfunction getItemResources(id, requestOptions) {\n    const url = `${getItemBaseUrl(id, requestOptions)}/resources`;\n    // Mix in num:1000 with any user supplied params\n    // Key thing - we don't want to mutate the passed in requestOptions\n    // as that may be used in other (subsequent) calls in the course\n    // of a long promise chains\n    const options = Object.assign({}, requestOptions);\n    options.params = Object.assign({ num: 1000 }, options.params);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Fetches an item resource and optionally parses it to the correct format.\n *\n * Provides JSON parse error protection by sanitizing out any unescaped control characters before parsing that would otherwise cause an error to be thrown.\n *\n * ```js\n * import { getItemResource } from \"@esri/arcgis-rest-portal\";\n *\n * // Parses contents as blob by default\n * getItemResource(\"3ef\", { fileName: \"resource.jpg\", ...})\n *  .then(resourceContents => {});\n *\n * // Can override parse method\n * getItemResource(\"3ef\", { fileName: \"resource.json\", readAs: 'json', ...})\n *  .then(resourceContents => {});\n *\n * // Get the response object instead\n * getItemResource(\"3ef\",{ rawResponse: true, fileName: \"resource.json\" })\n *  .then(response => {})\n * ```\n *\n * @param {string} itemId\n * @param {IGetItemResourceOptions} requestOptions\n */\nfunction getItemResource(itemId, requestOptions) {\n    const readAs = requestOptions.readAs || \"blob\";\n    return getItemFile(itemId, `/resources/${requestOptions.fileName}`, readAs, requestOptions);\n}\n/**\n * Lists the groups of which the item is a part, only showing the groups that the calling user can access. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/groups.htm) for more information.\n *\n * ```js\n * import { getItemGroups } from \"@esri/arcgis-rest-portal\";\n *\n * getItemGroups(\"30e5fe3149c34df1ba922e6f5bbf808f\")\n *   .then(response)\n * ```\n *\n * @param id - The Id of the item to query group association for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item groups.\n */\nfunction getItemGroups(id, requestOptions) {\n    const url = `${getItemBaseUrl(id, requestOptions)}/groups`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n/**\n * Inquire about status when publishing an item, adding an item in async mode, or adding with a multipart upload. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/status.htm) for more information.\n *\n * ```js\n * import { getItemStatus } from \"@esri/arcgis-rest-portal\";\n *\n * getItemStatus({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param id - The Id of the item to get status for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get the item status.\n */\nfunction getItemStatus(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/status`;\n        const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\"jobId\", \"jobType\"], { params: Object.assign({}, requestOptions.params) });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n/**\n * Lists the part numbers of the file parts that have already been uploaded in a multipart file upload. This method can be used to verify the parts that have been received as well as those parts that were not received by the server. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/parts.htm) for more information.\n *\n * ```js\n * import { getItemParts } from \"@esri/arcgis-rest-portal\";\n *\n * getItemParts({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param id - The Id of the item to get part list.\n * @param requestOptions - Options for the request\n * @returns A Promise to get the item part list.\n */\nfunction getItemParts(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/parts`;\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * ```\n * import { getItemInfo } from \"@esri/arcgis-rest-portal\";\n * // get the \"Info Card\" for the item\n * getItemInfo(\"ae7\")\n *   .then(itemInfoXml) // XML document as a string\n * // or get the contents of a specific file\n * getItemInfo(\"ae7\", { fileName: \"form.json\", readAs: \"json\", authentication })\n *   .then(formJson) // JSON document as JSON\n * ```\n * Get an info file for an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-info-file.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request, including the file name which defaults to `iteminfo.xml`.\n * If the file is not a text file (XML, HTML, etc) you will need to specify the `readAs` parameter\n * @returns A Promise that will resolve with the contents of the info file for the item.\n */\nfunction getItemInfo(id, requestOptions) {\n    const { fileName = \"iteminfo.xml\", readAs = \"text\" } = requestOptions || {};\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return getItemFile(id, `/info/${fileName}`, readAs, options);\n}\n/**\n * ```\n * import { getItemMetadata } from \"@esri/arcgis-rest-portal\";\n * // get the metadata for the item\n * getItemMetadata(\"ae7\")\n *   .then(itemMetadataXml) // XML document as a string\n * // or with additional request options\n * getItemMetadata(\"ae7\", { authentication })\n *   .then(itemMetadataXml) // XML document as a string\n * ```\n * Get the standard formal metadata XML file for an item (`/info/metadata/metadata.xml`)\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the contents of the metadata file for the item as a string.\n */\nfunction getItemMetadata(id, requestOptions) {\n    const options = Object.assign(Object.assign({}, requestOptions), { fileName: \"metadata/metadata.xml\" });\n    return getItemInfo(id, options);\n}\n// overrides request()'s default behavior for reading the response\n// which is based on `params.f` and defaults to JSON\n// Also adds JSON parse error protection by sanitizing out any unescaped control characters before parsing\nfunction getItemFile(id, \n// NOTE: fileName should include any folder/subfolders\nfileName, readMethod, requestOptions) {\n    const url = `${getItemBaseUrl(id, requestOptions)}${fileName}`;\n    // preserve escape hatch to let the consumer read the response\n    // and ensure the f param is not appended to the query string\n    const options = Object.assign({ params: {} }, requestOptions);\n    const justReturnResponse = options.rawResponse;\n    options.rawResponse = true;\n    options.params.f = null;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((response) => {\n        if (justReturnResponse) {\n            return response;\n        }\n        return readMethod !== \"json\"\n            ? response[readMethod]()\n            : response\n                .text()\n                .then((text) => JSON.parse((0,_util_scrub_control_chars_js__WEBPACK_IMPORTED_MODULE_2__.scrubControlChars)(text)));\n    });\n}\n//# sourceMappingURL=get.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/get.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bboxToString\": () => (/* binding */ bboxToString),\n/* harmony export */   \"determineOwner\": () => (/* binding */ determineOwner),\n/* harmony export */   \"isBBox\": () => (/* binding */ isBBox)\n/* harmony export */ });\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.\n */\nfunction determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return Promise.resolve(requestOptions.owner);\n    }\n    else if (requestOptions.item && requestOptions.item.owner) {\n        return Promise.resolve(requestOptions.item.owner);\n    }\n    else if (requestOptions.authentication &&\n        requestOptions.authentication.getUsername) {\n        return requestOptions.authentication.getUsername();\n    }\n    else {\n        return Promise.reject(new Error(\"Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option.\"));\n    }\n}\n/**\n * checks if the extent is a valid BBox (2 element array of coordinate pair arrays)\n * @param extent\n * @returns\n */\nfunction isBBox(extent) {\n    return (Array.isArray(extent) &&\n        Array.isArray(extent[0]) &&\n        Array.isArray(extent[1]));\n}\n/**\n * Given a Bbox, convert it to a string. Some api endpoints expect a string\n *\n * @param {BBox} extent\n * @return {*}  {string}\n */\nfunction bboxToString(extent) {\n    return extent.join(\",\");\n}\n//# sourceMappingURL=helpers.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/protect.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/protect.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"protectItem\": () => (/* binding */ protectItem),\n/* harmony export */   \"unprotectItem\": () => (/* binding */ unprotectItem)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Protect an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/protect.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to protect an item.\n */\nfunction protectItem(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/protect`;\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Unprotect an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/unprotect.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to unprotect an item.\n */\nfunction unprotectItem(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/unprotect`;\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n//# sourceMappingURL=protect.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/protect.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/reassign.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/reassign.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reassignItem\": () => (/* binding */ reassignItem)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _sharing_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sharing/helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Reassign an item from one user to another. Caller must be an org admin or the request will fail. `currentOwner` and `targetUsername` must be in the same organization or the request will fail\n *\n * ```js\n * import { reassignItem } from '@esri/arcgis-rest-portal';\n *\n * reassignItem({\n *   id: \"abc123\",\n *   currentOwner: \"charles\",\n *   targetUsername: \"leslie\",\n *   authentication\n * })\n * ```\n *\n * @param reassignOptions - Options for the request\n */\nfunction reassignItem(reassignOptions) {\n    return (0,_sharing_helpers_js__WEBPACK_IMPORTED_MODULE_2__.isOrgAdmin)(reassignOptions).then((isAdmin) => {\n        if (!isAdmin) {\n            throw Error(`Item ${reassignOptions.id} can not be reassigned because current user is not an organization administrator.`);\n        }\n        // we're operating as an org-admin\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(reassignOptions)}/content/users/${reassignOptions.currentOwner}/items/${reassignOptions.id}/reassign`;\n        const opts = {\n            params: {\n                targetUsername: reassignOptions.targetUsername,\n                targetFolderName: reassignOptions.targetFolderName\n            },\n            authentication: reassignOptions.authentication\n        };\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, opts);\n    });\n}\n//# sourceMappingURL=reassign.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/reassign.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/remove.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/remove.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"removeFolder\": () => (/* binding */ removeFolder),\n/* harmony export */   \"removeItem\": () => (/* binding */ removeItem),\n/* harmony export */   \"removeItemRelationship\": () => (/* binding */ removeItemRelationship),\n/* harmony export */   \"removeItemResource\": () => (/* binding */ removeItemResource)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Delete an item from the portal. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-item.htm) for more information.\n *\n * ```js\n * import { removeItem } from \"@esri/arcgis-rest-portal\";\n *\n * removeItem({\n *   id: \"3ef\",\n *   authentication\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes an item.\n */\nfunction removeItem(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/delete`;\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Remove a relationship between two items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-relationship.htm) for more information.\n *\n * ```js\n * import { removeItemRelationship } from \"@esri/arcgis-rest-portal\";\n *\n * removeItemRelationship({\n *   originItemId: '3ef',\n *   destinationItemId: 'ae7',\n *   relationshipType: 'Service2Layer',\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to add item resources.\n */\nfunction removeItemRelationship(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/deleteRelationship`;\n        const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\"originItemId\", \"destinationItemId\", \"relationshipType\"], { params: Object.assign({}, requestOptions.params) });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n/**\n * Remove a resource associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes an item resource.\n */\nfunction removeItemResource(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/removeResources`;\n        // mix in user supplied params\n        requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), { resource: requestOptions.resource });\n        // only override the deleteAll param specified previously if it is passed explicitly\n        if (typeof requestOptions.deleteAll !== \"undefined\") {\n            requestOptions.params.deleteAll = requestOptions.deleteAll;\n        }\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Delete a non-root folder and all the items it contains. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-folder.htm) for more information.\n *\n * ```js\n * import { removeFolder } from \"@esri/arcgis-rest-portal\";\n *\n * removeFolder({\n *   folderId: \"fe4\",\n *   owner: \"c@sey\",\n *   authentication\n * })\n *   .then(response)\n *\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes a folder\n */\nfunction removeFolder(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${encodeURIComponent(owner)}/${requestOptions.folderId}/delete`;\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n//# sourceMappingURL=remove.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/remove.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/search.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/search.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"searchItems\": () => (/* binding */ searchItems)\n/* harmony export */ });\n/* harmony import */ var _util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/generic-search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Search a portal for items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) for more information.\n *\n * ```js\n * import { searchItems } from \"@esri/arcgis-rest-portal\";\n *\n * searchItems('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchItems(search) {\n    return (0,_util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__.genericSearch)(search, \"item\");\n}\n//# sourceMappingURL=search.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/search.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/update.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/update.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"moveItem\": () => (/* binding */ moveItem),\n/* harmony export */   \"updateItem\": () => (/* binding */ updateItem),\n/* harmony export */   \"updateItemInfo\": () => (/* binding */ updateItemInfo),\n/* harmony export */   \"updateItemResource\": () => (/* binding */ updateItemResource)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Update an Item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.\n *\n * ```js\n * import { updateItem } from \"@esri/arcgis-rest-portal\";\n *\n * updateItem({\n *   item: {\n *     id: \"3ef\",\n *     description: \"A three hour tour\"\n *   },\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that updates an item.\n */\nfunction updateItem(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = requestOptions.folderId\n            ? `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/${requestOptions.folderId}/items/${requestOptions.item.id}/update`\n            : `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.item.id}/update`;\n        // serialize the item into something Portal will accept\n        requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), requestOptions.item);\n        // convert extent, if present, into a string from bbox\n        // processParams was previously doing this sort of work,\n        // however now we need to let array of arrays through\n        // Thus for extents we need to move this logic here\n        if (requestOptions.params.extent && (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.isBBox)(requestOptions.params.extent)) {\n            requestOptions.params.extent = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.bboxToString)(requestOptions.params.extent);\n        }\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Update an info file associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-info.htm) for more information.\n *\n * ```js\n * import { updateItemInfo } from \"@esri/arcgis-rest-portal\";\n *\n * updateItemInfo({\n *   id: '3ef',\n *   file: file,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that updates an item info file.\n */\nfunction updateItemInfo(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/updateinfo`;\n        // mix in user supplied params\n        requestOptions.params = Object.assign({ folderName: requestOptions.folderName, file: requestOptions.file }, requestOptions.params);\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Update an info file associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-info.htm) for more information.\n *\n * ```js\n * import { updateItemResource } from \"@esri/arcgis-rest-portal\";\n *\n * updateItemResource({\n *   id: '3ef',\n *   resource: file,\n *   name: 'bigkahuna.jpg',\n *   authentication\n * })\n *   .then(response)\n * ```\n * Update a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that updates an item resource.\n */\nfunction updateItemResource(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/updateResources`;\n        // mix in user supplied params\n        requestOptions.params = Object.assign({ file: requestOptions.resource, fileName: requestOptions.name, resourcesPrefix: requestOptions.prefix, text: requestOptions.content }, requestOptions.params);\n        // only override the access specified previously if 'private' is passed explicitly\n        if (typeof requestOptions.private !== \"undefined\") {\n            requestOptions.params.access = requestOptions.private\n                ? \"private\"\n                : \"inherit\";\n        }\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n/**\n * Move an item to a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/move-item.htm) for more information.\n *\n * ```js\n * import { moveItem } from \"@esri/arcgis-rest-portal\";\n * //\n * moveItem({\n *   itemId: \"3ef\",\n *   folderId: \"7c5\",\n *   authentication: ArcGISIdentityManager\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with owner and folder details once the move has been completed\n */\nfunction moveItem(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.itemId}/move`;\n        let folderId = requestOptions.folderId;\n        if (!folderId) {\n            folderId = \"/\";\n        }\n        requestOptions.params = Object.assign({ folder: folderId }, requestOptions.params);\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n//# sourceMappingURL=update.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/update.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/items/upload.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/items/upload.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addItemPart\": () => (/* binding */ addItemPart),\n/* harmony export */   \"cancelItemUpload\": () => (/* binding */ cancelItemUpload),\n/* harmony export */   \"commitItemUpload\": () => (/* binding */ commitItemUpload)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js\");\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Add Item Part allows the caller to upload a file part when doing an add or update item operation in multipart mode. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item-part.htm) for more information.\n *\n * ```js\n * import { addItemPart } from \"@esri/arcgis-rest-portal\";\n *\n * addItemPart({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   file: data,\n *   partNum: 1,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to add the item part status.\n */\nfunction addItemPart(requestOptions) {\n    const partNum = requestOptions.partNum;\n    if (!Number.isInteger(partNum) || partNum < 1 || partNum > 10000) {\n        return Promise.reject(new Error(\"The part number must be an integer between 1 to 10000, inclusive.\"));\n    }\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        // AGO adds the \"partNum\" parameter in the query string, not in the body\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/addPart?partNum=${partNum}`;\n        const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [\"file\"], { params: Object.assign({}, requestOptions.params) });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n/**\n * Commit is called once all parts are uploaded during a multipart Add Item or Update Item operation. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/commit.htm) for more information.\n *\n * ```js\n * import { commitItemUpload } from \"@esri/arcgis-rest-portal\";\n * //\n * commitItemUpload({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get the commit result.\n */\nfunction commitItemUpload(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/commit`;\n        const options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(requestOptions, [], {\n            params: Object.assign(Object.assign({}, requestOptions.params), requestOptions.item)\n        });\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n    });\n}\n/**\n * Cancels a multipart upload on an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/cancel.htm) for more information.\n *\n * ```js\n * import { cancelItemUpload } from \"@esri/arcgis-rest-portal\";\n * //\n * cancelItemUpload({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get the commit result.\n */\nfunction cancelItemUpload(requestOptions) {\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.determineOwner)(requestOptions).then((owner) => {\n        const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${owner}/items/${requestOptions.id}/cancel`;\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n    });\n}\n//# sourceMappingURL=upload.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/items/upload.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/orgs/notification.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/orgs/notification.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createOrgNotification\": () => (/* binding */ createOrgNotification)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _util_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/array.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js\");\n\n\n\n/**\n * Send a notification to members of the requesting user's org. Operation success will be indicated by a flag on the return object. If there are any errors, they will be placed in an errors array on the return object\n *\n * ```js\n * const authentication: IAuthenticationManager; // Typically passed into to the function\n *\n * const options: IInviteGroupUsersOptions = {\n *  id: 'group_id',\n *  users: ['larry', 'curly', 'moe'],\n *  notificationChannelType: 'email',\n *  expiration: 20160,\n *  authentication\n * }\n *\n * const result = await createOrgNotification(options);\n *\n * const if_success_result_looks_like = {\n *  success: true\n * }\n *\n * const if_failure_result_looks_like = {\n *  success: false,\n *  errors: [ArcGISRequestError]\n * }\n * ```\n *\n * @param {ICreateOrgNotificationOptions} options\n * @returns {ICreateOrgNotificationResult}\n */\nfunction createOrgNotification(options) {\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(options)}/portals/self/createNotification`;\n    const batches = _generateBatchRequests(options);\n    const promises = batches.map((batch) => _sendSafeRequest(url, batch));\n    return Promise.all(promises).then(_combineResults);\n}\n/**\n * @private\n */\nfunction _generateBatchRequests(options) {\n    const userBatches = (0,_util_array_js__WEBPACK_IMPORTED_MODULE_2__.chunk)(options.users, options.batchSize || 25);\n    return userBatches.map((users) => _generateRequestOptions(users, options));\n}\n/**\n * @private\n */\nfunction _generateRequestOptions(users, baseOptions) {\n    const requestOptions = Object.assign({}, baseOptions);\n    requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), { users, subject: baseOptions.subject, message: baseOptions.message, notificationChannelType: requestOptions.notificationChannelType });\n    return requestOptions;\n}\n/**\n * @private\n */\nfunction _sendSafeRequest(url, requestOptions) {\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions).catch((error) => ({ errors: [error] }));\n}\n/**\n * @private\n */\nfunction _combineResults(responses) {\n    const success = responses.every((res) => res.success);\n    const errors = responses.reduce((collection, res) => collection.concat(res.errors || []), []);\n    const combined = { success };\n    if (errors.length > 0) {\n        combined.errors = errors;\n    }\n    return combined;\n}\n//# sourceMappingURL=notification.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/orgs/notification.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/services/get-unique-service-name.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/services/get-unique-service-name.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUniqueServiceName\": () => (/* binding */ getUniqueServiceName)\n/* harmony export */ });\n/* harmony import */ var _is_service_name_available_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-service-name-available.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/services/is-service-name-available.js\");\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Given a starting name, return a service name that is unique within\n * the current users organization\n *\n * @export\n * @param {string} name\n * @param {ArcGISIdentityManager} session\n * @param {number} step\n * @return {*}  {Promise<string>}\n */\nfunction getUniqueServiceName(name, type, session, step) {\n    let nameToCheck = name;\n    if (step) {\n        nameToCheck = `${name}_${step}`;\n    }\n    return (0,_is_service_name_available_js__WEBPACK_IMPORTED_MODULE_0__.isServiceNameAvailable)(nameToCheck, type, session).then((response) => {\n        if (response.available) {\n            return nameToCheck;\n        }\n        else {\n            step = step + 1;\n            return getUniqueServiceName(name, type, session, step);\n        }\n    });\n}\n//# sourceMappingURL=get-unique-service-name.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/services/get-unique-service-name.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/services/is-service-name-available.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/services/is-service-name-available.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isServiceNameAvailable\": () => (/* binding */ isServiceNameAvailable)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Determine if a specific service name is available in the current user's organization\n *\n * @export\n * @param {string} name\n * @param {ArcGISIdentityManager} session\n * @return {*}  {Promise<IServiceNameAvailable>}\n */\nfunction isServiceNameAvailable(name, type, session) {\n    const url = `${session.portal}/portals/self/isServiceNameAvailable`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, {\n        params: {\n            name,\n            type\n        },\n        httpMethod: \"GET\",\n        authentication: session\n    });\n}\n//# sourceMappingURL=is-service-name-available.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/services/is-service-name-available.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/access.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/access.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setItemAccess\": () => (/* binding */ setItemAccess)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Change who is able to access an item.\n *\n * ```js\n * import { setItemAccess } from \"@esri/arcgis-rest-portal\";\n *\n * setItemAccess({\n *   id: \"abc123\",\n *   access: \"public\", // 'org' || 'private'\n *   authentication: session\n * })\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction setItemAccess(requestOptions) {\n    const url = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.getSharingUrl)(requestOptions);\n    if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.isItemOwner)(requestOptions)) {\n        // if the user owns the item, proceed\n        return updateItemAccess(url, requestOptions);\n    }\n    else {\n        // otherwise we need to check to see if they are an organization admin\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.isOrgAdmin)(requestOptions).then((admin) => {\n            if (admin) {\n                return updateItemAccess(url, requestOptions);\n            }\n            else {\n                // if neither, updating the sharing isnt possible\n                throw Error(`This item can not be shared by ${requestOptions.authentication.username}. They are neither the item owner nor an organization admin.`);\n            }\n        });\n    }\n}\nfunction updateItemAccess(url, requestOptions) {\n    requestOptions.params = Object.assign({ org: false, everyone: false }, requestOptions.params);\n    // if the user wants to make the item private, it needs to be unshared from any/all groups as well\n    if (requestOptions.access === \"private\") {\n        requestOptions.params.groups = \" \";\n    }\n    if (requestOptions.access === \"org\") {\n        requestOptions.params.org = true;\n    }\n    // if sharing with everyone, share with the entire organization as well.\n    if (requestOptions.access === \"public\") {\n        // this is how the ArcGIS Online Home app sets public access\n        // setting org = true instead of account = true will cancel out all sharing\n        requestOptions.params.account = true;\n        requestOptions.params.everyone = true;\n    }\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=access.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/access.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSharingUrl\": () => (/* binding */ getSharingUrl),\n/* harmony export */   \"getUserMembership\": () => (/* binding */ getUserMembership),\n/* harmony export */   \"isItemOwner\": () => (/* binding */ isItemOwner),\n/* harmony export */   \"isOrgAdmin\": () => (/* binding */ isOrgAdmin)\n/* harmony export */ });\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _groups_get_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../groups/get.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/get.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\nfunction getSharingUrl(requestOptions) {\n    const username = requestOptions.authentication.username;\n    const owner = requestOptions.owner || username;\n    return `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_0__.getPortalUrl)(requestOptions)}/content/users/${encodeURIComponent(owner)}/items/${requestOptions.id}/share`;\n}\nfunction isItemOwner(requestOptions) {\n    const username = requestOptions.authentication.username;\n    const owner = requestOptions.owner || username;\n    return owner === username;\n}\n/**\n * Check it the user is a full org_admin\n * @param requestOptions\n * @returns Promise resolving in a boolean indicating if the user is an ArcGIS Organization administrator\n */\nfunction isOrgAdmin(requestOptions) {\n    const session = requestOptions.authentication;\n    return session.getUser(requestOptions).then((user) => {\n        return user && user.role === \"org_admin\" && !user.roleId;\n    });\n}\n/**\n * Get the User Membership for a particular group. Use this if all you have is the groupId.\n * If you have the group object, check the `userMembership.memberType` property instead of calling this method.\n *\n * @param requestOptions\n * @returns A Promise that resolves with \"owner\" | \"admin\" | \"member\" | \"nonmember\"\n */\nfunction getUserMembership(requestOptions) {\n    // fetch the group...\n    return (0,_groups_get_js__WEBPACK_IMPORTED_MODULE_1__.getGroup)(requestOptions.groupId, requestOptions)\n        .then((group) => {\n        return group.userMembership.memberType;\n    })\n        .catch(() => {\n        return \"none\";\n    });\n}\n//# sourceMappingURL=helpers.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/is-item-shared-with-group.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/is-item-shared-with-group.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isItemSharedWithGroup\": () => (/* binding */ isItemSharedWithGroup)\n/* harmony export */ });\n/* harmony import */ var _items_search_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../items/search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/items/search.js\");\n\n/**\n * Find out whether or not an item is already shared with a group.\n *\n * ```js\n * import { isItemSharedWithGroup } from \"@esri/arcgis-rest-portal\";\n *\n * isItemSharedWithGroup({\n *   groupId: 'bc3,\n *   itemId: 'f56,\n *   authentication\n * })\n * .then(isShared => {})\n * ```\n \n *\n * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n * @returns Promise that will resolve with true/false\n */\nfunction isItemSharedWithGroup(requestOptions) {\n    const searchOpts = {\n        q: `id: ${requestOptions.id} AND group: ${requestOptions.groupId}`,\n        start: 1,\n        num: 10,\n        sortField: \"title\",\n        authentication: requestOptions.authentication,\n        httpMethod: \"POST\"\n    };\n    return (0,_items_search_js__WEBPACK_IMPORTED_MODULE_0__.searchItems)(searchOpts).then((searchResponse) => {\n        let result = false;\n        if (searchResponse.total > 0) {\n            result = searchResponse.results.some((itm) => {\n                return itm.id === requestOptions.id;\n            });\n            return result;\n        }\n    });\n}\n//# sourceMappingURL=is-item-shared-with-group.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/is-item-shared-with-group.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/share-item-with-group.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/share-item-with-group.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ensureMembership\": () => (/* binding */ ensureMembership),\n/* harmony export */   \"shareItemWithGroup\": () => (/* binding */ shareItemWithGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js\");\n/* harmony import */ var _users_get_user_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../users/get-user.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js\");\n/* harmony import */ var _groups_add_users_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../groups/add-users.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/add-users.js\");\n/* harmony import */ var _groups_remove_users_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../groups/remove-users.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/remove-users.js\");\n/* harmony import */ var _groups_update_user_membership_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../groups/update-user-membership.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/update-user-membership.js\");\n/* harmony import */ var _sharing_is_item_shared_with_group_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../sharing/is-item-shared-with-group.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/is-item-shared-with-group.js\");\n\n\n\n\n\n\n\n\n/**\n * Share an item with a group, either as an [item owner](https://developers.arcgis.com/rest/users-groups-and-items/share-item-as-item-owner-.htm), [group admin](https://developers.arcgis.com/rest/users-groups-and-items/share-item-as-group-admin-.htm) or organization admin.\n *\n * Sharing the item as an Admin will use the `/content/users/:ownername/items/:itemid/share` end-point\n *\n * ```js\n * import { shareItemWithGroup } from '@esri/arcgis-rest-portal';\n *\n * shareItemWithGroup({\n *   id: \"abc123\",\n *   groupId: \"xyz987\",\n *   owner: \"some-owner\",\n *   authentication\n * })\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction shareItemWithGroup(requestOptions) {\n    return (0,_sharing_is_item_shared_with_group_js__WEBPACK_IMPORTED_MODULE_7__.isItemSharedWithGroup)(requestOptions)\n        .then((isShared) => {\n        if (isShared) {\n            // already shared, exit early with success response\n            return {\n                itemId: requestOptions.id,\n                shortcut: true,\n                notSharedWith: []\n            };\n        }\n        const { authentication: { username }, owner, confirmItemControl } = requestOptions;\n        const itemOwner = owner || username;\n        // non-item owner\n        if (itemOwner !== username) {\n            // need to track if the user is an admin\n            let isAdmin = false;\n            // track if the admin & owner are in the same org\n            let isCrossOrgSharing = false;\n            // next perform any necessary membership adjustments for\n            // current user and/or item owner\n            return Promise.all([\n                (0,_users_get_user_js__WEBPACK_IMPORTED_MODULE_3__.getUser)({\n                    username,\n                    authentication: requestOptions.authentication\n                }),\n                (0,_users_get_user_js__WEBPACK_IMPORTED_MODULE_3__.getUser)({\n                    username: itemOwner,\n                    authentication: requestOptions.authentication\n                }),\n                (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getUserMembership)(requestOptions)\n            ])\n                .then(([currentUser, ownerUser, membership]) => {\n                const isSharedEditingGroup = !!confirmItemControl;\n                isAdmin = currentUser.role === \"org_admin\" && !currentUser.roleId;\n                isCrossOrgSharing = currentUser.orgId !== ownerUser.orgId;\n                return getMembershipAdjustments(currentUser, isSharedEditingGroup, membership, isAdmin, ownerUser, requestOptions);\n            })\n                .then((membershipAdjustments) => {\n                const [{ revert } = {\n                    promise: Promise.resolve({ notAdded: [] }),\n                    revert: (sharingResults) => {\n                        return Promise.resolve(sharingResults);\n                    }\n                }] = membershipAdjustments;\n                // perform all membership adjustments\n                return Promise.all(membershipAdjustments.map(({ promise }) => promise))\n                    .then(() => {\n                    // then attempt the share\n                    return shareToGroup(requestOptions, isAdmin, isCrossOrgSharing);\n                })\n                    .then((sharingResults) => {\n                    // lastly, if the admin user was added to the group,\n                    // remove them from the group. this is a no-op that\n                    // immediately resolves the sharingResults when no\n                    // membership adjustment was needed\n                    return revert(sharingResults);\n                });\n            });\n        }\n        // item owner, let it call through\n        return shareToGroup(requestOptions);\n    })\n        .then((sharingResponse) => {\n        if (sharingResponse.notSharedWith.length) {\n            throw Error(`Item ${requestOptions.id} could not be shared to group ${requestOptions.groupId}.`);\n        }\n        else {\n            // all is well\n            return sharingResponse;\n        }\n    });\n}\nfunction getMembershipAdjustments(currentUser, isSharedEditingGroup, membership, isAdmin, ownerUser, requestOptions) {\n    const membershipGuarantees = [];\n    if (requestOptions.groupId !== currentUser.favGroupId) {\n        if (isSharedEditingGroup) {\n            if (!isAdmin) {\n                // abort and reject promise\n                throw Error(`This item can not be shared to shared editing group ${requestOptions.groupId} by ${currentUser.username} as they not the item owner or org admin.`);\n            }\n            membershipGuarantees.push(\n            // admin user must be a group member to share, should be reverted afterwards\n            ensureMembership(currentUser, currentUser, false, `Error adding ${currentUser.username} as member to edit group ${requestOptions.groupId}. Consequently item ${requestOptions.id} was not shared to the group.`, requestOptions), \n            // item owner must be a group admin\n            ensureMembership(currentUser, ownerUser, true, membership === \"none\"\n                ? `Error adding user ${ownerUser.username} to edit group ${requestOptions.groupId}. Consequently item ${requestOptions.id} was not shared to the group.`\n                : `Error promoting user ${ownerUser.username} to admin in edit group ${requestOptions.groupId}. Consequently item ${requestOptions.id} was not shared to the group.`, requestOptions));\n        }\n        else if (isAdmin) {\n            // admin user must be a group member to share, should be reverted afterwards\n            membershipGuarantees.push(ensureMembership(currentUser, currentUser, false, `Error adding ${currentUser.username} as member to view group ${requestOptions.groupId}. Consequently item ${requestOptions.id} was not shared to the group.`, requestOptions));\n        }\n        else if (membership === \"none\") {\n            // all other non-item owners must be a group member\n            throw new Error(`This item can not be shared by ${currentUser.username} as they are not a member of the specified group ${requestOptions.groupId}.`);\n        }\n    }\n    return membershipGuarantees;\n}\nfunction shareToGroup(requestOptions, isAdmin = false, isCrossOrgSharing = false) {\n    const username = requestOptions.authentication.username;\n    const itemOwner = requestOptions.owner || username;\n    // decide what url to use\n    // default to the non-owner url...\n    let url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/items/${requestOptions.id}/share`;\n    // but if they are the owner, or org_admin, use this route\n    // Note: When using this end-point as an admin, apparently the admin does not need to be a member of the group (the itemOwner does)\n    // Note: Admin's can only use this route when the item is in the same org they are admin for\n    if (itemOwner === username || (isAdmin && !isCrossOrgSharing)) {\n        url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${itemOwner}/items/${requestOptions.id}/share`;\n    }\n    // now its finally time to do the sharing\n    requestOptions.params = {\n        groups: requestOptions.groupId,\n        confirmItemControl: requestOptions.confirmItemControl\n    };\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\nfunction ensureMembership(currentUser, ownerUser, shouldPromote, errorMessage, requestOptions) {\n    const ownerGroups = ownerUser.groups || [];\n    const group = ownerGroups.find((g) => {\n        return g.id === requestOptions.groupId;\n    });\n    // if they are in different orgs, eject\n    if (currentUser.orgId !== ownerUser.orgId) {\n        throw Error(`User ${ownerUser.username} is not a member of the same org as ${currentUser.username}. Consequently they can not be added added to group ${requestOptions.groupId} nor can item ${requestOptions.id} be shared to the group.`);\n    }\n    // if owner is not a member, and has 512 groups\n    if (!group && ownerGroups.length > 511) {\n        throw Error(`User ${ownerUser.username} already has 512 groups, and can not be added to group ${requestOptions.groupId}. Consequently item ${requestOptions.id} can not be shared to the group.`);\n    }\n    let promise;\n    let revert;\n    // decide if we need to add them or upgrade them\n    if (group) {\n        // they are in the group...\n        // check member type\n        if (shouldPromote && group.userMembership.memberType === \"member\") {\n            // promote them\n            promise = (0,_groups_update_user_membership_js__WEBPACK_IMPORTED_MODULE_6__.updateUserMemberships)({\n                id: requestOptions.groupId,\n                users: [ownerUser.username],\n                newMemberType: \"admin\",\n                authentication: requestOptions.authentication\n            })\n                .then((results) => {\n                // convert the result into the right type\n                const notAdded = results.results.reduce((acc, entry) => {\n                    if (!entry.success) {\n                        acc.push(entry.username);\n                    }\n                    return acc;\n                }, []);\n                // and return it\n                return Promise.resolve({ notAdded });\n            })\n                .catch(() => ({ notAdded: [ownerUser.username] }));\n            revert = (sharingResults) => (0,_groups_update_user_membership_js__WEBPACK_IMPORTED_MODULE_6__.updateUserMemberships)({\n                id: requestOptions.groupId,\n                users: [ownerUser.username],\n                newMemberType: \"member\",\n                authentication: requestOptions.authentication\n            })\n                .then(() => sharingResults)\n                .catch(() => sharingResults);\n        }\n        else {\n            // they are already an admin in the group\n            // return the same response the API would if we added them\n            promise = Promise.resolve({ notAdded: [] });\n            revert = (sharingResults) => Promise.resolve(sharingResults);\n        }\n    }\n    else {\n        // attempt to add user to group\n        const userType = shouldPromote ? \"admins\" : \"users\";\n        // can't currently determine if the group is within the admin's\n        // org without performing a search, so attempt to add and handle\n        // the api error\n        promise = (0,_groups_add_users_js__WEBPACK_IMPORTED_MODULE_4__.addGroupUsers)({\n            id: requestOptions.groupId,\n            [userType]: [ownerUser.username],\n            authentication: requestOptions.authentication\n        })\n            .then((results) => {\n            // results.errors includes an ArcGISAuthError when the group\n            // is in a different org, but notAdded is empty, throw here\n            // to normalize the results in below catch\n            if (results.errors && results.errors.length) {\n                throw results.errors[0];\n            }\n            return results;\n        })\n            .catch(() => ({ notAdded: [ownerUser.username] }));\n        revert = (sharingResults) => {\n            return (0,_groups_remove_users_js__WEBPACK_IMPORTED_MODULE_5__.removeGroupUsers)({\n                id: requestOptions.groupId,\n                users: [ownerUser.username],\n                authentication: requestOptions.authentication\n            }).then(() => {\n                // always resolves, suppress any resolved errors\n                return sharingResults;\n            });\n        };\n    }\n    return {\n        promise: promise.then((membershipResponse) => {\n            if (membershipResponse.notAdded.length) {\n                throw new Error(errorMessage);\n            }\n            return membershipResponse;\n        }),\n        revert\n    };\n}\n//# sourceMappingURL=share-item-with-group.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/share-item-with-group.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/unshare-item-with-group.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/unshare-item-with-group.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unshareItemWithGroup\": () => (/* binding */ unshareItemWithGroup)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/helpers.js\");\n/* harmony import */ var _is_item_shared_with_group_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-item-shared-with-group.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/is-item-shared-with-group.js\");\n/* harmony import */ var _users_get_user_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../users/get-user.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js\");\n\n\n\n\n\n/**\n * Stop sharing an item with a group, either as an\n * [item owner](https://developers.arcgis.com/rest/users-groups-and-items/unshare-item-as-item-owner-.htm),\n * [group admin](https://developers.arcgis.com/rest/users-groups-and-items/unshare-item-as-group-admin-.htm) or\n * organization admin.\n *\n * ```js\n * import { unshareItemWithGroup } from '@esri/arcgis-rest-portal';\n *\n * unshareItemWithGroup({\n *   id: \"abc123\",\n *   groupId: \"xyz987\",\n *   owner: \"some-owner\",\n *   authentication: session\n * })\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction unshareItemWithGroup(requestOptions) {\n    return (0,_is_item_shared_with_group_js__WEBPACK_IMPORTED_MODULE_3__.isItemSharedWithGroup)(requestOptions).then((isShared) => {\n        // not shared\n        if (!isShared) {\n            // exit early with success response\n            return Promise.resolve({\n                itemId: requestOptions.id,\n                shortcut: true,\n                notUnsharedFrom: []\n            });\n        }\n        const { authentication: { username }, owner } = requestOptions;\n        // next check if the user is a member of the group\n        return Promise.all([\n            (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getUserMembership)(requestOptions),\n            (0,_users_get_user_js__WEBPACK_IMPORTED_MODULE_4__.getUser)({\n                username,\n                authentication: requestOptions.authentication\n            })\n        ])\n            .then(([membership, currentUser]) => {\n            const itemOwner = owner || username;\n            const isItemOwner = itemOwner === username;\n            const isAdmin = currentUser.role === \"org_admin\" && !currentUser.roleId;\n            if (!isItemOwner &&\n                !isAdmin &&\n                [\"admin\", \"owner\"].indexOf(membership) < 0) {\n                // abort and reject promise\n                throw Error(`This item can not be unshared from group ${requestOptions.groupId} by ${username} as they not the item owner, an org admin, group admin or group owner.`);\n            }\n            // let the sharing call go\n            return unshareFromGroup(requestOptions);\n        })\n            .then((sharingResponse) => {\n            if (sharingResponse.notUnsharedFrom.length) {\n                throw Error(`Item ${requestOptions.id} could not be unshared to group ${requestOptions.groupId}`);\n            }\n            else {\n                // all is well\n                return sharingResponse;\n            }\n        });\n    });\n}\nfunction unshareFromGroup(requestOptions) {\n    const username = requestOptions.authentication.username;\n    const itemOwner = requestOptions.owner || username;\n    // decide what url to use\n    // default to the non-owner url...\n    let url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/items/${requestOptions.id}/unshare`;\n    // but if they are the owner, we use a different path...\n    if (itemOwner === username) {\n        url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/content/users/${itemOwner}/items/${requestOptions.id}/unshare`;\n    }\n    // now its finally time to do the sharing\n    requestOptions.params = {\n        groups: requestOptions.groupId\n    };\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=unshare-item-with-group.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/sharing/unshare-item-with-group.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-tags.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-tags.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUserTags\": () => (/* binding */ getUserTags)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Users tag the content they publish in their portal via the add and update item calls. This resource lists all the tags used by the user along with the number of times the tags have been used. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-tags.htm) for more information.\n *\n * ```js\n * import { getUserTags } from '@esri/arcgis-rest-portal';\n *\n * getUserTags({\n *   username: \"jsmith\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param IGetUserOptions - options to pass through in the request\n * @returns A Promise that will resolve with the user tag array\n */\nfunction getUserTags(requestOptions) {\n    const username = requestOptions.username || requestOptions.authentication.username;\n    const url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/users/${encodeURIComponent(username)}/tags`;\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=get-user-tags.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-tags.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUserUrl\": () => (/* binding */ getUserUrl)\n/* harmony export */ });\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Helper that returns the [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm) for a given portal.\n *\n * @param session\n * @returns User url to be used in API requests.\n */\nfunction getUserUrl(session) {\n    return `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_0__.getPortalUrl)(session)}/community/users/${encodeURIComponent(session.username)}`;\n}\n//# sourceMappingURL=get-user-url.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user-url.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUser\": () => (/* binding */ getUser)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Get information about a user. This method has proven so generically useful that you can also call {@linkcode ArcGISIdentityManager.getUser}.\n *\n * ```js\n * import { getUser } from '@esri/arcgis-rest-portal';\n * //\n * getUser(\"jsmith\")\n *   .then(response)\n * // => { firstName: \"John\", lastName: \"Smith\",tags: [\"GIS Analyst\", \"City of Redlands\"] }\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with metadata about the user\n */\nfunction getUser(requestOptions) {\n    let url;\n    let options = { httpMethod: \"GET\" };\n    // if a username is passed, assume ArcGIS Online\n    if (typeof requestOptions === \"string\") {\n        url = `https://www.arcgis.com/sharing/rest/community/users/${requestOptions}`;\n    }\n    else {\n        // if an authenticated session is passed, default to that user/portal unless another username is provided manually\n        const username = requestOptions.username || requestOptions.authentication.username;\n        url = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/users/${encodeURIComponent(username)}`;\n        options = Object.assign(Object.assign({}, requestOptions), options);\n    }\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=get-user.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/invitation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/invitation.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acceptInvitation\": () => (/* binding */ acceptInvitation),\n/* harmony export */   \"declineInvitation\": () => (/* binding */ declineInvitation),\n/* harmony export */   \"getUserInvitation\": () => (/* binding */ getUserInvitation),\n/* harmony export */   \"getUserInvitations\": () => (/* binding */ getUserInvitations)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Get all invitations for a user. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-invitations.htm) for more information.\n *\n * ```js\n * import { getUserInvitations } from '@esri/arcgis-rest-portal';\n *\n * getUserInvitations({ authentication })\n *   .then(response) // response.userInvitations.length => 3\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with the user's invitations\n */\nfunction getUserInvitations(requestOptions) {\n    let options = { httpMethod: \"GET\" };\n    const username = encodeURIComponent(requestOptions.authentication.username);\n    const portalUrl = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions);\n    const url = `${portalUrl}/community/users/${username}/invitations`;\n    options = Object.assign(Object.assign({}, requestOptions), options);\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Get an invitation for a user by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-invitation.htm) for more information.\n *\n * ```js\n * import { getUserInvitation } from '@esri/arcgis-rest-portal';\n * // username is inferred from ArcGISIdentityManager\n * getUserInvitation({\n *   invitationId: \"3ef\",\n *   authentication\n * })\n *   .then(response) // => response.accepted => true\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with the invitation\n */\nfunction getUserInvitation(requestOptions) {\n    const username = encodeURIComponent(requestOptions.authentication.username);\n    const portalUrl = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions);\n    const url = `${portalUrl}/community/users/${username}/invitations/${requestOptions.invitationId}`;\n    let options = { httpMethod: \"GET\" };\n    options = Object.assign(Object.assign({}, requestOptions), options);\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Accept an invitation. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/accept-invitation.htm) for more information.\n *\n * ```js\n * import { acceptInvitation } from '@esri/arcgis-rest-portal';\n *\n * acceptInvitation({\n *   invitationId: \"3ef\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction acceptInvitation(requestOptions) {\n    const username = encodeURIComponent(requestOptions.authentication.username);\n    const portalUrl = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions);\n    const url = `${portalUrl}/community/users/${username}/invitations/${requestOptions.invitationId}/accept`;\n    const options = Object.assign({}, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Decline an invitation. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/decline-invitation.htm) for more information.\n *\n * ```js\n * import { declineInvitation } from '@esri/arcgis-rest-portal';\n * // username is inferred from ArcGISIdentityManager\n * declineInvitation({\n *   invitationId: \"3ef\",\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction declineInvitation(requestOptions) {\n    const username = encodeURIComponent(requestOptions.authentication.username);\n    const portalUrl = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions);\n    const url = `${portalUrl}/community/users/${username}/invitations/${requestOptions.invitationId}/decline`;\n    const options = Object.assign({}, requestOptions);\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=invitation.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/invitation.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/notification.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/notification.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUserNotifications\": () => (/* binding */ getUserNotifications),\n/* harmony export */   \"removeNotification\": () => (/* binding */ removeNotification)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Get notifications for a user.\n *\n * ```js\n * import { getUserNotifications } from '@esri/arcgis-rest-portal';\n *\n * getUserNotifications({ authentication })\n *   .then(results) // results.notifications.length) => 3\n * ```\n *\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with the user's notifications\n */\nfunction getUserNotifications(requestOptions) {\n    let options = { httpMethod: \"GET\" };\n    const username = encodeURIComponent(requestOptions.authentication.username);\n    const portalUrl = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions);\n    const url = `${portalUrl}/community/users/${username}/notifications`;\n    options = Object.assign(Object.assign({}, requestOptions), options);\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n/**\n * Delete a notification.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nfunction removeNotification(requestOptions) {\n    const username = encodeURIComponent(requestOptions.authentication.username);\n    const portalUrl = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions);\n    const url = `${portalUrl}/community/users/${username}/notifications/${requestOptions.id}/delete`;\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, requestOptions);\n}\n//# sourceMappingURL=notification.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/notification.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/search-users.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/search-users.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"searchUsers\": () => (/* binding */ searchUsers)\n/* harmony export */ });\n/* harmony import */ var _util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/generic-search.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js\");\n\n/**\n * Search a portal for users.\n *\n * ```js\n * import { searchItems } from \"@esri/arcgis-rest-portal\";\n * //\n * searchUsers({ q: 'tommy', authentication })\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchUsers(search) {\n    return (0,_util_generic_search_js__WEBPACK_IMPORTED_MODULE_0__.genericSearch)(search, \"user\");\n}\n//# sourceMappingURL=search-users.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/search-users.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/users/update.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/users/update.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateUser\": () => (/* binding */ updateUser)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Update a user profile. The username will be extracted from the authentication session unless it is provided explicitly. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-user.htm) for more information.\n *\n * ```js\n * import { updateUser } from '@esri/arcgis-rest-portal';\n *\n * // any user can update their own profile\n * updateUser({\n *   authentication,\n *   user: { description: \"better than the last one\" }\n * })\n *   .then(response)\n *\n * // org administrators must declare the username that will be updated explicitly\n * updateUser({\n *   authentication,\n *   user: { username: \"c@sey\", description: \"\" }\n * })\n *   .then(response)\n * // => { \"success\": true, \"username\": \"c@sey\" }\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with metadata about the user\n */\nfunction updateUser(requestOptions) {\n    // default to the authenticated username unless another username is provided manually\n    const username = requestOptions.user.username || requestOptions.authentication.username;\n    const updateUrl = `${(0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/community/users/${encodeURIComponent(username)}/update`;\n    // mixin custom params and the user information, then drop the user info\n    requestOptions.params = Object.assign(Object.assign({}, requestOptions.user), requestOptions.params);\n    delete requestOptions.user;\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(updateUrl, requestOptions);\n}\n//# sourceMappingURL=update.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/users/update.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SearchQueryBuilder\": () => (/* binding */ SearchQueryBuilder)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * `SearchQueryBuilder` can be used to construct the `q` param for {@linkcode searchItems} or {@linkcode searchGroups}.\n *\n * By chaining methods, it helps build complex search queries.\n *\n * ```js\n * const startDate = new Date(\"2020-01-01\");\n * const endDate = new Date(\"2020-09-01\");\n * const query = new SearchQueryBuilder()\n *  .match(\"Patrick\")\n *  .in(\"owner\")\n *  .and()\n *  .from(startDate)\n *  .to(endDate)\n *  .in(\"created\")\n *  .and()\n *  .startGroup()\n *    .match(\"Web Mapping Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Mobile Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Application\")\n *    .in(\"type\")\n *  .endGroup()\n *  .and()\n *  .match(\"Demo App\");\n *\n * searchItems(query).then((res) => {\n *   console.log(res.results);\n * });\n * ```\n *\n * Will search for items matching\n * ```\n * \"owner: Patrick AND created:[1577836800000 TO 1598918400000] AND (type:\"Web Mapping Application\" OR type:\"Mobile Application\" OR type:Application) AND Demo App\"\n * ```\n */\nclass SearchQueryBuilder {\n    /**\n     * @param q An existing query string to start building from.\n     */\n    constructor(q = \"\") {\n        this.termStack = [];\n        this.rangeStack = [];\n        this.openGroups = 0;\n        this.q = q;\n    }\n    /**\n     * Defines strings to search for.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     * ```\n     *\n     * @param terms strings to search for.\n     */\n    match(...terms) {\n        this.termStack = this.termStack.concat(terms);\n        return this;\n    }\n    /**\n     * Defines fields to search in. You can pass `\"*\"` or call this method without arguments to search a default set of fields\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     *   .in(\"title\")\n     * ```\n     *\n     * @param field The field to search for the previous match in.\n     */\n    in(field) {\n        const fn = `\\`in(${field ? `\"${field}\"` : \"\"})\\``;\n        if (!this.hasRange && !this.hasTerms) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(\n            // apparently-p-rettier-ignore causes some\n            `${fn} was called with no call to \\`match(...)\\` or \\`from(...)\\`/\\`to(...)\\`. Your query was not modified.`);\n            return this;\n        }\n        if (field && field !== \"*\") {\n            this.q += `${field}:`;\n        }\n        return this.commit();\n    }\n    /**\n     * Starts a new search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    startGroup() {\n        this.commit();\n        if (this.openGroups > 0) {\n            this.q += \" \";\n        }\n        this.openGroups++;\n        this.q += \"(\";\n        return this;\n    }\n    /**\n     * Ends a search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    endGroup() {\n        if (this.openGroups <= 0) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(`\\`endGroup(...)\\` was called without calling \\`startGroup(...)\\` first. Your query was not modified.`);\n            return this;\n        }\n        this.commit();\n        this.openGroups--;\n        this.q += \")\";\n        return this;\n    }\n    /**\n     * Joins two sets of queries with an `AND` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .and()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    and() {\n        return this.addModifier(\"and\");\n    }\n    /**\n     * Joins two sets of queries with an `OR` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    or() {\n        return this.addModifier(\"or\");\n    }\n    /**\n     * Joins two sets of queries with a `NOT` clause. Another option for filtering results is the [prohibit operator '-'](https://developers.arcgis.com/rest/users-groups-and-items/search-reference.htm#ESRI_SECTION1_5C6C35DB9E4A4F4492C5B937BDA2BF67).\n     *\n     * ```js\n     * // omit results with \"Rivers\" in their title\n     * const query = new SearchQueryBuilder()\n     *   .not()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *\n     * // equivalent\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Rivers\")\n     *   .in(\"-title\")\n     * ```\n     */\n    not() {\n        return this.addModifier(\"not\");\n    }\n    /**\n     * Begins a new range query.\n     *\n     * ```js\n     *\n     * const NEWYEARS = new Date(\"2020-01-01\")\n     * const TODAY = new Date()\n     *\n     * const query = new SearchQueryBuilder()\n     *   .from(NEWYEARS)\n     *   .to(TODAY)\n     *   .in(\"created\")\n     * ```\n     */\n    from(term) {\n        if (this.hasTerms) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `\\`from(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\").  Your query was not modified.`);\n            return this;\n        }\n        this.rangeStack[0] = term;\n        return this;\n    }\n    /**\n     * Ends a range query.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .from(yesterdaysDate)\n     *   .to(todaysDate)\n     *   .in(\"created\")\n     * ```\n     */\n    to(term) {\n        if (this.hasTerms) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `\\`to(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\"). Your query was not modified.`);\n            return this;\n        }\n        this.rangeStack[1] = term;\n        return this;\n    }\n    /**\n     * Boosts the previous term to increase its rank in the results.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *   .boost(3)\n     * ```\n     */\n    boost(num) {\n        this.commit();\n        this.q += `^${num}`;\n        return this;\n    }\n    /**\n     * Returns the current query string. Called internally when the request is made.\n     */\n    toParam() {\n        this.commit();\n        this.cleanup();\n        return this.q;\n    }\n    /**\n     * Returns a new instance of `SearchQueryBuilder` based on the current instance.\n     */\n    clone() {\n        this.commit();\n        this.cleanup();\n        return new SearchQueryBuilder(this.q + \"\");\n    }\n    addModifier(modifier) {\n        if (this.currentModifer) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `You have called \\`${this.currentModifer}()\\` after \\`${modifier}()\\`. Your current query was not modified.`);\n            return this;\n        }\n        this.commit();\n        if (this.q === \"\" && modifier !== \"not\") {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(`You have called \\`${modifier}()\\` without calling another method to modify your query first. Try calling \\`match()\\` first.`);\n            return this;\n        }\n        this.currentModifer = modifier;\n        this.q += this.q === \"\" ? \"\" : \" \";\n        this.q += `${modifier.toUpperCase()} `;\n        return this;\n    }\n    hasWhiteSpace(s) {\n        return /\\s/g.test(s);\n    }\n    formatTerm(term) {\n        if (term instanceof Date) {\n            return term.getTime();\n        }\n        if (typeof term === \"string\" && this.hasWhiteSpace(term)) {\n            return `\"${term}\"`;\n        }\n        return term;\n    }\n    commit() {\n        this.currentModifer = undefined;\n        if (this.hasRange) {\n            this.q += `[${this.formatTerm(this.rangeStack[0])} TO ${this.formatTerm(this.rangeStack[1])}]`;\n            this.rangeStack = [undefined, undefined];\n        }\n        if (this.hasTerms) {\n            this.q += this.termStack\n                .map((term) => {\n                return this.formatTerm(term);\n            })\n                .join(\" \");\n            this.termStack = [];\n        }\n        return this;\n    }\n    get hasTerms() {\n        return this.termStack.length > 0;\n    }\n    get hasRange() {\n        return this.rangeStack.length && this.rangeStack[0] && this.rangeStack[1];\n    }\n    cleanup() {\n        // end a group if we have started one\n        if (this.openGroups > 0) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `Automatically closing ${this.openGroups} group(s). You can use \\`endGroup(...)\\` to remove this warning.`);\n            while (this.openGroups > 0) {\n                this.q += \")\";\n                this.openGroups--;\n            }\n        }\n        const oldQ = this.q;\n        this.q = oldQ.replace(/( AND ?| NOT ?| OR ?)*$/, \"\");\n        if (oldQ !== this.q) {\n            (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.warn)(`\\`startGroup(...)\\` was called without calling \\`endGroup(...)\\` first. Your query was not modified.`);\n        }\n        // clear empty groups\n        this.q = this.q.replace(/(\\(\\))*/, \"\");\n    }\n}\n//# sourceMappingURL=SearchQueryBuilder.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"chunk\": () => (/* binding */ chunk)\n/* harmony export */ });\n/* Copyright (c) 2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nfunction chunk(array, size) {\n    if (array.length === 0) {\n        return [];\n    }\n    const chunks = [];\n    for (let i = 0; i < array.length; i += size) {\n        chunks.push(array.slice(i, i + size));\n    }\n    return chunks;\n}\n//# sourceMappingURL=array.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/array.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"genericSearch\": () => (/* binding */ genericSearch)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _SearchQueryBuilder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SearchQueryBuilder.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js\");\n/* harmony import */ var _util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\nfunction genericSearch(search, searchType) {\n    let options;\n    if (typeof search === \"string\" || search instanceof _SearchQueryBuilder_js__WEBPACK_IMPORTED_MODULE_1__.SearchQueryBuilder) {\n        options = {\n            httpMethod: \"GET\",\n            params: {\n                q: search\n            }\n        };\n    }\n    else {\n        // searchUserAccess has one (known) valid value: \"groupMember\"\n        options = (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.appendCustomParams)(search, [\n            \"q\",\n            \"num\",\n            \"start\",\n            \"sortField\",\n            \"sortOrder\",\n            \"searchUserAccess\",\n            \"searchUserName\",\n            \"filter\",\n            \"countFields\",\n            \"countSize\",\n            \"categories\",\n            \"categoryFilters\"\n        ], {\n            httpMethod: \"GET\"\n        });\n    }\n    let path;\n    switch (searchType) {\n        case \"item\":\n            path = \"/search\";\n            break;\n        case \"group\":\n            path = \"/community/groups\";\n            break;\n        case \"groupContent\":\n            // Need to have groupId property to do group contents search,\n            // cso filter out all but ISearchGroupContentOptions\n            if (typeof search !== \"string\" &&\n                !(search instanceof _SearchQueryBuilder_js__WEBPACK_IMPORTED_MODULE_1__.SearchQueryBuilder) &&\n                search.groupId) {\n                path = `/content/groups/${search.groupId}/search`;\n            }\n            else {\n                return Promise.reject(new Error(\"you must pass a `groupId` option to `searchGroupContent`\"));\n            }\n            break;\n        default:\n            // \"users\"\n            path = \"/portals/self/users/search\";\n            break;\n    }\n    const url = (0,_util_get_portal_url_js__WEBPACK_IMPORTED_MODULE_2__.getPortalUrl)(options) + path;\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((r) => {\n        if (r.nextStart && r.nextStart !== -1) {\n            r.nextPage = function () {\n                let newOptions;\n                if (typeof search === \"string\" ||\n                    search instanceof _SearchQueryBuilder_js__WEBPACK_IMPORTED_MODULE_1__.SearchQueryBuilder) {\n                    newOptions = {\n                        q: search,\n                        start: r.nextStart\n                    };\n                }\n                else {\n                    newOptions = search;\n                    newOptions.start = r.nextStart;\n                }\n                return genericSearch(newOptions, searchType);\n            };\n        }\n        return r;\n    });\n}\n//# sourceMappingURL=generic-search.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-settings.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-settings.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getPortalSettings\": () => (/* binding */ getPortalSettings)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Fetch the settings for the current portal by id. If no id is passed, portals/self/settings will be called\n *\n * ```js\n * import { getPortalSettings } from \"@esri/arcgis-rest-portal\";\n *\n * getPortalSettings()\n * getPortalSettings(\"fe8\")\n * getPortalSettings(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n *\n * @param id\n * @param requestOptions\n */\nfunction getPortalSettings(id, requestOptions) {\n    // construct the search url\n    const idOrSelf = id ? id : \"self\";\n    const url = `${(0,_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/portals/${idOrSelf}/settings`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=get-portal-settings.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-settings.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getPortalUrl\": () => (/* binding */ getPortalUrl)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,\n * `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nfunction getPortalUrl(requestOptions = {}) {\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication &&\n        typeof requestOptions.authentication !== \"string\") {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n//# sourceMappingURL=get-portal-url.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getPortal\": () => (/* binding */ getPortal),\n/* harmony export */   \"getSelf\": () => (/* binding */ getSelf)\n/* harmony export */ });\n/* harmony import */ var _esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @esri/arcgis-rest-request */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* harmony import */ var _get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-portal-url.js */ \"./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js\");\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Get the portal\n * @param requestOptions\n */\nfunction getSelf(requestOptions) {\n    // just delegate to getPortal w/o an id\n    return getPortal(null, requestOptions);\n}\n/**\n * Fetch information about the specified portal by id. If no id is passed, portals/self will be called.\n *\n * If you intend to request a portal by id and it is different from the portal specified by options.authentication, you must also pass options.portal.\n *\n *  ```js\n * import { getPortal } from \"@esri/arcgis-rest-portal\";\n * //\n * getPortal()\n * getPortal(\"fe8\")\n * getPortal(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n *\n * @param id\n * @param requestOptions\n */\nfunction getPortal(id, requestOptions) {\n    // construct the search url\n    const idOrSelf = id ? id : \"self\";\n    const url = `${(0,_get_portal_url_js__WEBPACK_IMPORTED_MODULE_1__.getPortalUrl)(requestOptions)}/portals/${idOrSelf}`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    // send the request\n    return (0,_esri_arcgis_rest_request__WEBPACK_IMPORTED_MODULE_0__.request)(url, options);\n}\n//# sourceMappingURL=get-portal.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/scrub-control-chars.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/scrub-control-chars.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scrubControlChars\": () => (/* binding */ scrubControlChars)\n/* harmony export */ });\n// eslint-disable-next-line no-control-regex\nconst CONTROL_CHAR_MATCHER = /[\\x00-\\x1F\\x7F-\\x9F\\xA0]/g;\n/**\n * Returns a new string with all control characters removed.\n *\n * Doesn't remove characters from input string.\n *\n * @param str - the string to scrub\n */\nfunction scrubControlChars(str) {\n    return str.replace(CONTROL_CHAR_MATCHER, \"\");\n}\n//# sourceMappingURL=scrub-control-chars.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/scrub-control-chars.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-portal/dist/esm/util/search.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-portal/dist/esm/util/search.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=search.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-portal/dist/esm/util/search.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/ApiKeyManager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/ApiKeyManager.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ApiKey\": () => (/* binding */ ApiKey),\n/* harmony export */   \"ApiKeyManager\": () => (/* binding */ ApiKeyManager)\n/* harmony export */ });\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Used to authenticate methods in ArcGIS REST JS with an API keys. The instance of `ApiKeyManager` can be passed to  {@linkcode IRequestOptions.authentication} to authenticate requests.\n *\n * ```js\n * import { ApiKeyManager } from '@esri/arcgis-rest-auth';\n \n * const apiKey = new ApiKeyManager.fromKey(\"...\");\n * ```\n *\n * In most cases however the API key can be passed directly to the {@linkcode IRequestOptions.authentication}.\n */\nclass ApiKeyManager {\n    constructor(options) {\n        /**\n         * The current portal the user is authenticated with.\n         */\n        this.portal = \"https://www.arcgis.com/sharing/rest\";\n        this.key = options.key;\n    }\n    /**\n     * The preferred method for creating an instance of `ApiKeyManager`.\n     */\n    static fromKey(apiKey) {\n        return new ApiKeyManager({ key: apiKey });\n    }\n    /**\n     * Gets a token (the API Key).\n     */\n    getToken(url) {\n        return Promise.resolve(this.key);\n    }\n}\n/**\n * @deprecated - Use {@linkcode ApiKeyManager}.\n * @internal\n */ /* istanbul ignore next */\nfunction ApiKey(options) {\n    console.log(\"DEPRECATED:, 'ApiKey' is deprecated. Use 'ApiKeyManager' instead.\");\n    return new ApiKeyManager(options);\n}\n//# sourceMappingURL=ApiKeyManager.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/ApiKeyManager.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/ApplicationCredentialsManager.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/ApplicationCredentialsManager.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ApplicationCredentialsManager\": () => (/* binding */ ApplicationCredentialsManager),\n/* harmony export */   \"ApplicationSession\": () => (/* binding */ ApplicationSession)\n/* harmony export */ });\n/* harmony import */ var _fetch_token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetch-token.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js\");\n/* harmony import */ var _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ArcGISTokenRequestError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n/**\n * Used to authenticate methods in ArcGIS REST JS with oAuth 2.0 application credentials. The instance of `ApplicationCredentialsManager` can be passed to {@linkcode IRequestOptions.authentication} to authenticate requests.\n *\n * ```js\n * import { ApplicationSession } from '@esri/arcgis-rest-auth';\n *\n * const session = ApplicationCredentialsManager.fromCredentials({\n *   clientId: \"abc123\",\n *   clientSecret: \"••••••\"\n * })\n * ```\n */\nclass ApplicationCredentialsManager {\n    constructor(options) {\n        this.clientId = options.clientId;\n        this.clientSecret = options.clientSecret;\n        this.token = options.token;\n        this.expires = options.expires;\n        this.portal = options.portal || \"https://www.arcgis.com/sharing/rest\";\n        this.duration = options.duration || 7200;\n    }\n    /**\n     * Preferred method for creating an `ApplicationCredentialsManager`\n     */\n    static fromCredentials(options) {\n        return new ApplicationCredentialsManager(options);\n    }\n    // URL is not actually read or passed through.\n    getToken(url, requestOptions) {\n        if (this.token && this.expires && this.expires.getTime() > Date.now()) {\n            return Promise.resolve(this.token);\n        }\n        if (this._pendingTokenRequest) {\n            return this._pendingTokenRequest;\n        }\n        this._pendingTokenRequest = this.refreshToken(requestOptions);\n        return this._pendingTokenRequest;\n    }\n    refreshToken(requestOptions) {\n        const options = Object.assign({ params: {\n                client_id: this.clientId,\n                client_secret: this.clientSecret,\n                grant_type: \"client_credentials\",\n                expiration: this.duration\n            } }, requestOptions);\n        return (0,_fetch_token_js__WEBPACK_IMPORTED_MODULE_0__.fetchToken)(`${this.portal}/oauth2/token/`, options)\n            .then((response) => {\n            this._pendingTokenRequest = null;\n            this.token = response.token;\n            this.expires = response.expires;\n            return response.token;\n        })\n            .catch((e) => {\n            throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_1__.ArcGISTokenRequestError(e.message, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_1__.ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED, e.response, e.url, e.options);\n        });\n    }\n    refreshCredentials() {\n        return this.refreshToken().then(() => this);\n    }\n}\n/**\n * @deprecated - Use {@linkcode ApplicationCredentialsManager}.\n * @internal\n */ /* istanbul ignore next */\nfunction ApplicationSession(options) {\n    console.log(\"DEPRECATED:, 'ApplicationSession' is deprecated. Use 'ApplicationCredentialsManager' instead.\");\n    return new ApplicationCredentialsManager(options);\n}\n//# sourceMappingURL=ApplicationCredentialsManager.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/ApplicationCredentialsManager.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/ArcGISIdentityManager.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/ArcGISIdentityManager.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArcGISIdentityManager\": () => (/* binding */ ArcGISIdentityManager),\n/* harmony export */   \"UserSession\": () => (/* binding */ UserSession)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/request.js\");\n/* harmony import */ var _utils_decode_query_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/decode-query-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js\");\n/* harmony import */ var _utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/encode-query-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js\");\n/* harmony import */ var _fetch_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fetch-token.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js\");\n/* harmony import */ var _federation_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./federation-utils.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/federation-utils.js\");\n/* harmony import */ var _validate_app_access_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate-app-access.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/validate-app-access.js\");\n/* harmony import */ var _utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/clean-url.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js\");\n/* harmony import */ var _revoke_token_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./revoke-token.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/revoke-token.js\");\n/* harmony import */ var _utils_generate_code_challenge_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/generate-code-challenge.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-code-challenge.js\");\n/* harmony import */ var _utils_generate_random_string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/generate-random-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-random-string.js\");\n/* harmony import */ var _utils_ArcGISAccessDeniedError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/ArcGISAccessDeniedError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISAccessDeniedError.js\");\n/* harmony import */ var _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/ArcGISTokenRequestError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./index.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Used to authenticate both ArcGIS Online and ArcGIS Enterprise users. `ArcGISIdentityManager` includes helper methods for [OAuth 2.0](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/oauth-2.0/) in both browser and server applications.\n *\n * **It is not recommended to construct `ArcGISIdentityManager` directly**. Instead there are several static methods used for specific workflows. The 2 primary workflows relate to oAuth 2.0:\n *\n * * {@linkcode ArcGISIdentityManager.beginOAuth2} and {@linkcode ArcGISIdentityManager.completeOAuth2} for oAuth 2.0 in browser-only environment.\n * * {@linkcode ArcGISIdentityManager.authorize} and {@linkcode ArcGISIdentityManager.exchangeAuthorizationCode} for oAuth 2.0 for server-enabled application.\n *\n * Other more specialized helpers for less common workflows also exist:\n *\n * * {@linkcode ArcGISIdentityManager.fromToken} for when you have an existing token from another source and would like create an `ArcGISIdentityManager` instance.\n * * {@linkcode ArcGISIdentityManager.fromCredential} for creating  an `ArcGISIdentityManager` instance from a `Credentials` object in the ArcGIS JS API `IdentityManager`\n * * {@linkcode ArcGISIdentityManager.signIn} for authenticating directly with a users username and password for environments with a user interface for oAuth 2.0.\n *\n * Once a manager is created there are additional utilities:\n *\n * * {@linkcode ArcGISIdentityManager.serialize} can be used to create a JSON object representing an instance of `ArcGISIdentityManager`\n * * {@linkcode ArcGISIdentityManager.deserialize} will create a new `ArcGISIdentityManager` from a JSON object created with {@linkcode ArcGISIdentityManager.serialize}\n * * {@linkcode ArcGISIdentityManager.destroy} or {@linkcode ArcGISIdentityManager.signOut} will invalidate any tokens in use by the  `ArcGISIdentityManager`.\n */\nclass ArcGISIdentityManager {\n    constructor(options) {\n        this.clientId = options.clientId;\n        this._refreshToken = options.refreshToken;\n        this._refreshTokenExpires = options.refreshTokenExpires;\n        this._username = options.username;\n        this.password = options.password;\n        this._token = options.token;\n        this._tokenExpires = options.tokenExpires;\n        this.portal = options.portal\n            ? (0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__.cleanUrl)(options.portal)\n            : \"https://www.arcgis.com/sharing/rest\";\n        this.ssl = options.ssl;\n        this.provider = options.provider || \"arcgis\";\n        this.tokenDuration = options.tokenDuration || 20160;\n        this.redirectUri = options.redirectUri;\n        this.server = options.server;\n        this.federatedServers = {};\n        this.trustedDomains = [];\n        // if a non-federated server was passed explicitly, it should be trusted.\n        if (options.server) {\n            // if the url includes more than '/arcgis/', trim the rest\n            const root = this.getServerRootUrl(options.server);\n            this.federatedServers[root] = {\n                token: options.token,\n                expires: options.tokenExpires\n            };\n        }\n        this._pendingTokenRequests = {};\n    }\n    /**\n     * The current ArcGIS Online or ArcGIS Enterprise `token`.\n     */\n    get token() {\n        return this._token;\n    }\n    /**\n     * The expiration time of the current `token`.\n     */\n    get tokenExpires() {\n        return this._tokenExpires;\n    }\n    /**\n     * The current token to ArcGIS Online or ArcGIS Enterprise.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * The expiration time of the current `refreshToken`.\n     */\n    get refreshTokenExpires() {\n        return this._refreshTokenExpires;\n    }\n    /**\n     * The currently authenticated user.\n     */\n    get username() {\n        if (this._username) {\n            return this._username;\n        }\n        if (this._user && this._user.username) {\n            return this._user.username;\n        }\n    }\n    /**\n     * Returns `true` if these credentials can be refreshed and `false` if it cannot.\n     */\n    get canRefresh() {\n        if (this.username && this.password) {\n            return true;\n        }\n        if (this.clientId && this.refreshToken) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Begins a new browser-based OAuth 2.0 sign in. If `options.popup` is `true` the authentication window will open in a new tab/window. Otherwise, the user will be redirected to the authorization page in their current tab/window and the function will return `undefined`.\n     *\n     * If `popup` is `true` (the default) this method will return a `Promise` that resolves to an `ArcGISIdentityManager` instance and you must call {@linkcode ArcGISIdentityManager.completeOAuth2} on the page defined in the `redirectUri`. Otherwise it will return undefined and the {@linkcode ArcGISIdentityManager.completeOAuth2} method will return a `Promise` that resolves to an `ArcGISIdentityManager` instance.\n     *\n     * A {@linkcode ArcGISAccessDeniedError} error will be thrown if the user denies the request on the authorization screen.\n     *\n     * @browserOnly\n     */\n    static beginOAuth2(options, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        const { portal, provider, clientId, expiration, redirectUri, popup, popupWindowFeatures, locale, params, style, pkce, state } = Object.assign({\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            provider: \"arcgis\",\n            expiration: 20160,\n            popup: true,\n            popupWindowFeatures: \"height=400,width=600,menubar=no,location=yes,resizable=yes,scrollbars=yes,status=yes\",\n            locale: \"\",\n            style: \"\",\n            pkce: true\n        }, options);\n        /**\n         * Generate a  random string for the `state` param and store it in local storage. This is used\n         * to validate that all parts of the oAuth process were performed on the same client.\n         */\n        const stateId = state || (0,_utils_generate_random_string_js__WEBPACK_IMPORTED_MODULE_9__.generateRandomString)(win);\n        const stateStorageKey = `ARCGIS_REST_JS_AUTH_STATE_${clientId}`;\n        win.localStorage.setItem(stateStorageKey, stateId);\n        // Start setting up the URL to the authorization screen.\n        let authorizeUrl = `${(0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__.cleanUrl)(portal)}/oauth2/authorize`;\n        const authorizeUrlParams = {\n            client_id: clientId,\n            response_type: pkce ? \"code\" : \"token\",\n            expiration: expiration,\n            redirect_uri: redirectUri,\n            state: JSON.stringify({\n                id: stateId,\n                originalUrl: win.location.href // this is used to reset the URL back the original URL upon return\n            }),\n            locale: locale,\n            style: style\n        };\n        // If we are authorizing through a specific social provider update the params and base URL.\n        if (provider !== \"arcgis\") {\n            authorizeUrl = `${(0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__.cleanUrl)(portal)}/oauth2/social/authorize`;\n            authorizeUrlParams.socialLoginProviderName = provider;\n            authorizeUrlParams.autoAccountCreateForSocial = true;\n        }\n        /**\n         * set a value that will be set to a promise which will later resolve when we are ready\n         * to send users to the authorization page.\n         */\n        let setupAuth;\n        if (pkce) {\n            /**\n             * If we are authenticating with PKCE we need to generate the code challenge which is\n             * async so we generate the code challenge and assign the resulting Promise to `setupAuth`\n             */\n            const codeVerifier = (0,_utils_generate_random_string_js__WEBPACK_IMPORTED_MODULE_9__.generateRandomString)(win);\n            const codeVerifierStorageKey = `ARCGIS_REST_JS_CODE_VERIFIER_${clientId}`;\n            win.localStorage.setItem(codeVerifierStorageKey, codeVerifier);\n            setupAuth = (0,_utils_generate_code_challenge_js__WEBPACK_IMPORTED_MODULE_8__.generateCodeChallenge)(codeVerifier, win).then(function (codeChallenge) {\n                authorizeUrlParams.code_challenge_method = codeChallenge\n                    ? \"S256\"\n                    : \"plain\";\n                authorizeUrlParams.code_challenge = codeChallenge\n                    ? codeChallenge\n                    : codeVerifier;\n            });\n        }\n        else {\n            /**\n             * If we aren't authenticating with PKCE we can just assign a resolved promise to `setupAuth`\n             */\n            setupAuth = Promise.resolve();\n        }\n        /**\n         * Once we are done setting up with (for PKCE) we can start the auth process.\n         */\n        return setupAuth.then(() => {\n            // combine the authorize URL and params\n            authorizeUrl = `${authorizeUrl}?${(0,_utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_2__.encodeQueryString)(authorizeUrlParams)}`;\n            // append additional params passed by the user\n            if (params) {\n                authorizeUrl = `${authorizeUrl}&${(0,_utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_2__.encodeQueryString)(params)}`;\n            }\n            if (popup) {\n                // If we are authenticating a popup we need to return a Promise that will resolve to an ArcGISIdentityManager later.\n                return new Promise((resolve, reject) => {\n                    // Add an event listener to listen for when a user calls `ArcGISIdentityManager.completeOAuth2()` in the popup.\n                    win.addEventListener(`arcgis-rest-js-popup-auth-${clientId}`, (e) => {\n                        if (e.detail.error === \"access_denied\") {\n                            const error = new _utils_ArcGISAccessDeniedError_js__WEBPACK_IMPORTED_MODULE_10__.ArcGISAccessDeniedError();\n                            reject(error);\n                            return error;\n                        }\n                        if (e.detail.error) {\n                            const error = new _request_js__WEBPACK_IMPORTED_MODULE_0__.ArcGISAuthError(e.detail.errorMessage, e.detail.error);\n                            reject(error);\n                            return error;\n                        }\n                        resolve(new ArcGISIdentityManager({\n                            clientId,\n                            portal,\n                            ssl: e.detail.ssl,\n                            token: e.detail.token,\n                            tokenExpires: e.detail.expires,\n                            username: e.detail.username,\n                            refreshToken: e.detail.refreshToken,\n                            refreshTokenExpires: e.detail.refreshTokenExpires\n                        }));\n                    }, {\n                        once: true\n                    });\n                    // open the popup\n                    win.open(authorizeUrl, \"oauth-window\", popupWindowFeatures);\n                    win.dispatchEvent(new CustomEvent(\"arcgis-rest-js-popup-auth-start\"));\n                });\n            }\n            else {\n                // If we aren't authenticating with a popup just send the user to the authorization page.\n                win.location.href = authorizeUrl;\n                return undefined;\n            }\n        });\n    }\n    /**\n     * Completes a browser-based OAuth 2.0 sign in. If `options.popup` is `true` the user\n     * will be returned to the previous window and the popup will close. Otherwise a new `ArcGISIdentityManager` will be returned. You must pass the same values for `clientId`, `popup`, `portal`, and `pkce` as you used in `beginOAuth2()`.\n     *\n     * A {@linkcode ArcGISAccessDeniedError} error will be thrown if the user denies the request on the authorization screen.\n     * @browserOnly\n     */\n    static completeOAuth2(options, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        // pull out necessary options\n        const { portal, clientId, popup, pkce } = Object.assign({\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            popup: true,\n            pkce: true\n        }, options);\n        // pull the saved state id out of local storage\n        const stateStorageKey = `ARCGIS_REST_JS_AUTH_STATE_${clientId}`;\n        const stateId = win.localStorage.getItem(stateStorageKey);\n        // get the params provided by the server and compare the server state with the client saved state\n        const params = (0,_utils_decode_query_string_js__WEBPACK_IMPORTED_MODULE_1__.decodeQueryString)(pkce\n            ? win.location.search.replace(/^\\?/, \"\")\n            : win.location.hash.replace(/^#/, \"\"));\n        const state = params && params.state ? JSON.parse(params.state) : undefined;\n        function reportError(errorMessage, error, originalUrl) {\n            win.localStorage.removeItem(stateStorageKey);\n            if (popup && win.opener) {\n                win.opener.dispatchEvent(new CustomEvent(`arcgis-rest-js-popup-auth-${clientId}`, {\n                    detail: {\n                        error,\n                        errorMessage\n                    }\n                }));\n                win.close();\n                return;\n            }\n            if (originalUrl) {\n                win.history.replaceState(win.history.state, \"\", originalUrl);\n            }\n            if (error === \"access_denied\") {\n                return Promise.reject(new _utils_ArcGISAccessDeniedError_js__WEBPACK_IMPORTED_MODULE_10__.ArcGISAccessDeniedError());\n            }\n            return Promise.reject(new _request_js__WEBPACK_IMPORTED_MODULE_0__.ArcGISAuthError(errorMessage, error));\n        }\n        // create a function to create the final ArcGISIdentityManager from the token info.\n        function createManager(oauthInfo, originalUrl) {\n            win.localStorage.removeItem(stateStorageKey);\n            if (popup && win.opener) {\n                win.opener.dispatchEvent(new CustomEvent(`arcgis-rest-js-popup-auth-${clientId}`, {\n                    detail: Object.assign({}, oauthInfo)\n                }));\n                win.close();\n                return;\n            }\n            win.history.replaceState(win.history.state, \"\", originalUrl);\n            return new ArcGISIdentityManager({\n                clientId,\n                portal,\n                ssl: oauthInfo.ssl,\n                token: oauthInfo.token,\n                tokenExpires: oauthInfo.expires,\n                username: oauthInfo.username,\n                refreshToken: oauthInfo.refreshToken,\n                refreshTokenExpires: oauthInfo.refreshTokenExpires\n            });\n        }\n        if (!stateId || !state) {\n            return reportError(\"No authentication state was found, call `ArcGISIdentityManager.beginOAuth2(...)` to start the authentication process.\", \"no-auth-state\");\n        }\n        if (state.id !== stateId) {\n            return reportError(\"Saved client state did not match server sent state.\", \"mismatched-auth-state\");\n        }\n        if (params.error) {\n            const error = params.error;\n            const errorMessage = params.error_description || \"Unknown error\";\n            return reportError(errorMessage, error, state.originalUrl);\n        }\n        /**\n         * If we are using PKCE the authorization code will be in the query params.\n         * For implicit grants the token will be in the hash.\n         */\n        if (pkce && params.code) {\n            const tokenEndpoint = (0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__.cleanUrl)(`${portal}/oauth2/token/`);\n            const codeVerifierStorageKey = `ARCGIS_REST_JS_CODE_VERIFIER_${clientId}`;\n            const codeVerifier = win.localStorage.getItem(codeVerifierStorageKey);\n            win.localStorage.removeItem(codeVerifierStorageKey);\n            // exchange our auth code for a token + refresh token\n            return (0,_fetch_token_js__WEBPACK_IMPORTED_MODULE_3__.fetchToken)(tokenEndpoint, {\n                httpMethod: \"POST\",\n                params: {\n                    client_id: clientId,\n                    code_verifier: codeVerifier,\n                    grant_type: \"authorization_code\",\n                    redirect_uri: location.href.replace(location.search, \"\"),\n                    code: params.code\n                }\n            })\n                .then((tokenResponse) => {\n                return createManager(Object.assign(Object.assign({}, tokenResponse), state), state.originalUrl);\n            })\n                .catch((e) => {\n                return reportError(e.message, e.error, state.originalUrl);\n            });\n        }\n        if (!pkce && params.access_token) {\n            return Promise.resolve(createManager(Object.assign({ token: params.access_token, expires: new Date(Date.now() + parseInt(params.expires_in, 10) * 1000), ssl: params.ssl === \"true\", username: params.username }, state), state.originalUrl));\n        }\n        return reportError(\"Unknown error\", \"oauth-error\", state.originalUrl);\n    }\n    /**\n     * Request credentials information from the parent application\n     *\n     * When an application is embedded into another application via an IFrame, the embedded app can\n     * use `window.postMessage` to request credentials from the host application. This function wraps\n     * that behavior.\n     *\n     * The ArcGIS API for Javascript has this built into the Identity Manager as of the 4.19 release.\n     *\n     * Note: The parent application will not respond if the embedded app's origin is not:\n     * - the same origin as the parent or *.arcgis.com (JSAPI)\n     * - in the list of valid child origins (REST-JS)\n     *\n     *\n     * @param parentOrigin origin of the parent frame. Passed into the embedded application as `parentOrigin` query param\n     * @browserOnly\n     */\n    static fromParent(parentOrigin, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        // Declare handler outside of promise scope so we can detach it\n        let handler;\n        // return a promise that will resolve when the handler receives\n        // session information from the correct origin\n        return new Promise((resolve, reject) => {\n            // create an event handler that just wraps the parentMessageHandler\n            handler = (event) => {\n                // ensure we only listen to events from the parent\n                if (event.source === win.parent && event.data) {\n                    try {\n                        return resolve(ArcGISIdentityManager.parentMessageHandler(event));\n                    }\n                    catch (err) {\n                        return reject(err);\n                    }\n                }\n            };\n            // add listener\n            win.addEventListener(\"message\", handler, false);\n            win.parent.postMessage({ type: \"arcgis:auth:requestCredential\" }, parentOrigin);\n        }).then((manager) => {\n            win.removeEventListener(\"message\", handler, false);\n            return manager;\n        });\n    }\n    /**\n     * Begins a new server-based OAuth 2.0 sign in. This will redirect the user to\n     * the ArcGIS Online or ArcGIS Enterprise authorization page.\n     *\n     * @nodeOnly\n     */\n    static authorize(options, response) {\n        const { portal, clientId, expiration, redirectUri, state } = Object.assign({ portal: \"https://arcgis.com/sharing/rest\", expiration: 20160 }, options);\n        const queryParams = {\n            client_id: clientId,\n            expiration,\n            response_type: \"code\",\n            redirect_uri: redirectUri\n        };\n        if (state) {\n            queryParams.state = state;\n        }\n        const url = `${portal}/oauth2/authorize?${(0,_utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_2__.encodeQueryString)(queryParams)}`;\n        response.writeHead(301, {\n            Location: url\n        });\n        response.end();\n    }\n    /**\n     * Completes the server-based OAuth 2.0 sign in process by exchanging the `authorizationCode`\n     * for a `access_token`.\n     *\n     * @nodeOnly\n     */\n    static exchangeAuthorizationCode(options, authorizationCode) {\n        const { portal, clientId, redirectUri } = Object.assign({\n            portal: \"https://www.arcgis.com/sharing/rest\"\n        }, options);\n        return (0,_fetch_token_js__WEBPACK_IMPORTED_MODULE_3__.fetchToken)(`${portal}/oauth2/token`, {\n            params: {\n                grant_type: \"authorization_code\",\n                client_id: clientId,\n                redirect_uri: redirectUri,\n                code: authorizationCode\n            }\n        })\n            .then((response) => {\n            return new ArcGISIdentityManager({\n                clientId,\n                portal,\n                ssl: response.ssl,\n                redirectUri,\n                refreshToken: response.refreshToken,\n                refreshTokenExpires: response.refreshTokenExpires,\n                token: response.token,\n                tokenExpires: response.expires,\n                username: response.username\n            });\n        })\n            .catch((e) => {\n            throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(e.message, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.REFRESH_TOKEN_EXCHANGE_FAILED, e.response, e.url, e.options);\n        });\n    }\n    static deserialize(str) {\n        const options = JSON.parse(str);\n        return new ArcGISIdentityManager({\n            clientId: options.clientId,\n            refreshToken: options.refreshToken,\n            refreshTokenExpires: options.refreshTokenExpires\n                ? new Date(options.refreshTokenExpires)\n                : undefined,\n            username: options.username,\n            password: options.password,\n            token: options.token,\n            tokenExpires: options.tokenExpires\n                ? new Date(options.tokenExpires)\n                : undefined,\n            portal: options.portal,\n            ssl: options.ssl,\n            tokenDuration: options.tokenDuration,\n            redirectUri: options.redirectUri,\n            server: options.server\n        });\n    }\n    /**\n     * Translates authentication from the format used in the [`IdentityManager` class in the ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-Credential.html).\n     *\n     * You will need to call both [`IdentityManger.findCredential`](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-IdentityManager.html#findCredential) and [`IdentityManger.findServerInfo`](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-IdentityManager.html#findServerInfo) to obtain both parameters for this method.\n     *\n     * This method can be used with {@linkcode ArcGISIdentityManager.toCredential} to interop with the ArcGIS API for JavaScript.\n     *\n     * ```js\n     * require([\"esri/id\"], (esriId) => {\n     *   const credential = esriId.findCredential(\"https://www.arcgis.com/sharing/rest\");\n     *   const serverInfo = esriId.findServerInfo(\"https://www.arcgis.com/sharing/rest\");\n     *\n     *   const manager = ArcGISIdentityManager.fromCredential(credential, serverInfo);\n     * });\n     * ```\n     *\n     * @returns ArcGISIdentityManager\n     */\n    static fromCredential(credential, serverInfo) {\n        // At ArcGIS Online 9.1, credentials no longer include the ssl and expires properties\n        // Here, we provide default values for them to cover this condition\n        const ssl = typeof credential.ssl !== \"undefined\" ? credential.ssl : true;\n        const expires = credential.expires || Date.now() + 7200000; /* 2 hours */\n        if (serverInfo.hasServer) {\n            return new ArcGISIdentityManager({\n                server: credential.server,\n                ssl,\n                token: credential.token,\n                username: credential.userId,\n                tokenExpires: new Date(expires)\n            });\n        }\n        return new ArcGISIdentityManager({\n            portal: (0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__.cleanUrl)(credential.server.includes(\"sharing/rest\")\n                ? credential.server\n                : credential.server + `/sharing/rest`),\n            ssl,\n            token: credential.token,\n            username: credential.userId,\n            tokenExpires: new Date(expires)\n        });\n    }\n    /**\n     * Handle the response from the parent\n     * @param event DOM Event\n     */\n    static parentMessageHandler(event) {\n        if (event.data.type === \"arcgis:auth:credential\") {\n            return new ArcGISIdentityManager(event.data.credential);\n        }\n        if (event.data.type === \"arcgis:auth:error\") {\n            const err = new Error(event.data.error.message);\n            err.name = event.data.error.name;\n            throw err;\n        }\n        else {\n            throw new Error(\"Unknown message type.\");\n        }\n    }\n    /**\n     * Revokes all active tokens for a provided {@linkcode ArcGISIdentityManager}. The can be considered the equivalent to signing the user out of your application.\n     */\n    static destroy(manager) {\n        return (0,_revoke_token_js__WEBPACK_IMPORTED_MODULE_7__.revokeToken)({\n            clientId: manager.clientId,\n            portal: manager.portal,\n            token: manager.refreshToken || manager.token\n        });\n    }\n    /**\n     * Create a  {@linkcode ArcGISIdentityManager} from an existing token. Useful for when you have a users token from a different authentication system and want to get a  {@linkcode ArcGISIdentityManager}.\n     */\n    static fromToken(options) {\n        const manager = new ArcGISIdentityManager(options);\n        return manager.getUser().then(() => {\n            return manager;\n        });\n    }\n    /**\n     * Initialize a {@linkcode ArcGISIdentityManager} with a users `username` and `password`. **This method is intended ONLY for applications without a user interface such as CLI tools.**.\n     *\n     * If possible you should use {@linkcode ArcGISIdentityManager.beginOAuth2} to authenticate users in a browser or {@linkcode ArcGISIdentityManager.authorize} for authenticating users with a web server.\n     */\n    static signIn(options) {\n        const manager = new ArcGISIdentityManager(options);\n        return manager.getUser().then(() => {\n            return manager;\n        });\n    }\n    /**\n     * Returns authentication in a format useable in the [`IdentityManager.registerToken()` method in the ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-IdentityManager.html#registerToken).\n     *\n     * This method can be used with {@linkcode ArcGISIdentityManager.fromCredential} to interop with the ArcGIS API for JavaScript.\n     *\n     * ```js\n     * require([\"esri/id\"], (esriId) => {\n     *   esriId.registerToken(manager.toCredential());\n     * })\n     \n     * ```\n     *\n     * @returns ICredential\n     */\n    toCredential() {\n        return {\n            expires: this.tokenExpires.getTime(),\n            server: this.server || this.portal,\n            ssl: this.ssl,\n            token: this.token,\n            userId: this.username\n        };\n    }\n    /**\n     * Returns information about the currently logged in [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm). Subsequent calls will *not* result in additional web traffic.\n     *\n     * ```js\n     * manager.getUser()\n     *   .then(response => {\n     *     console.log(response.role); // \"org_admin\"\n     *   })\n     * ```\n     *\n     * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n     * @returns A Promise that will resolve with the data from the response.\n     */\n    getUser(requestOptions) {\n        if (this._pendingUserRequest) {\n            return this._pendingUserRequest;\n        }\n        else if (this._user) {\n            return Promise.resolve(this._user);\n        }\n        else {\n            const url = `${this.portal}/community/self`;\n            const options = Object.assign(Object.assign({ httpMethod: \"GET\", authentication: this }, requestOptions), { rawResponse: false });\n            this._pendingUserRequest = (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((response) => {\n                this._user = response;\n                this._pendingUserRequest = null;\n                return response;\n            });\n            return this._pendingUserRequest;\n        }\n    }\n    /**\n     * Returns information about the currently logged in user's [portal](https://developers.arcgis.com/rest/users-groups-and-items/portal-self.htm). Subsequent calls will *not* result in additional web traffic.\n     *\n     * ```js\n     * manager.getPortal()\n     *   .then(response => {\n     *     console.log(portal.name); // \"City of ...\"\n     *   })\n     * ```\n     *\n     * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n     * @returns A Promise that will resolve with the data from the response.\n     */\n    getPortal(requestOptions) {\n        if (this._pendingPortalRequest) {\n            return this._pendingPortalRequest;\n        }\n        else if (this._portalInfo) {\n            return Promise.resolve(this._portalInfo);\n        }\n        else {\n            const url = `${this.portal}/portals/self`;\n            const options = Object.assign(Object.assign({ httpMethod: \"GET\", authentication: this }, requestOptions), { rawResponse: false });\n            this._pendingPortalRequest = (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((response) => {\n                this._portalInfo = response;\n                this._pendingPortalRequest = null;\n                return response;\n            });\n            return this._pendingPortalRequest;\n        }\n    }\n    /**\n     * Returns the username for the currently logged in [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm). Subsequent calls will *not* result in additional web traffic. This is also used internally when a username is required for some requests but is not present in the options.\n     *\n     * ```js\n     * manager.getUsername()\n     *   .then(response => {\n     *     console.log(response); // \"casey_jones\"\n     *   })\n     * ```\n     */\n    getUsername() {\n        if (this.username) {\n            return Promise.resolve(this.username);\n        }\n        else {\n            return this.getUser().then((user) => {\n                return user.username;\n            });\n        }\n    }\n    /**\n     * Gets an appropriate token for the given URL. If `portal` is ArcGIS Online and\n     * the request is to an ArcGIS Online domain `token` will be used. If the request\n     * is to the current `portal` the current `token` will also be used. However if\n     * the request is to an unknown server we will validate the server with a request\n     * to our current `portal`.\n     */\n    getToken(url, requestOptions) {\n        if ((0,_federation_utils_js__WEBPACK_IMPORTED_MODULE_4__.canUseOnlineToken)(this.portal, url)) {\n            return this.getFreshToken(requestOptions);\n        }\n        else if (new RegExp(this.portal, \"i\").test(url)) {\n            return this.getFreshToken(requestOptions);\n        }\n        else {\n            return this.getTokenForServer(url, requestOptions);\n        }\n    }\n    /**\n     * Get application access information for the current user\n     * see `validateAppAccess` function for details\n     *\n     * @param clientId application client id\n     */\n    validateAppAccess(clientId) {\n        return this.getToken(this.portal).then((token) => {\n            return (0,_validate_app_access_js__WEBPACK_IMPORTED_MODULE_5__.validateAppAccess)(token, clientId);\n        });\n    }\n    toJSON() {\n        return {\n            clientId: this.clientId,\n            refreshToken: this.refreshToken,\n            refreshTokenExpires: this.refreshTokenExpires || undefined,\n            username: this.username,\n            password: this.password,\n            token: this.token,\n            tokenExpires: this.tokenExpires || undefined,\n            portal: this.portal,\n            ssl: this.ssl,\n            tokenDuration: this.tokenDuration,\n            redirectUri: this.redirectUri,\n            server: this.server\n        };\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    /**\n     * For a \"Host\" app that embeds other platform apps via iframes, after authenticating the user\n     * and creating a ArcGISIdentityManager, the app can then enable \"post message\" style authentication by calling\n     * this method.\n     *\n     * Internally this adds an event listener on window for the `message` event\n     *\n     * @param validChildOrigins Array of origins that are allowed to request authentication from the host app\n     */\n    enablePostMessageAuth(validChildOrigins, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        this._hostHandler = this.createPostMessageHandler(validChildOrigins);\n        win.addEventListener(\"message\", this._hostHandler, false);\n    }\n    /**\n     * For a \"Host\" app that has embedded other platform apps via iframes, when the host needs\n     * to transition routes, it should call `ArcGISIdentityManager.disablePostMessageAuth()` to remove\n     * the event listener and prevent memory leaks\n     */\n    disablePostMessageAuth(win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        win.removeEventListener(\"message\", this._hostHandler, false);\n    }\n    /**\n     * Manually refreshes the current `token` and `tokenExpires`.\n     */\n    refreshCredentials(requestOptions) {\n        // make sure subsequent calls to getUser() don't returned cached metadata\n        this._user = null;\n        if (this.username && this.password) {\n            return this.refreshWithUsernameAndPassword(requestOptions);\n        }\n        if (this.clientId && this.refreshToken) {\n            return this.refreshWithRefreshToken();\n        }\n        return Promise.reject(new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(\"Unable to refresh token. No refresh token or password present.\", _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED));\n    }\n    /**\n     * Determines the root of the ArcGIS Server or Portal for a given URL.\n     *\n     * @param url the URl to determine the root url for.\n     */\n    getServerRootUrl(url) {\n        const [root] = (0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_6__.cleanUrl)(url).split(/\\/rest(\\/admin)?\\/services(?:\\/|#|\\?|$)/);\n        const [match, protocol, domainAndPath] = root.match(/(https?:\\/\\/)(.+)/);\n        const [domain, ...path] = domainAndPath.split(\"/\");\n        // only the domain is lowercased because in some cases an org id might be\n        // in the path which cannot be lowercased.\n        return `${protocol}${domain.toLowerCase()}/${path.join(\"/\")}`;\n    }\n    /**\n     * Returns the proper [`credentials`] option for `fetch` for a given domain.\n     * See [trusted server](https://enterprise.arcgis.com/en/portal/latest/administer/windows/configure-security.htm#ESRI_SECTION1_70CC159B3540440AB325BE5D89DBE94A).\n     * Used internally by underlying request methods to add support for specific security considerations.\n     *\n     * @param url The url of the request\n     * @returns \"include\" or \"same-origin\"\n     */\n    getDomainCredentials(url) {\n        if (!this.trustedDomains || !this.trustedDomains.length) {\n            return \"same-origin\";\n        }\n        return this.trustedDomains.some((domainWithProtocol) => {\n            return url.startsWith(domainWithProtocol);\n        })\n            ? \"include\"\n            : \"same-origin\";\n    }\n    /**\n     * Convenience method for {@linkcode ArcGISIdentityManager.destroy} for this instance of `ArcGISIdentityManager`\n     */\n    signOut() {\n        return ArcGISIdentityManager.destroy(this);\n    }\n    /**\n     * Return a function that closes over the validOrigins array and\n     * can be used as an event handler for the `message` event\n     *\n     * @param validOrigins Array of valid origins\n     */\n    createPostMessageHandler(validOrigins) {\n        // return a function that closes over the validOrigins and\n        // has access to the credential\n        return (event) => {\n            // Verify that the origin is valid\n            // Note: do not use regex's here. validOrigins is an array so we're checking that the event's origin\n            // is in the array via exact match. More info about avoiding postMessage xss issues here\n            // https://jlajara.gitlab.io/web/2020/07/17/Dom_XSS_PostMessage_2.html#tipsbypasses-in-postmessage-vulnerabilities\n            const isValidOrigin = validOrigins.indexOf(event.origin) > -1;\n            // JSAPI handles this slightly differently - instead of checking a list, it will respond if\n            // event.origin === window.location.origin || event.origin.endsWith('.arcgis.com')\n            // For Hub, and to enable cross domain debugging with port's in urls, we are opting to\n            // use a list of valid origins\n            // Ensure the message type is something we want to handle\n            const isValidType = event.data.type === \"arcgis:auth:requestCredential\";\n            // Ensure we don't pass an expired session forward\n            const isTokenValid = this.tokenExpires.getTime() > Date.now();\n            if (isValidOrigin && isValidType) {\n                let msg = {};\n                if (isTokenValid) {\n                    const credential = this.toJSON();\n                    msg = {\n                        type: \"arcgis:auth:credential\",\n                        credential\n                    };\n                }\n                else {\n                    msg = {\n                        type: \"arcgis:auth:error\",\n                        error: {\n                            name: \"tokenExpiredError\",\n                            message: \"Token was expired, and not returned to the child application\"\n                        }\n                    };\n                }\n                event.source.postMessage(msg, event.origin);\n            }\n        };\n    }\n    /**\n     * Validates that a given URL is properly federated with our current `portal`.\n     * Attempts to use the internal `federatedServers` cache first.\n     */\n    getTokenForServer(url, requestOptions) {\n        // requests to /rest/services/ and /rest/admin/services/ are both valid\n        // Federated servers may have inconsistent casing, so lowerCase it\n        const root = this.getServerRootUrl(url);\n        const existingToken = this.federatedServers[root];\n        if (existingToken &&\n            existingToken.expires &&\n            existingToken.expires.getTime() > Date.now()) {\n            return Promise.resolve(existingToken.token);\n        }\n        if (this._pendingTokenRequests[root]) {\n            return this._pendingTokenRequests[root];\n        }\n        this._pendingTokenRequests[root] = this.fetchAuthorizedDomains().then(() => {\n            return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(`${root}/rest/info`, {\n                credentials: this.getDomainCredentials(url)\n            })\n                .then((serverInfo) => {\n                if (serverInfo.owningSystemUrl) {\n                    /**\n                     * if this server is not owned by this portal\n                     * bail out with an error since we know we wont\n                     * be able to generate a token\n                     */\n                    if (!(0,_federation_utils_js__WEBPACK_IMPORTED_MODULE_4__.isFederated)(serverInfo.owningSystemUrl, this.portal)) {\n                        throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(`${url} is not federated with ${this.portal}.`, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.NOT_FEDERATED);\n                    }\n                    else {\n                        /**\n                         * if the server is federated, use the relevant token endpoint.\n                         */\n                        return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(`${serverInfo.owningSystemUrl}/sharing/rest/info`, requestOptions);\n                    }\n                }\n                else if (serverInfo.authInfo &&\n                    this.federatedServers[root] !== undefined) {\n                    /**\n                     * if its a stand-alone instance of ArcGIS Server that doesn't advertise\n                     * federation, but the root server url is recognized, use its built in token endpoint.\n                     */\n                    return Promise.resolve({\n                        authInfo: serverInfo.authInfo\n                    });\n                }\n                else {\n                    throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(`${url} is not federated with any portal and is not explicitly trusted.`, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.NOT_FEDERATED);\n                }\n            })\n                .then((serverInfo) => {\n                // an expired token cant be used to generate a new token so refresh our credentials before trying to generate a server token\n                if (this.token && this.tokenExpires.getTime() < Date.now()) {\n                    // If we are authenticated to a single server just refresh with username and password and use the new credentials as the credentials for this server.\n                    if (this.server) {\n                        return this.refreshCredentials().then(() => {\n                            return {\n                                token: this.token,\n                                expires: this.tokenExpires\n                            };\n                        });\n                    }\n                    // Otherwise refresh the credentials for the portal and generate a URL for the specific server.\n                    return this.refreshCredentials().then(() => {\n                        return this.generateTokenForServer(serverInfo.authInfo.tokenServicesUrl, root);\n                    });\n                }\n                else {\n                    return this.generateTokenForServer(serverInfo.authInfo.tokenServicesUrl, root);\n                }\n            })\n                .then((response) => {\n                this.federatedServers[root] = response;\n                delete this._pendingTokenRequests[root];\n                return response.token;\n            });\n        });\n        return this._pendingTokenRequests[root];\n    }\n    /**\n     * Generates a token for a given `serverUrl` using a given `tokenServicesUrl`.\n     */\n    generateTokenForServer(tokenServicesUrl, serverUrl) {\n        return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(tokenServicesUrl, {\n            params: {\n                token: this.token,\n                serverUrl,\n                expiration: this.tokenDuration\n            }\n        })\n            .then((response) => {\n            return {\n                token: response.token,\n                expires: new Date(response.expires - 1000 * 60 * 5)\n            };\n        })\n            .catch((e) => {\n            throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(e.message, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.GENERATE_TOKEN_FOR_SERVER_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * Returns an unexpired token for the current `portal`.\n     */\n    getFreshToken(requestOptions) {\n        if (this.token && !this.tokenExpires) {\n            return Promise.resolve(this.token);\n        }\n        if (this.token &&\n            this.tokenExpires &&\n            this.tokenExpires.getTime() > Date.now()) {\n            return Promise.resolve(this.token);\n        }\n        if (!this._pendingTokenRequests[this.portal]) {\n            this._pendingTokenRequests[this.portal] = this.refreshCredentials(requestOptions).then(() => {\n                this._pendingTokenRequests[this.portal] = null;\n                return this.token;\n            });\n        }\n        return this._pendingTokenRequests[this.portal];\n    }\n    /**\n     * Refreshes the current `token` and `tokenExpires` with `username` and\n     * `password`.\n     */\n    refreshWithUsernameAndPassword(requestOptions) {\n        const params = {\n            username: this.username,\n            password: this.password,\n            expiration: this.tokenDuration,\n            client: \"referer\",\n            referer: typeof window !== \"undefined\" &&\n                typeof window.document !== \"undefined\" &&\n                window.location &&\n                window.location.origin\n                ? window.location.origin\n                : /* istanbul ignore next */\n                    _index_js__WEBPACK_IMPORTED_MODULE_12__.NODEJS_DEFAULT_REFERER_HEADER\n        };\n        return (this.server\n            ? (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(`${this.getServerRootUrl(this.server)}/rest/info`).then((response) => {\n                return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(response.authInfo.tokenServicesUrl, Object.assign({ params }, requestOptions));\n            })\n            : (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(`${this.portal}/generateToken`, Object.assign({ params }, requestOptions)))\n            .then((response) => {\n            this.updateToken(response.token, new Date(response.expires));\n            return this;\n        })\n            .catch((e) => {\n            throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(e.message, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * Refreshes the current `token` and `tokenExpires` with `refreshToken`.\n     */\n    refreshWithRefreshToken(requestOptions) {\n        // If our refresh token expires sometime in the next 24 hours then refresh the refresh token\n        const ONE_DAY_IN_MILLISECONDS = 1000 * 60 * 60 * 24;\n        if (this.refreshToken &&\n            this.refreshTokenExpires &&\n            this.refreshTokenExpires.getTime() - ONE_DAY_IN_MILLISECONDS < Date.now()) {\n            return this.exchangeRefreshToken(requestOptions);\n        }\n        const options = Object.assign({ params: {\n                client_id: this.clientId,\n                refresh_token: this.refreshToken,\n                grant_type: \"refresh_token\"\n            } }, requestOptions);\n        return (0,_fetch_token_js__WEBPACK_IMPORTED_MODULE_3__.fetchToken)(`${this.portal}/oauth2/token`, options)\n            .then((response) => {\n            return this.updateToken(response.token, response.expires);\n        })\n            .catch((e) => {\n            throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(e.message, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * Update the stored {@linkcode ArcGISIdentityManager.token} and {@linkcode ArcGISIdentityManager.tokenExpires} properties. This method is used internally when refreshing tokens.\n     * You may need to call this if you want update the token with a new token from an external source.\n     *\n     * @param newToken The new token to use for this instance of `ArcGISIdentityManager`.\n     * @param newTokenExpiration The new expiration date of the token.\n     * @returns\n     */\n    updateToken(newToken, newTokenExpiration) {\n        this._token = newToken;\n        this._tokenExpires = newTokenExpiration;\n        return this;\n    }\n    /**\n     * Exchanges an unexpired `refreshToken` for a new one, also updates `token` and\n     * `tokenExpires`.\n     */\n    exchangeRefreshToken(requestOptions) {\n        const options = Object.assign({ params: {\n                client_id: this.clientId,\n                refresh_token: this.refreshToken,\n                redirect_uri: this.redirectUri,\n                grant_type: \"exchange_refresh_token\"\n            } }, requestOptions);\n        return (0,_fetch_token_js__WEBPACK_IMPORTED_MODULE_3__.fetchToken)(`${this.portal}/oauth2/token`, options)\n            .then((response) => {\n            this._token = response.token;\n            this._tokenExpires = response.expires;\n            this._refreshToken = response.refreshToken;\n            this._refreshTokenExpires = response.refreshTokenExpires;\n            return this;\n        })\n            .catch((e) => {\n            throw new _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestError(e.message, _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_11__.ArcGISTokenRequestErrorCodes.REFRESH_TOKEN_EXCHANGE_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * ensures that the authorizedCrossOriginDomains are obtained from the portal and cached\n     * so we can check them later.\n     *\n     * @returns this\n     */\n    fetchAuthorizedDomains() {\n        // if this token is for a specific server or we don't have a portal\n        // don't get the portal info because we cant get the authorizedCrossOriginDomains\n        if (this.server || !this.portal) {\n            return Promise.resolve(this);\n        }\n        return this.getPortal().then((portalInfo) => {\n            /**\n             * Specific domains can be configured as secure.esri.com or https://secure.esri.com this\n             * normalizes to https://secure.esri.com so we can use startsWith later.\n             */\n            if (portalInfo.authorizedCrossOriginDomains &&\n                portalInfo.authorizedCrossOriginDomains.length) {\n                this.trustedDomains = portalInfo.authorizedCrossOriginDomains\n                    .filter((d) => !d.startsWith(\"http://\"))\n                    .map((d) => {\n                    if (d.startsWith(\"https://\")) {\n                        return d;\n                    }\n                    else {\n                        return `https://${d}`;\n                    }\n                });\n            }\n            return this;\n        });\n    }\n}\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager}.\n * @internal\n *\n */ /* istanbul ignore next */\nfunction UserSession(options) {\n    console.log(\"DEPRECATED:, 'UserSession' is deprecated. Use 'ArcGISIdentityManager' instead.\");\n    return new ArcGISIdentityManager(options);\n}\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.beginOAuth2}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.beginOAuth2 = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.beginOAuth2' is deprecated. Use 'ArcGISIdentityManager.beginOAuth2' instead.\");\n    return ArcGISIdentityManager.beginOAuth2(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.completeOAuth2}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.completeOAuth2 = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.completeOAuth2' is deprecated. Use 'ArcGISIdentityManager.completeOAuth2' instead.\");\n    if (args.length <= 1) {\n        console.warn(\"WARNING:, 'UserSession.completeOAuth2' is now async and returns a promise the resolves to an instance of `ArcGISIdentityManager`.\");\n    }\n    return ArcGISIdentityManager.completeOAuth2(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.fromParent}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.fromParent = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.fromParent' is deprecated. Use 'ArcGISIdentityManager.fromParent' instead.\");\n    return ArcGISIdentityManager.fromParent(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.authorize}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.authorize = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.authorize' is deprecated. Use 'ArcGISIdentityManager.authorize' instead.\");\n    return ArcGISIdentityManager.authorize(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.exchangeAuthorizationCode}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.exchangeAuthorizationCode = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.exchangeAuthorizationCode' is deprecated. Use 'ArcGISIdentityManager.exchangeAuthorizationCode' instead.\");\n    return ArcGISIdentityManager.exchangeAuthorizationCode(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.fromCredential}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.fromCredential = function (...args) {\n    console.log(\"DEPRECATED:, 'UserSession.fromCredential' is deprecated. Use 'ArcGISIdentityManager.fromCredential' instead.\");\n    console.warn(\"WARNING:, 'UserSession.fromCredential' now requires a `ServerInfo` object from the JS API as a second parameter.\");\n    return ArcGISIdentityManager.fromCredential(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.deserialize}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.deserialize = function (...args) {\n    console.log(\"DEPRECATED:, 'UserSession.deserialize' is deprecated. Use 'ArcGISIdentityManager.deserialize' instead.\");\n    return ArcGISIdentityManager.deserialize(...args);\n};\n\n//# sourceMappingURL=ArcGISIdentityManager.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/ArcGISIdentityManager.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/app-tokens.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/app-tokens.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exchangeToken\": () => (/* binding */ exchangeToken),\n/* harmony export */   \"platformSelf\": () => (/* binding */ platformSelf)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/request.js\");\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Request app-specific token, passing in the token for the current app.\n *\n * This call returns a token after performing the same checks made by validateAppAccess.\n * It returns an app-specific token of the signed-in user only if the user has access\n * to the app and the encrypted platform cookie is valid.\n *\n * A scenario where an app would use this is if it is iframed into another platform app\n * and receives credentials via postMessage. Those credentials contain a token that is\n * specific to the host app, so the embedded app would use `exchangeToken` to get one\n * that is specific to itself.\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * @param token\n * @param clientId application\n * @param portal\n */\nfunction exchangeToken(token, clientId, portal = \"https://www.arcgis.com/sharing/rest\") {\n    const url = `${portal}/oauth2/exchangeToken`;\n    const ro = {\n        method: \"POST\",\n        params: {\n            f: \"json\",\n            client_id: clientId,\n            token\n        }\n    };\n    // make the request and return the token\n    return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, ro).then((response) => response.token);\n}\n/**\n * Request a token for a specific application using the esri_aopc encrypted cookie\n *\n * When a client app boots up, it will know its clientId and the redirectUri for use\n * in the normal /oauth/authorize pop-out oAuth flow.\n *\n * If the app sees an `esri_aopc` cookie (only set if the app is hosted on *.arcgis.com),\n * it can call the /oauth2/platformSelf end-point passing in the clientId and redirectUri\n * in headers, and it will receive back an app-specific token, assuming the user has\n * access to the app.\n *\n * Since there are scenarios where an app can boot using credentials/token from localstorage\n * but those credentials are not for the same user as the esri_aopc cookie, it is recommended that\n * an app check the returned username against any existing identity they may have loaded.\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * ```js\n * // convert the encrypted platform cookie into a ArcGISIdentityManager\n * import { platformSelf, ArcGISIdentityManager } from '@esri/arcgis-rest-auth';\n *\n * const portal = 'https://www.arcgis.com/sharing/rest';\n * const clientId = 'YOURAPPCLIENTID';\n *\n * // exchange esri_aopc cookie\n * return platformSelf(clientId, 'https://your-app-redirect-uri', portal)\n * .then((response) => {\n *  const currentTimestamp = new Date().getTime();\n *  const tokenExpiresTimestamp = currentTimestamp + (response.expires_in * 1000);\n *  // Construct the session and return it\n *  return new ArcGISIdentityManager({\n *    portal,\n *    clientId,\n *    username: response.username,\n *    token: response.token,\n *    tokenExpires: new Date(tokenExpiresTimestamp),\n *    ssl: true\n *  });\n * })\n *\n * ```\n *\n *\n * @param clientId\n * @param redirectUri\n * @param portal\n */\nfunction platformSelf(clientId, redirectUri, portal = \"https://www.arcgis.com/sharing/rest\") {\n    // TEMPORARY: the f=json should not be needed, but currently is\n    const url = `${portal}/oauth2/platformSelf?f=json`;\n    const ro = {\n        method: \"POST\",\n        headers: {\n            \"X-Esri-Auth-Client-Id\": clientId,\n            \"X-Esri-Auth-Redirect-Uri\": redirectUri\n        },\n        // Note: request has logic to include the cookie\n        // for platformSelf calls w/ the X-Esri-Auth-Client-Id header\n        params: {\n            f: \"json\"\n        }\n    };\n    // make the request and return the token\n    return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, ro);\n}\n//# sourceMappingURL=app-tokens.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/app-tokens.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/authenticated-request-options.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/authenticated-request-options.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=authenticated-request-options.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/authenticated-request-options.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/federation-utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/federation-utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"canUseOnlineToken\": () => (/* binding */ canUseOnlineToken),\n/* harmony export */   \"getOnlineEnvironment\": () => (/* binding */ getOnlineEnvironment),\n/* harmony export */   \"isFederated\": () => (/* binding */ isFederated),\n/* harmony export */   \"isOnline\": () => (/* binding */ isOnline),\n/* harmony export */   \"normalizeOnlinePortalUrl\": () => (/* binding */ normalizeOnlinePortalUrl)\n/* harmony export */ });\n/* harmony import */ var _utils_clean_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/clean-url.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js\");\n\n/**\n * Used to test if a URL is an ArcGIS Online URL\n */\nconst arcgisOnlineUrlRegex = /^https?:\\/\\/(\\S+)\\.arcgis\\.com.+/;\n/**\n * Used to test if a URL is production ArcGIS Online Portal\n */\nconst arcgisOnlinePortalRegex = /^https?:\\/\\/(dev|devext|qa|qaext|www)\\.arcgis\\.com\\/sharing\\/rest+/;\n/**\n * Used to test if a URL is an ArcGIS Online Organization Portal\n */\nconst arcgisOnlineOrgPortalRegex = /^https?:\\/\\/(?:[a-z0-9-]+\\.maps(dev|devext|qa|qaext)?)?.arcgis\\.com\\/sharing\\/rest/;\nfunction isOnline(url) {\n    return arcgisOnlineUrlRegex.test(url);\n}\nfunction normalizeOnlinePortalUrl(portalUrl) {\n    if (!arcgisOnlineUrlRegex.test(portalUrl)) {\n        return portalUrl;\n    }\n    switch (getOnlineEnvironment(portalUrl)) {\n        case \"dev\":\n            return \"https://devext.arcgis.com/sharing/rest\";\n        case \"qa\":\n            return \"https://qaext.arcgis.com/sharing/rest\";\n        default:\n            return \"https://www.arcgis.com/sharing/rest\";\n    }\n}\nfunction getOnlineEnvironment(url) {\n    if (!arcgisOnlineUrlRegex.test(url)) {\n        return null;\n    }\n    const match = url.match(arcgisOnlineUrlRegex);\n    const subdomain = match[1].split(\".\").pop();\n    if (subdomain.includes(\"dev\")) {\n        return \"dev\";\n    }\n    if (subdomain.includes(\"qa\")) {\n        return \"qa\";\n    }\n    return \"production\";\n}\nfunction isFederated(owningSystemUrl, portalUrl) {\n    const normalizedPortalUrl = (0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(normalizeOnlinePortalUrl(portalUrl)).replace(/https?:\\/\\//, \"\");\n    const normalizedOwningSystemUrl = (0,_utils_clean_url_js__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(owningSystemUrl).replace(/https?:\\/\\//, \"\");\n    return new RegExp(normalizedOwningSystemUrl, \"i\").test(normalizedPortalUrl);\n}\nfunction canUseOnlineToken(portalUrl, requestUrl) {\n    const portalIsOnline = isOnline(portalUrl);\n    const requestIsOnline = isOnline(requestUrl);\n    const portalEnv = getOnlineEnvironment(portalUrl);\n    const requestEnv = getOnlineEnvironment(requestUrl);\n    if (portalIsOnline && requestIsOnline && portalEnv === requestEnv) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=federation-utils.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/federation-utils.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchToken\": () => (/* binding */ fetchToken)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/request.js\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nconst FIVE_MINUTES_IN_MILLISECONDS = 5 * 60 * 1000;\nfunction fetchToken(url, requestOptions) {\n    const options = requestOptions;\n    // we generate a response, so we can't return the raw response\n    options.rawResponse = false;\n    return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((response) => {\n        const r = {\n            token: response.access_token,\n            username: response.username,\n            expires: new Date(\n            // convert seconds in response to milliseconds and add the value to the current time to calculate a static expiration timestamp\n            // we subtract 5 minutes here to make sure that we refresh the token early if the user makes requests\n            Date.now() + response.expires_in * 1000 - FIVE_MINUTES_IN_MILLISECONDS),\n            ssl: response.ssl === true\n        };\n        if (response.refresh_token) {\n            r.refreshToken = response.refresh_token;\n        }\n        if (response.refresh_token_expires_in) {\n            r.refreshTokenExpires = new Date(\n            // convert seconds in response to milliseconds and add the value to the current time to calculate a static expiration timestamp\n            // we subtract 5 minutes here to make sure that we refresh the token early if the user makes requests\n            Date.now() +\n                response.refresh_token_expires_in * 1000 -\n                FIVE_MINUTES_IN_MILLISECONDS);\n        }\n        return r;\n    });\n}\n//# sourceMappingURL=fetch-token.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ApiKey\": () => (/* reexport safe */ _ApiKeyManager_js__WEBPACK_IMPORTED_MODULE_25__.ApiKey),\n/* harmony export */   \"ApiKeyManager\": () => (/* reexport safe */ _ApiKeyManager_js__WEBPACK_IMPORTED_MODULE_25__.ApiKeyManager),\n/* harmony export */   \"ApplicationCredentialsManager\": () => (/* reexport safe */ _ApplicationCredentialsManager_js__WEBPACK_IMPORTED_MODULE_24__.ApplicationCredentialsManager),\n/* harmony export */   \"ApplicationSession\": () => (/* reexport safe */ _ApplicationCredentialsManager_js__WEBPACK_IMPORTED_MODULE_24__.ApplicationSession),\n/* harmony export */   \"ArcGISAccessDeniedError\": () => (/* reexport safe */ _utils_ArcGISAccessDeniedError_js__WEBPACK_IMPORTED_MODULE_4__.ArcGISAccessDeniedError),\n/* harmony export */   \"ArcGISAuthError\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.ArcGISAuthError),\n/* harmony export */   \"ArcGISIdentityManager\": () => (/* reexport safe */ _ArcGISIdentityManager_js__WEBPACK_IMPORTED_MODULE_26__.ArcGISIdentityManager),\n/* harmony export */   \"ArcGISRequestError\": () => (/* reexport safe */ _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_2__.ArcGISRequestError),\n/* harmony export */   \"ArcGISTokenRequestError\": () => (/* reexport safe */ _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISTokenRequestError),\n/* harmony export */   \"ArcGISTokenRequestErrorCodes\": () => (/* reexport safe */ _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISTokenRequestErrorCodes),\n/* harmony export */   \"Blob\": () => (/* reexport safe */ _esri_arcgis_rest_form_data__WEBPACK_IMPORTED_MODULE_41__.Blob),\n/* harmony export */   \"ErrorTypes\": () => (/* reexport safe */ _utils_ErrorTypes_js__WEBPACK_IMPORTED_MODULE_9__.ErrorTypes),\n/* harmony export */   \"File\": () => (/* reexport safe */ _esri_arcgis_rest_form_data__WEBPACK_IMPORTED_MODULE_41__.File),\n/* harmony export */   \"FormData\": () => (/* reexport safe */ _esri_arcgis_rest_form_data__WEBPACK_IMPORTED_MODULE_41__.FormData),\n/* harmony export */   \"NODEJS_DEFAULT_REFERER_HEADER\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.NODEJS_DEFAULT_REFERER_HEADER),\n/* harmony export */   \"UserSession\": () => (/* reexport safe */ _ArcGISIdentityManager_js__WEBPACK_IMPORTED_MODULE_26__.UserSession),\n/* harmony export */   \"appendCustomParams\": () => (/* reexport safe */ _utils_append_custom_params_js__WEBPACK_IMPORTED_MODULE_1__.appendCustomParams),\n/* harmony export */   \"canUseOnlineToken\": () => (/* reexport safe */ _federation_utils_js__WEBPACK_IMPORTED_MODULE_31__.canUseOnlineToken),\n/* harmony export */   \"checkForErrors\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.checkForErrors),\n/* harmony export */   \"cleanUrl\": () => (/* reexport safe */ _utils_clean_url_js__WEBPACK_IMPORTED_MODULE_5__.cleanUrl),\n/* harmony export */   \"decodeParam\": () => (/* reexport safe */ _utils_decode_query_string_js__WEBPACK_IMPORTED_MODULE_8__.decodeParam),\n/* harmony export */   \"decodeQueryString\": () => (/* reexport safe */ _utils_decode_query_string_js__WEBPACK_IMPORTED_MODULE_8__.decodeQueryString),\n/* harmony export */   \"encodeFormData\": () => (/* reexport safe */ _utils_encode_form_data_js__WEBPACK_IMPORTED_MODULE_6__.encodeFormData),\n/* harmony export */   \"encodeParam\": () => (/* reexport safe */ _utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_7__.encodeParam),\n/* harmony export */   \"encodeQueryString\": () => (/* reexport safe */ _utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_7__.encodeQueryString),\n/* harmony export */   \"exchangeToken\": () => (/* reexport safe */ _app_tokens_js__WEBPACK_IMPORTED_MODULE_29__.exchangeToken),\n/* harmony export */   \"fetchToken\": () => (/* reexport safe */ _fetch_token_js__WEBPACK_IMPORTED_MODULE_27__.fetchToken),\n/* harmony export */   \"getDefaultRequestOptions\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultRequestOptions),\n/* harmony export */   \"getFetch\": () => (/* reexport safe */ _esri_arcgis_rest_fetch__WEBPACK_IMPORTED_MODULE_40__.getFetch),\n/* harmony export */   \"getOnlineEnvironment\": () => (/* reexport safe */ _federation_utils_js__WEBPACK_IMPORTED_MODULE_31__.getOnlineEnvironment),\n/* harmony export */   \"internalRequest\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.internalRequest),\n/* harmony export */   \"isFederated\": () => (/* reexport safe */ _federation_utils_js__WEBPACK_IMPORTED_MODULE_31__.isFederated),\n/* harmony export */   \"isOnline\": () => (/* reexport safe */ _federation_utils_js__WEBPACK_IMPORTED_MODULE_31__.isOnline),\n/* harmony export */   \"normalizeOnlinePortalUrl\": () => (/* reexport safe */ _federation_utils_js__WEBPACK_IMPORTED_MODULE_31__.normalizeOnlinePortalUrl),\n/* harmony export */   \"platformSelf\": () => (/* reexport safe */ _app_tokens_js__WEBPACK_IMPORTED_MODULE_29__.platformSelf),\n/* harmony export */   \"processParams\": () => (/* reexport safe */ _utils_process_params_js__WEBPACK_IMPORTED_MODULE_20__.processParams),\n/* harmony export */   \"request\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.request),\n/* harmony export */   \"requiresFormData\": () => (/* reexport safe */ _utils_process_params_js__WEBPACK_IMPORTED_MODULE_20__.requiresFormData),\n/* harmony export */   \"revokeToken\": () => (/* reexport safe */ _revoke_token_js__WEBPACK_IMPORTED_MODULE_32__.revokeToken),\n/* harmony export */   \"setDefaultRequestOptions\": () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_0__.setDefaultRequestOptions),\n/* harmony export */   \"validateAppAccess\": () => (/* reexport safe */ _validate_app_access_js__WEBPACK_IMPORTED_MODULE_30__.validateAppAccess),\n/* harmony export */   \"warn\": () => (/* reexport safe */ _utils_warn_js__WEBPACK_IMPORTED_MODULE_23__.warn),\n/* harmony export */   \"withOptions\": () => (/* reexport safe */ _utils_with_options_js__WEBPACK_IMPORTED_MODULE_33__.withOptions)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/request.js\");\n/* harmony import */ var _utils_append_custom_params_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/append-custom-params.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js\");\n/* harmony import */ var _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/ArcGISRequestError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js\");\n/* harmony import */ var _utils_ArcGISTokenRequestError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/ArcGISTokenRequestError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js\");\n/* harmony import */ var _utils_ArcGISAccessDeniedError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/ArcGISAccessDeniedError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISAccessDeniedError.js\");\n/* harmony import */ var _utils_clean_url_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/clean-url.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js\");\n/* harmony import */ var _utils_encode_form_data_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/encode-form-data.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js\");\n/* harmony import */ var _utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/encode-query-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js\");\n/* harmony import */ var _utils_decode_query_string_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/decode-query-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js\");\n/* harmony import */ var _utils_ErrorTypes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/ErrorTypes.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ErrorTypes.js\");\n/* harmony import */ var _utils_GrantTypes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/GrantTypes.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/GrantTypes.js\");\n/* harmony import */ var _utils_HTTPMethods_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/HTTPMethods.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/HTTPMethods.js\");\n/* harmony import */ var _utils_IAuthenticationManager_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/IAuthenticationManager.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IAuthenticationManager.js\");\n/* harmony import */ var _utils_IFetchTokenParams_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/IFetchTokenParams.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IFetchTokenParams.js\");\n/* harmony import */ var _utils_IGenerateTokenParams_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/IGenerateTokenParams.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IGenerateTokenParams.js\");\n/* harmony import */ var _utils_IParams_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/IParams.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParams.js\");\n/* harmony import */ var _utils_IParamBuilder_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/IParamBuilder.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamBuilder.js\");\n/* harmony import */ var _utils_IParamsBuilder_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils/IParamsBuilder.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamsBuilder.js\");\n/* harmony import */ var _utils_IRequestOptions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./utils/IRequestOptions.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IRequestOptions.js\");\n/* harmony import */ var _utils_ITokenRequestOptions_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils/ITokenRequestOptions.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ITokenRequestOptions.js\");\n/* harmony import */ var _utils_process_params_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils/process-params.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js\");\n/* harmony import */ var _utils_ResponseFormats_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./utils/ResponseFormats.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ResponseFormats.js\");\n/* harmony import */ var _utils_retryAuthError_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./utils/retryAuthError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/retryAuthError.js\");\n/* harmony import */ var _utils_warn_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./utils/warn.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js\");\n/* harmony import */ var _ApplicationCredentialsManager_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./ApplicationCredentialsManager.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/ApplicationCredentialsManager.js\");\n/* harmony import */ var _ApiKeyManager_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./ApiKeyManager.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/ApiKeyManager.js\");\n/* harmony import */ var _ArcGISIdentityManager_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ArcGISIdentityManager.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/ArcGISIdentityManager.js\");\n/* harmony import */ var _fetch_token_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./fetch-token.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js\");\n/* harmony import */ var _authenticated_request_options_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./authenticated-request-options.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/authenticated-request-options.js\");\n/* harmony import */ var _app_tokens_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./app-tokens.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/app-tokens.js\");\n/* harmony import */ var _validate_app_access_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./validate-app-access.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/validate-app-access.js\");\n/* harmony import */ var _federation_utils_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./federation-utils.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/federation-utils.js\");\n/* harmony import */ var _revoke_token_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./revoke-token.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/revoke-token.js\");\n/* harmony import */ var _utils_with_options_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./utils/with-options.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/with-options.js\");\n/* harmony import */ var _types_feature_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./types/feature.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/types/feature.js\");\n/* harmony import */ var _types_geometry_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./types/geometry.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/types/geometry.js\");\n/* harmony import */ var _types_symbol_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./types/symbol.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/types/symbol.js\");\n/* harmony import */ var _types_service_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./types/service.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/types/service.js\");\n/* harmony import */ var _types_group_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./types/group.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/types/group.js\");\n/* harmony import */ var _types_user_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./types/user.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/types/user.js\");\n/* harmony import */ var _esri_arcgis_rest_fetch__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @esri/arcgis-rest-fetch */ \"./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.mjs\");\n/* harmony import */ var _esri_arcgis_rest_form_data__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @esri/arcgis-rest-form-data */ \"./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.mjs\");\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/request.js":
/*!********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/request.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArcGISAuthError\": () => (/* binding */ ArcGISAuthError),\n/* harmony export */   \"NODEJS_DEFAULT_REFERER_HEADER\": () => (/* binding */ NODEJS_DEFAULT_REFERER_HEADER),\n/* harmony export */   \"checkForErrors\": () => (/* binding */ checkForErrors),\n/* harmony export */   \"getDefaultRequestOptions\": () => (/* binding */ getDefaultRequestOptions),\n/* harmony export */   \"internalRequest\": () => (/* binding */ internalRequest),\n/* harmony export */   \"request\": () => (/* binding */ request),\n/* harmony export */   \"setDefaultRequestOptions\": () => (/* binding */ setDefaultRequestOptions)\n/* harmony export */ });\n/* harmony import */ var _utils_encode_form_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/encode-form-data.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js\");\n/* harmony import */ var _utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/encode-query-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js\");\n/* harmony import */ var _utils_process_params_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/process-params.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js\");\n/* harmony import */ var _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/ArcGISRequestError.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js\");\n/* harmony import */ var _utils_warn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/warn.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js\");\n/* harmony import */ var _esri_arcgis_rest_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @esri/arcgis-rest-fetch */ \"./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.mjs\");\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n\n\n\nconst NODEJS_DEFAULT_REFERER_HEADER = `@esri/arcgis-rest-js`;\n/**\n * Sets the default options that will be passed in **all requests across all `@esri/arcgis-rest-js` modules**.\n *\n * ```js\n * import { setDefaultRequestOptions } from \"@esri/arcgis-rest-request\";\n *\n * setDefaultRequestOptions({\n *   authentication: ArcGISIdentityManager // all requests will use this session by default\n * })\n * ```\n *\n * You should **never** set a default `authentication` when you are in a server side environment where you may be handling requests for many different authenticated users.\n *\n * @param options The default options to pass with every request. Existing default will be overwritten.\n * @param hideWarnings Silence warnings about setting default `authentication` in shared environments.\n */\nfunction setDefaultRequestOptions(options, hideWarnings) {\n    if (options.authentication && !hideWarnings) {\n        (0,_utils_warn_js__WEBPACK_IMPORTED_MODULE_4__.warn)(\"You should not set `authentication` as a default in a shared environment such as a web server which will process multiple users requests. You can call `setDefaultRequestOptions` with `true` as a second argument to disable this warning.\");\n    }\n    globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS = options;\n}\nfunction getDefaultRequestOptions() {\n    return (globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS || {\n        httpMethod: \"POST\",\n        params: {\n            f: \"json\"\n        }\n    });\n}\n/**\n * This error is thrown when a request encounters an invalid token error. Requests that use {@linkcode ArcGISIdentityManager} or\n * {@linkcode ApplicationCredentialsManager} in the `authentication` option the authentication manager will automatically try to generate\n * a fresh token using either {@linkcode ArcGISIdentityManager.refreshCredentials} or\n * {@linkcode ApplicationCredentialsManager.refreshCredentials}. If the request with the new token fails you will receive an `ArcGISAuthError`\n * if refreshing the token fails you will receive an instance of {@linkcode ArcGISTokenRequestError}.\n *\n * ```js\n * request(someUrl, {\n *   authentication: identityManager,\n *   // some additional options...\n * }).catch(e => {\n *   if(e.name === \"ArcGISAuthError\") {\n *     console.log(\"Request with a new token failed you might want to have the user authorize again.\")\n *   }\n *\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     console.log(\"There was an error refreshing the token you might want to have the user authorize again.\")\n *   }\n * })\n * ```\n */\nclass ArcGISAuthError extends _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISRequestError {\n    /**\n     * Create a new `ArcGISAuthError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options of the request\n     */\n    constructor(message = \"AUTHENTICATION_ERROR\", code = \"AUTHENTICATION_ERROR_CODE\", response, url, options) {\n        super(message, code, response, url, options);\n        this.name = \"ArcGISAuthError\";\n        this.message =\n            code === \"AUTHENTICATION_ERROR_CODE\" ? message : `${code}: ${message}`;\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n    }\n    retry(getSession, retryLimit = 1) {\n        let tries = 0;\n        const retryRequest = (resolve, reject) => {\n            tries = tries + 1;\n            getSession(this.url, this.options)\n                .then((session) => {\n                const newOptions = Object.assign(Object.assign({}, this.options), { authentication: session });\n                return internalRequest(this.url, newOptions);\n            })\n                .then((response) => {\n                resolve(response);\n            })\n                .catch((e) => {\n                if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n                    retryRequest(resolve, reject);\n                }\n                else if (e.name === this.name &&\n                    e.message === this.message &&\n                    tries >= retryLimit) {\n                    reject(this);\n                }\n                else {\n                    reject(e);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            retryRequest(resolve, reject);\n        });\n    }\n}\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nfunction checkForErrors(response, url, params, options, originalAuthError) {\n    // this is an error message from billing.arcgis.com backend\n    if (response.code >= 400) {\n        const { message, code } = response;\n        throw new _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISRequestError(message, code, response, url, options);\n    }\n    // error from ArcGIS Online or an ArcGIS Portal or server instance.\n    if (response.error) {\n        const { message, code, messageCode } = response.error;\n        const errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n        if (code === 498 || code === 499) {\n            if (originalAuthError) {\n                throw originalAuthError;\n            }\n            else {\n                throw new ArcGISAuthError(message, errorCode, response, url, options);\n            }\n        }\n        throw new _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISRequestError(message, errorCode, response, url, options);\n    }\n    // error from a status check\n    if (response.status === \"failed\" || response.status === \"failure\") {\n        let message;\n        let code = \"UNKNOWN_ERROR_CODE\";\n        try {\n            message = JSON.parse(response.statusMessage).message;\n            code = JSON.parse(response.statusMessage).code;\n        }\n        catch (e) {\n            message = response.statusMessage || response.message;\n        }\n        throw new _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISRequestError(message, code, response, url, options);\n    }\n    return response;\n}\n/**\n * This is the internal implementation of `request` without the automatic retry behavior to prevent\n * infinite loops when a server continues to return invalid token errors.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n * @internal\n */\nfunction internalRequest(url, requestOptions) {\n    const defaults = getDefaultRequestOptions();\n    const options = Object.assign(Object.assign(Object.assign({ httpMethod: \"POST\" }, defaults), requestOptions), {\n        params: Object.assign(Object.assign({}, defaults.params), requestOptions.params),\n        headers: Object.assign(Object.assign({}, defaults.headers), requestOptions.headers)\n    });\n    const { httpMethod, rawResponse } = options;\n    const params = Object.assign({ f: \"json\" }, options.params);\n    let originalAuthError = null;\n    const fetchOptions = {\n        method: httpMethod,\n        signal: options.signal,\n        /* ensures behavior mimics XMLHttpRequest.\n        needed to support sending IWA cookies */\n        credentials: options.credentials || \"same-origin\"\n    };\n    // the /oauth2/platformSelf route will add X-Esri-Auth-Client-Id header\n    // and that request needs to send cookies cross domain\n    // so we need to set the credentials to \"include\"\n    if (options.headers &&\n        options.headers[\"X-Esri-Auth-Client-Id\"] &&\n        url.indexOf(\"/oauth2/platformSelf\") > -1) {\n        fetchOptions.credentials = \"include\";\n    }\n    let authentication;\n    // Check to see if this is a raw token as a string and create a IAuthenticationManager like object for it.\n    // Otherwise this just assumes that options.authentication is an IAuthenticationManager.\n    if (typeof options.authentication === \"string\") {\n        const rawToken = options.authentication;\n        authentication = {\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            getToken: () => {\n                return Promise.resolve(rawToken);\n            }\n        };\n        /* istanbul ignore else - we don't need to test NOT warning people */\n        if (!options.authentication.startsWith(\"AAPK\") && // doesn't look like an API Key\n            !options.suppressWarnings && // user doesn't want to suppress warnings for this request\n            !globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING // we havn't shown the user this warning yet\n        ) {\n            (0,_utils_warn_js__WEBPACK_IMPORTED_MODULE_4__.warn)(`Using an oAuth 2.0 access token directly in the token option is discouraged. Consider using ArcGISIdentityManager or Application session. See https://esriurl.com/arcgis-rest-js-direct-token-warning for more information.`);\n            globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING = true;\n        }\n    }\n    else {\n        authentication = options.authentication;\n    }\n    // for errors in GET requests we want the URL passed to the error to be the URL before\n    // query params are applied.\n    const originalUrl = url;\n    return (authentication\n        ? authentication.getToken(url).catch((err) => {\n            /**\n             * append original request url and requestOptions\n             * to the error thrown by getToken()\n             * to assist with retrying\n             */\n            err.url = url;\n            err.options = options;\n            /**\n             * if an attempt is made to talk to an unfederated server\n             * first try the request anonymously. if a 'token required'\n             * error is thrown, throw the UNFEDERATED error then.\n             */\n            originalAuthError = err;\n            return Promise.resolve(\"\");\n        })\n        : Promise.resolve(\"\"))\n        .then((token) => {\n        if (token.length) {\n            params.token = token;\n        }\n        if (authentication && authentication.getDomainCredentials) {\n            fetchOptions.credentials = authentication.getDomainCredentials(url);\n        }\n        // Custom headers to add to request. IRequestOptions.headers with merge over requestHeaders.\n        const requestHeaders = {};\n        if (fetchOptions.method === \"GET\") {\n            // Prevents token from being passed in query params when hideToken option is used.\n            /* istanbul ignore if - window is always defined in a browser. Test case is covered by Jasmine in node test */\n            if (params.token &&\n                options.hideToken &&\n                // Sharing API does not support preflight check required by modern browsers https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request\n                typeof window === \"undefined\") {\n                requestHeaders[\"X-Esri-Authorization\"] = `Bearer ${params.token}`;\n                delete params.token;\n            }\n            // encode the parameters into the query string\n            const queryParams = (0,_utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_1__.encodeQueryString)(params);\n            // dont append a '?' unless parameters are actually present\n            const urlWithQueryString = queryParams === \"\" ? url : url + \"?\" + (0,_utils_encode_query_string_js__WEBPACK_IMPORTED_MODULE_1__.encodeQueryString)(params);\n            if (\n            // This would exceed the maximum length for URLs specified by the consumer and requires POST\n            (options.maxUrlLength &&\n                urlWithQueryString.length > options.maxUrlLength) ||\n                // Or if the customer requires the token to be hidden and it has not already been hidden in the header (for browsers)\n                (params.token && options.hideToken)) {\n                // the consumer specified a maximum length for URLs\n                // and this would exceed it, so use post instead\n                fetchOptions.method = \"POST\";\n                // If the token was already added as a Auth header, add the token back to body with other params instead of header\n                if (token.length && options.hideToken) {\n                    params.token = token;\n                    // Remove existing header that was added before url query length was checked\n                    delete requestHeaders[\"X-Esri-Authorization\"];\n                }\n            }\n            else {\n                // just use GET\n                url = urlWithQueryString;\n            }\n        }\n        /* updateResources currently requires FormData even when the input parameters dont warrant it.\n    https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm\n        see https://github.com/Esri/arcgis-rest-js/pull/500 for more info. */\n        const forceFormData = new RegExp(\"/items/.+/updateResources\").test(url);\n        if (fetchOptions.method === \"POST\") {\n            fetchOptions.body = (0,_utils_encode_form_data_js__WEBPACK_IMPORTED_MODULE_0__.encodeFormData)(params, forceFormData);\n        }\n        // Mixin headers from request options\n        fetchOptions.headers = Object.assign(Object.assign({}, requestHeaders), options.headers);\n        // This should have the same conditional for Node JS as ArcGISIdentityManager.refreshWithUsernameAndPassword()\n        // to ensure that generated tokens have the same referer when used in Node with a username and password.\n        /* istanbul ignore next - karma reports coverage on browser tests only */\n        if ((typeof window === \"undefined\" ||\n            (window && typeof window.document === \"undefined\")) &&\n            !fetchOptions.headers.referer) {\n            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n        }\n        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n        if (!(0,_utils_process_params_js__WEBPACK_IMPORTED_MODULE_2__.requiresFormData)(params) && !forceFormData) {\n            fetchOptions.headers[\"Content-Type\"] =\n                \"application/x-www-form-urlencoded\";\n        }\n        /**\n         * Check for a global fetch first and use it if available. This allows us to use the default\n         * configuration of fetch-mock in tests.\n         */\n        /* istanbul ignore next coverage is based on browser code and we don't test for the absence of global fetch so we can skip the else here. */\n        return globalThis.fetch\n            ? globalThis.fetch(url, fetchOptions)\n            : (0,_esri_arcgis_rest_fetch__WEBPACK_IMPORTED_MODULE_5__.getFetch)().then(({ fetch }) => {\n                return fetch(url, fetchOptions);\n            });\n    })\n        .then((response) => {\n        if (!response.ok) {\n            // server responded w/ an actual error (404, 500, etc)\n            const { status, statusText } = response;\n            throw new _utils_ArcGISRequestError_js__WEBPACK_IMPORTED_MODULE_3__.ArcGISRequestError(statusText, `HTTP ${status}`, response, url, options);\n        }\n        if (rawResponse) {\n            return response;\n        }\n        switch (params.f) {\n            case \"json\":\n                return response.json();\n            case \"geojson\":\n                return response.json();\n            case \"html\":\n                return response.text();\n            case \"text\":\n                return response.text();\n            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n            default:\n                return response.blob();\n        }\n    })\n        .then((data) => {\n        if ((params.f === \"json\" || params.f === \"geojson\") && !rawResponse) {\n            const response = checkForErrors(data, originalUrl, params, options, originalAuthError);\n            if (originalAuthError) {\n                /* If the request was made to an unfederated service that\n                didn't require authentication, add the base url and a dummy token\n                to the list of trusted servers to avoid another federation check\n                in the event of a repeat request */\n                const truncatedUrl = url\n                    .toLowerCase()\n                    .split(/\\/rest(\\/admin)?\\/services\\//)[0];\n                options.authentication.federatedServers[truncatedUrl] = {\n                    token: [],\n                    // default to 24 hours\n                    expires: new Date(Date.now() + 86400 * 1000)\n                };\n                originalAuthError = null;\n            }\n            return response;\n        }\n        else {\n            return data;\n        }\n    });\n}\n/**\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n *\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n *\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n *\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction request(url, requestOptions = { params: { f: \"json\" } }) {\n    return internalRequest(url, requestOptions).catch((e) => {\n        if (e instanceof ArcGISAuthError &&\n            requestOptions.authentication &&\n            typeof requestOptions.authentication !== \"string\" &&\n            requestOptions.authentication.canRefresh &&\n            requestOptions.authentication.refreshCredentials) {\n            return e.retry(() => {\n                return requestOptions.authentication.refreshCredentials();\n            }, 1);\n        }\n        else {\n            return Promise.reject(e);\n        }\n    });\n}\n//# sourceMappingURL=request.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/request.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/revoke-token.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/revoke-token.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"revokeToken\": () => (/* binding */ revokeToken)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/index.js\");\n\n/**\n * Revokes a token generated via any oAuth 2.0 method. `token` can be either a refresh token OR an access token. If you are using  {@linkcode ArcGISIdentityManager} you should use  {@linkcode ArcGISIdentityManager.destroy} instead. Cannot revoke API keys or tokens generated by {@linkcode ApplicationCredentialsManager}.\n *\n * See [`revokeToken`](https://developers.arcgis.com/rest/users-groups-and-items/revoke-token.htm) on the ArcGIS REST API for more details.\n */\nfunction revokeToken(requestOptions) {\n    const url = `${(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.cleanUrl)(requestOptions.portal || \"https://www.arcgis.com/sharing/rest\")}/oauth2/revokeToken/`;\n    const token = requestOptions.token;\n    const clientId = requestOptions.clientId;\n    delete requestOptions.portal;\n    delete requestOptions.clientId;\n    delete requestOptions.token;\n    const options = Object.assign(Object.assign({}, requestOptions), { httpMethod: \"POST\", params: {\n            client_id: clientId,\n            auth_token: token\n        } });\n    return (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, options).then((response) => {\n        if (!response.success) {\n            throw new _index_js__WEBPACK_IMPORTED_MODULE_0__.ArcGISRequestError(\"Unable to revoke token\", 500, response, url, options);\n        }\n        return response;\n    });\n}\n//# sourceMappingURL=revoke-token.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/revoke-token.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/types/feature.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/types/feature.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=feature.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/types/feature.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/types/geometry.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/types/geometry.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=geometry.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/types/geometry.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/types/group.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/types/group.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=group.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/types/group.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/types/service.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/types/service.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=service.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/types/service.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/types/symbol.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/types/symbol.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=symbol.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/types/symbol.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/types/user.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/types/user.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=user.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/types/user.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISAccessDeniedError.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISAccessDeniedError.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArcGISAccessDeniedError\": () => (/* binding */ ArcGISAccessDeniedError)\n/* harmony export */ });\n/* Copyright (c) 2022 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This error code will be thrown by the following methods when the user cancels or denies an authorization request on the OAuth 2.0\n * authorization screen.\n *\n * * {@linkcode ArcGISIdentityManager.beginOAuth2} when the `popup` option is `true`\n * * {@linkcode ArcGISIdentityManager.completeOAuth2}  when the `popup` option is `false`\n *\n * ```js\n * import { ArcGISIdentityManager } from \"@esri/arcgis-rest-request\";\n *\n * ArcGISIdentityManager.beginOAuth2({\n *   clientId: \"***\"\n *   redirectUri: \"***\",\n *   popup: true\n * }).then(authenticationManager => {\n *   console.log(\"OAuth 2.0 Successful\");\n * }).catch(e => {\n *   if(e.name === \"ArcGISAccessDeniedError\") {\n *     console.log(\"The user did not authorize your app.\")\n *   } else {\n *     console.log(\"Something else went wrong. Error:\", e);\n *   }\n * })\n * ```\n */\nclass ArcGISAccessDeniedError extends Error {\n    /**\n     * Create a new `ArcGISAccessDeniedError`  object.\n     */\n    constructor() {\n        const message = \"The user has denied your authorization request.\";\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        this.name = \"ArcGISAccessDeniedError\";\n    }\n}\n//# sourceMappingURL=ArcGISAccessDeniedError.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISAccessDeniedError.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArcGISRequestError\": () => (/* binding */ ArcGISRequestError)\n/* harmony export */ });\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This represents a generic error from an ArcGIS endpoint. There will be details about the error in the {@linkcode ArcGISRequestError.message},  {@linkcode ArcGISRequestError.originalMessage} properties on the error. You\n * can also access the original server response at  {@linkcode ArcGISRequestError.response} which may have additional details.\n *\n * ```js\n * request(someUrl, someOptions).catch(e => {\n *   if(e.name === \"ArcGISRequestError\") {\n *     console.log(\"Something went wrong with the request:\", e);\n *     console.log(\"Full server response\", e.response);\n *   }\n * })\n * ```\n */\nclass ArcGISRequestError extends Error {\n    /**\n     * Create a new `ArcGISRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message, code, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        message = message || \"UNKNOWN_ERROR\";\n        code = code || \"UNKNOWN_ERROR_CODE\";\n        this.name = \"ArcGISRequestError\";\n        this.message =\n            code === \"UNKNOWN_ERROR_CODE\" ? message : `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISRequestError.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArcGISTokenRequestError\": () => (/* binding */ ArcGISTokenRequestError),\n/* harmony export */   \"ArcGISTokenRequestErrorCodes\": () => (/* binding */ ArcGISTokenRequestErrorCodes)\n/* harmony export */ });\n/* Copyright (c) 2022 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * There are 5 potential error codes that might be thrown by {@linkcode ArcGISTokenRequestError}. 2 of these codes are used by both\n * {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager}:\n *\n * * `TOKEN_REFRESH_FAILED` when a request for an new access token fails.\n * * `UNKNOWN_ERROR_CODE` the error is unknown. More information may be available in {@linkcode ArcGISTokenRequestError.response}\n *\n * The 3 remaining error codes will only be thrown when using {@linkcode ArcGISIdentityManager}:\n *\n * * `GENERATE_TOKEN_FOR_SERVER_FAILED` when a request for a token for a specific federated server fails.\n * * `REFRESH_TOKEN_EXCHANGE_FAILED` when a request for a new refresh token fails.\n * * `NOT_FEDERATED` when the requested server isn't federated with the portal specified in {@linkcode ArcGISIdentityManager.portal}.\n */\nvar ArcGISTokenRequestErrorCodes;\n(function (ArcGISTokenRequestErrorCodes) {\n    ArcGISTokenRequestErrorCodes[\"TOKEN_REFRESH_FAILED\"] = \"TOKEN_REFRESH_FAILED\";\n    ArcGISTokenRequestErrorCodes[\"GENERATE_TOKEN_FOR_SERVER_FAILED\"] = \"GENERATE_TOKEN_FOR_SERVER_FAILED\";\n    ArcGISTokenRequestErrorCodes[\"REFRESH_TOKEN_EXCHANGE_FAILED\"] = \"REFRESH_TOKEN_EXCHANGE_FAILED\";\n    ArcGISTokenRequestErrorCodes[\"NOT_FEDERATED\"] = \"NOT_FEDERATED\";\n    ArcGISTokenRequestErrorCodes[\"UNKNOWN_ERROR_CODE\"] = \"UNKNOWN_ERROR_CODE\";\n})(ArcGISTokenRequestErrorCodes || (ArcGISTokenRequestErrorCodes = {}));\n/**\n * This error is thrown when {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager} fails to refresh a token or generate a new token\n * for a request. Generally in this scenario the credentials are invalid for the request and the you should recreate the {@linkcode ApplicationCredentialsManager}\n * or prompt the user to authenticate again with {@linkcode ArcGISIdentityManager}. See {@linkcode ArcGISTokenRequestErrorCodes} for a more detailed description of\n * the possible error codes.\n *\n * ```js\n * request(someUrl, {\n *   authentication: someAuthenticationManager\n * }).catch(e => {\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     // ArcGIS REST JS could not generate an appropriate token for this request\n *     // All credentials are likely invalid and the authentication process should be restarted\n *   }\n * })\n * ```\n */\nclass ArcGISTokenRequestError extends Error {\n    /**\n     * Create a new `ArcGISTokenRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message = \"UNKNOWN_ERROR\", code = ArcGISTokenRequestErrorCodes.UNKNOWN_ERROR_CODE, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        this.name = \"ArcGISTokenRequestError\";\n        this.message = `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISTokenRequestError.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ErrorTypes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ErrorTypes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ErrorTypes\": () => (/* binding */ ErrorTypes)\n/* harmony export */ });\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Enum describing the different errors that might be thrown by a request.\n *\n * ```ts\n * import { request, ErrorTypes } from '@esri/arcgis-rest-request';\n *\n * request(\"...\").catch((e) => {\n *   switch(e.name) {\n *     case ErrorType.ArcGISRequestError:\n *     // handle a general error from the API\n *     break;\n *\n *     case ErrorType.ArcGISAuthError:\n *     // handle an authentication error\n *     break;\n *\n *     case ErrorType.ArcGISAccessDeniedError:\n *     // handle a user denying an authorization request in an oAuth workflow\n *     break;\n *\n *     default:\n *     // handle some other error (usually a network error)\n *   }\n * });\n * ```\n */\nvar ErrorTypes;\n(function (ErrorTypes) {\n    ErrorTypes[\"ArcGISRequestError\"] = \"ArcGISRequestError\";\n    ErrorTypes[\"ArcGISAuthError\"] = \"ArcGISAuthError\";\n    ErrorTypes[\"ArcGISAccessDeniedError\"] = \"ArcGISAccessDeniedError\";\n    ErrorTypes[\"ArcGISTokenRequestError\"] = \"ArcGISTokenRequestError\";\n})(ErrorTypes || (ErrorTypes = {}));\n//# sourceMappingURL=ErrorTypes.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ErrorTypes.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/GrantTypes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/GrantTypes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=GrantTypes.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/GrantTypes.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/HTTPMethods.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/HTTPMethods.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=HTTPMethods.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/HTTPMethods.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IAuthenticationManager.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IAuthenticationManager.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IAuthenticationManager.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IAuthenticationManager.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IFetchTokenParams.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IFetchTokenParams.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IFetchTokenParams.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IFetchTokenParams.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IGenerateTokenParams.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IGenerateTokenParams.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IGenerateTokenParams.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IGenerateTokenParams.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamBuilder.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IParamBuilder.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamBuilder.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParams.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParams.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IParams.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParams.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamsBuilder.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamsBuilder.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IParamsBuilder.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IParamsBuilder.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IRequestOptions.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IRequestOptions.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=IRequestOptions.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/IRequestOptions.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ITokenRequestOptions.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ITokenRequestOptions.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=ITokenRequestOptions.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ITokenRequestOptions.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ResponseFormats.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ResponseFormats.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=ResponseFormats.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ResponseFormats.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"appendCustomParams\": () => (/* binding */ appendCustomParams)\n/* harmony export */ });\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nfunction appendCustomParams(customOptions, keys, baseOptions) {\n    const requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\",\n    ];\n    const options = Object.assign(Object.assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce((value, key) => {\n        if (customOptions[key] ||\n            typeof customOptions[key] === \"boolean\" ||\n            (typeof customOptions[key] === \"number\" && customOptions[key] === 0)) {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce((value, key) => {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n//# sourceMappingURL=append-custom-params.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/base-64-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/base-64-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"base64UrlEncode\": () => (/* binding */ base64UrlEncode)\n/* harmony export */ });\n/**\n * Encodes a `Uint8Array` to base 64. Used internally for hashing the `code_verifier` and `code_challenge` for PKCE.\n */\nfunction base64UrlEncode(value, win = window) {\n    /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n    if (!win && window) {\n        win = window;\n    }\n    return win\n        .btoa(String.fromCharCode.apply(null, value))\n        .replace(/\\+/g, \"-\") // replace + with -\n        .replace(/\\//g, \"_\") // replace / with _\n        .replace(/=+$/, \"\"); // trim trailing =\n}\n//# sourceMappingURL=base-64-url.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/base-64-url.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cleanUrl\": () => (/* binding */ cleanUrl)\n/* harmony export */ });\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nfunction cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n//# sourceMappingURL=clean-url.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeParam\": () => (/* binding */ decodeParam),\n/* harmony export */   \"decodeQueryString\": () => (/* binding */ decodeQueryString)\n/* harmony export */ });\n/* Copyright (c) 2017-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nfunction decodeParam(param) {\n    const [key, value] = param.split(\"=\");\n    return { key: decodeURIComponent(key), value: decodeURIComponent(value) };\n}\n/**\n * Decodes the passed query string as an object.\n *\n * @param query A string to be decoded.\n * @returns A decoded query param object.\n */\nfunction decodeQueryString(query) {\n    if (!query || query.length <= 0) {\n        return {};\n    }\n    return query\n        .replace(/^#/, \"\")\n        .replace(/^\\?/, \"\")\n        .split(\"&\")\n        .reduce((acc, entry) => {\n        const { key, value } = decodeParam(entry);\n        acc[key] = value;\n        return acc;\n    }, {});\n}\n//# sourceMappingURL=decode-query-string.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeFormData\": () => (/* binding */ encodeFormData)\n/* harmony export */ });\n/* harmony import */ var _process_params_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./process-params.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js\");\n/* harmony import */ var _encode_query_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encode-query-string.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js\");\n/* harmony import */ var _esri_arcgis_rest_form_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @esri/arcgis-rest-form-data */ \"./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.mjs\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\n\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nfunction encodeFormData(params, forceFormData) {\n    // see https://github.com/Esri/arcgis-rest-js/issues/499 for more info.\n    const useFormData = (0,_process_params_js__WEBPACK_IMPORTED_MODULE_0__.requiresFormData)(params) || forceFormData;\n    const newParams = (0,_process_params_js__WEBPACK_IMPORTED_MODULE_0__.processParams)(params);\n    if (useFormData) {\n        const formData = new _esri_arcgis_rest_form_data__WEBPACK_IMPORTED_MODULE_2__.FormData();\n        Object.keys(newParams).forEach((key) => {\n            if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n                /* To name the Blob:\n                 1. look to an alternate request parameter called 'fileName'\n                 2. see if 'name' has been tacked onto the Blob manually\n                 3. if all else fails, use the request parameter\n                */\n                const filename = newParams[\"fileName\"] || newParams[key].name || key;\n                formData.append(key, newParams[key], filename);\n            }\n            else {\n                formData.append(key, newParams[key]);\n            }\n        });\n        return formData;\n    }\n    else {\n        return (0,_encode_query_string_js__WEBPACK_IMPORTED_MODULE_1__.encodeQueryString)(params);\n    }\n}\n//# sourceMappingURL=encode-form-data.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeParam\": () => (/* binding */ encodeParam),\n/* harmony export */   \"encodeQueryString\": () => (/* binding */ encodeQueryString)\n/* harmony export */ });\n/* harmony import */ var _process_params_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./process-params.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js\");\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Encodes keys and parameters for use in a URL's query string.\n *\n * @param key Parameter's key\n * @param value Parameter's value\n * @returns Query string with key and value pairs separated by \"&\"\n */\nfunction encodeParam(key, value) {\n    // For array of arrays, repeat key=value for each element of containing array\n    if (Array.isArray(value) && value[0] && Array.isArray(value[0])) {\n        return value\n            .map((arrayElem) => encodeParam(key, arrayElem))\n            .join(\"&\");\n    }\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nfunction encodeQueryString(params) {\n    const newParams = (0,_process_params_js__WEBPACK_IMPORTED_MODULE_0__.processParams)(params);\n    return Object.keys(newParams)\n        .map((key) => {\n        return encodeParam(key, newParams[key]);\n    })\n        .join(\"&\");\n}\n//# sourceMappingURL=encode-query-string.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-code-challenge.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-code-challenge.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateCodeChallenge\": () => (/* binding */ generateCodeChallenge)\n/* harmony export */ });\n/* harmony import */ var _base_64_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-64-url.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/base-64-url.js\");\n\n/**\n * Utility to hash the codeVerifier using sha256\n */\nfunction generateCodeChallenge(codeVerifier, win = window) {\n    /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n    if (!win && window) {\n        win = window;\n    }\n    if (codeVerifier && win.isSecureContext && win.crypto && win.crypto.subtle) {\n        const encoder = new win.TextEncoder();\n        const bytes = encoder.encode(codeVerifier);\n        return win.crypto.subtle\n            .digest(\"SHA-256\", bytes)\n            .then((buffer) => (0,_base_64_url_js__WEBPACK_IMPORTED_MODULE_0__.base64UrlEncode)(new Uint8Array(buffer), win));\n    }\n    return Promise.resolve(null);\n}\n//# sourceMappingURL=generate-code-challenge.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-code-challenge.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-random-string.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-random-string.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateRandomString\": () => (/* binding */ generateRandomString)\n/* harmony export */ });\n/* harmony import */ var _base_64_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-64-url.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/utils/base-64-url.js\");\n\n/**\n * Utility to generate a random string to use as our `code_verifier`\n *\n * @param win the global `window` object for accepting a mock while testing.\n */\nfunction generateRandomString(win) {\n    /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n    if (!win && window) {\n        win = window;\n    }\n    const randomBytes = win.crypto.getRandomValues(new Uint8Array(32));\n    return (0,_base_64_url_js__WEBPACK_IMPORTED_MODULE_0__.base64UrlEncode)(randomBytes);\n}\n//# sourceMappingURL=generate-random-string.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-random-string.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"processParams\": () => (/* binding */ processParams),\n/* harmony export */   \"requiresFormData\": () => (/* binding */ requiresFormData)\n/* harmony export */ });\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nfunction requiresFormData(params) {\n    return Object.keys(params).some(key => {\n        let value = params[key];\n        if (!value) {\n            return false;\n        }\n        if (value && value.toParam) {\n            value = value.toParam();\n        }\n        const type = value.constructor.name;\n        switch (type) {\n            case \"Array\":\n                return false;\n            case \"Object\":\n                return false;\n            case \"Date\":\n                return false;\n            case \"Function\":\n                return false;\n            case \"Boolean\":\n                return false;\n            case \"String\":\n                return false;\n            case \"Number\":\n                return false;\n            default:\n                return true;\n        }\n    });\n}\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nfunction processParams(params) {\n    const newParams = {};\n    Object.keys(params).forEach(key => {\n        var _a, _b;\n        let param = params[key];\n        if (param && param.toParam) {\n            param = param.toParam();\n        }\n        if (!param &&\n            param !== 0 &&\n            typeof param !== \"boolean\" &&\n            typeof param !== \"string\") {\n            return;\n        }\n        const type = param.constructor.name;\n        let value;\n        // properly encodes objects, arrays and dates for arcgis.com and other services.\n        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n        // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n        switch (type) {\n            case \"Array\":\n                // Based on the first element of the array, classify array as an array of arrays, an array of objects\n                // to be stringified, or an array of non-objects to be comma-separated\n                // eslint-disable-next-line no-case-declarations\n                const firstElementType = (_b = (_a = param[0]) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name;\n                value =\n                    firstElementType === \"Array\" ? param : // pass thru array of arrays\n                        firstElementType === \"Object\" ? JSON.stringify(param) : // stringify array of objects\n                            param.join(\",\"); // join other types of array elements\n                break;\n            case \"Object\":\n                value = JSON.stringify(param);\n                break;\n            case \"Date\":\n                value = param.valueOf();\n                break;\n            case \"Function\":\n                value = null;\n                break;\n            case \"Boolean\":\n                value = param + \"\";\n                break;\n            default:\n                value = param;\n                break;\n        }\n        if (value || value === 0 || typeof value === \"string\" || Array.isArray(value)) {\n            newParams[key] = value;\n        }\n    });\n    return newParams;\n}\n//# sourceMappingURL=process-params.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/retryAuthError.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/retryAuthError.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n//# sourceMappingURL=retryAuthError.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/retryAuthError.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"warn\": () => (/* binding */ warn)\n/* harmony export */ });\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nfunction warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n//# sourceMappingURL=warn.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/utils/with-options.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/utils/with-options.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withOptions\": () => (/* binding */ withOptions)\n/* harmony export */ });\n/**\n * Allows you to wrap individual methods with a default set of request options. This is useful to avoid setting the same option more then once and allows for interacting and setting defaults in a functional manner.\n *\n * ```js\n * import { withOptions } from \"@esri/arcgis-rest-request\";\n * import { queryFeatures } from '@esri/arcgis-rest-feature-service';\n *\n * const queryTrails = withOptions({\n *   url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0/\"}, queryFeatures);\n *\n * queryTrails({\n *   where: \"ELEV_FT > 1000\"\n * }).then(result);\n *\n * const queryTrailsAsUser = withOptions({\n *   authentication: ArcGISIdentityManager\n * }, queryTrails);\n *\n * queryTrailsAsUser({\n *   where: \"TRL_NAME LIKE '%backbone%'\"\n * }).then(result);\n * ```\n *\n * @param defaultOptions The options to pass into to the `func`.\n * @param func Any function that accepts anything extending `IRequestOptions` as its last parameter.\n * @returns A copy of `func` with the `defaultOptions` passed in as defaults.\n */\nfunction withOptions(defaultOptions, func) {\n    return (...args) => {\n        const options = typeof args[args.length - 1] === \"object\"\n            ? Object.assign(Object.assign({}, defaultOptions), args.pop()) : defaultOptions;\n        return func(...[...args, options]);\n    };\n}\n//# sourceMappingURL=with-options.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/utils/with-options.js?");

/***/ }),

/***/ "./node_modules/@esri/arcgis-rest-request/dist/esm/validate-app-access.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@esri/arcgis-rest-request/dist/esm/validate-app-access.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateAppAccess\": () => (/* binding */ validateAppAccess)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@esri/arcgis-rest-request/dist/esm/request.js\");\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Validates that the user has access to the application\n * and if they user should be presented a \"View Only\" mode\n *\n * This is only needed/valid for Esri applications that are \"licensed\"\n * and shipped in ArcGIS Online or ArcGIS Enterprise. Most custom applications\n * should not need or use this.\n *\n * ```js\n * import { validateAppAccess } from '@esri/arcgis-rest-auth';\n *\n * return validateAppAccess('your-token', 'theClientId')\n * .then((result) => {\n *    if (!result.value) {\n *      // redirect or show some other ui\n *    } else {\n *      if (result.viewOnlyUserTypeApp) {\n *        // use this to inform your app to show a \"View Only\" mode\n *      }\n *    }\n * })\n * .catch((err) => {\n *  // two possible errors\n *  // invalid clientId: {\"error\":{\"code\":400,\"messageCode\":\"GWM_0007\",\"message\":\"Invalid request\",\"details\":[]}}\n *  // invalid token: {\"error\":{\"code\":498,\"message\":\"Invalid token.\",\"details\":[]}}\n * })\n * ```\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * @param token platform token\n * @param clientId application client id\n * @param portal Optional\n */\nfunction validateAppAccess(token, clientId, portal = \"https://www.arcgis.com/sharing/rest\") {\n    const url = `${portal}/oauth2/validateAppAccess`;\n    const ro = {\n        method: \"POST\",\n        params: {\n            f: \"json\",\n            client_id: clientId,\n            token\n        }\n    };\n    return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.request)(url, ro);\n}\n//# sourceMappingURL=validate-app-access.js.map\n\n//# sourceURL=webpack://feature-layer/./node_modules/@esri/arcgis-rest-request/dist/esm/validate-app-access.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;